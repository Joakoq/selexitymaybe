print([[

    ______              ___ __                   _____      __          _ __       
    / ____/_______  ____/ (_) /______            / ___/___  / /__  _  __(_) /___  __
   / /   / ___/ _ \/ __  / / __/ ___/  ______    \__ \/ _ \/ / _ \| |/_/ / __/ / / /
  / /___/ /  /  __/ /_/ / / /_(__  )  /_____/   ___/ /  __/ /  __/>  </ / /_/ /_/ /
  \____/_/   \___/\__,_/_/\__/____/            /____/\___/_/\___/_/|_/_/\__/\__, /
                                                                           /____/

    D e v e l o p e r s : 
    Cstly, Concat, and Asura (Developers)
    Mizt (Reanimation & ID Player)
    xHeptc (UI Library - Original Coming Soon)

    S c r i p t s : 
    Nebula_Zora (Banisher & Kill Bot)
    Creterisk (Chips)
    Supr14 (Krystal Dance v2)

    Other Converted are Unknown / Rest By Our Team
.
]])
if isfolder("Selexity") then
else
  makefolder("Selexity")
end
pcall(function()
  game:GetService("RunService").RenderStepped:Connect(function()
    setsimulationradius(1000, 1000)
    va.ReplicationFocus = workspace
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Home"):NewSection("Home | Info"):NewButton("Version: v1.4", "Version", function()
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Home"):NewSection("Home | Info"):NewButton("Credits: In Console", "Credits", function()
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Home"):NewSection("Home | Info"):NewButton("Discord: Copy To Clipboard", "Discord", function()
    va("discord.gg/WftzptVEWb")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Fling"):NewSection("Fling | Hats"):NewTextBox("Fling Hat Name", "Fling", function(a)
    a = a
    getgenv().HatName = a
    spawn(function()
      game:GetService("RunService").Heartbeat:Connect(function()
        setsimulationradius(1000)
      end)
      game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName):WaitForChild("Handle"):GetChildren()[1]:Destroy()
      game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Parent = workspace
      wait(3)
      game:GetService("RunService").Heartbeat:Connect(function()
        setsimulationradius(1000)
        va.CanCollide = false
        va.Velocity = Vector3.new(35, 35, 35)
      end)
      game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle.Transparency = 0.4
      Instance.new("SelectionBox", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).Adornee, Instance.new("SelectionBox", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).Parent = game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle, game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle
      Instance.new("SelectionBox", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).Color3 = Color3.fromRGB(255, 255, 255)
      Instance.new("BodyAngularVelocity", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).MaxTorque = Vector3.new(-9223372036854775808, -9223372036854775808, -9223372036854775808)
      Instance.new("BodyAngularVelocity", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).AngularVelocity = Vector3.new(999999, 999999, 999999)
      Instance.new("BodyPosition", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).MaxForce = Vector3.new(math.huge, math.huge, math.huge)
      Instance.new("BodyPosition", game:GetService("Players").LocalPlayer.Character:WaitForChild(getgenv().HatName).Handle).P = 1000000
      game:GetService("RunService").Stepped:Connect(function()
        wait()
        if va == true then
          vb.Position = vc.Torso.Position + Vector3.new(0, -10, 0)
        end
      end)
      game:GetService("Players").LocalPlayer:GetMouse().Button1Down:Connect(function()
        va = false
        game:GetService("RunService").Stepped:Connect(function()
          if va == false then
            wait()
            vb.Position = vc.Hit.Position
            wait(0.1)
            vb.Position = vd.Head.Position + Vector3.new(0, -15, 0)
          end
        end)
      end)
      game:GetService("Players").LocalPlayer:GetMouse().Button1Up:Connect(function()
        va = true
      end)
      game:GetService("Players").LocalPlayer.Character.Humanoid.Died:Connect(function()
        print("Character Died")
        va:Destroy()
      end)
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Reanimations"):NewSection("Reanimate | Reanimations"):NewButton("Reanimate v1 (Best, Can Lag, Slight Jitter)", "Reanimate v1", function()
    spawn(function()
      HumanDied = false
      function Align(a, b, c, d)
        a = a
        Instance.new("AlignPosition", b).Name = "AliP_" .. va
        Instance.new("AlignPosition", b).ApplyAtCenterOfMass = true
        Instance.new("AlignPosition", b).MaxForce = 5772000
        Instance.new("AlignPosition", b).MaxVelocity = math.huge / -9223372036854775808
        Instance.new("AlignPosition", b).ReactionForceEnabled = false
        Instance.new("AlignPosition", b).Responsiveness = 200
        Instance.new("AlignPosition", b).RigidityEnabled = false
        Instance.new("AlignOrientation", b).Name = "AliO_" .. va
        Instance.new("AlignOrientation", b).MaxAngularVelocity = math.huge / -9223372036854775808
        Instance.new("AlignOrientation", b).MaxTorque = 5772000
        Instance.new("AlignOrientation", b).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", b).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", b).Responsiveness = 200
        Instance.new("AlignOrientation", b).RigidityEnabled = false
        Instance.new("Attachment", b).Name = "Ath_" .. va
        Instance.new("Attachment", a).Name = "Ath_" .. va
        Instance.new("Attachment", b).Orientation = d or Vector3.new(0, 0, 0)
        Instance.new("AlignOrientation", b).Attachment0, Instance.new("AlignOrientation", b).Attachment1, Instance.new("AlignPosition", b).Attachment0, Instance.new("AlignPosition", b).Attachment1, Instance.new("Attachment", b).Position = Instance.new("Attachment", a), Instance.new("Attachment", b), Instance.new("Attachment", a), Instance.new("Attachment", b), c or Vector3.new(0, 0, 0)
        va = va + 1
        game:GetService("RunService").Stepped:Connect(function()
          va.RotVelocity = Vector3.new(0, 25, 0)
          va.Velocity = Vector3.new(0, -30, 0)
          for fd, fe in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if fe:IsA("Part") then
              fe.CanCollide = false
            end
            if fe:IsA("Accessory") then
              fe.Handle.CanCollide = false
            end
          end
        end)
        return {
          Instance.new("AlignPosition", b),
          Instance.new("AlignOrientation", b),
          Instance.new("Attachment", b),
          (Instance.new("Attachment", a))
        }
      end
      if _G.netted ~= true then
        _G.netted = true
        coroutine.wrap(function()
          settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
          settings().Physics.AllowSleep = false
        end)()
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Archivable = true
      for fh, fj in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fj:IsA("Accessory") then
          if {
            [fj.Name] = {},
            [fj.Name] = "s"
          }[fj.Name] then
            if {
              [fj.Name] = {},
              [fj.Name] = "s"
            }[fj.Name] == "s" then
            end
            table.insert({
              [fj.Name] = {},
              [fj.Name] = "s"
            }[fj.Name], fj)
          else
          end
        end
      end
      do return end
      while true do
        if type(nil) == "table" then
          for fp, fn in pairs(nil) do
            fn.Name = fn.Name .. 1
          end
        end
      end
      Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character).Name = "Dummy"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part0 = nil
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Parent = Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character)
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().HumanoidRootPart.CFrame = game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.BreakJointsOnDeath = false
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Name = "Dummy"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.DisplayDistanceType = "None"
      for fm, fo in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fo:IsA("Accessory") then
          if fo.Handle:FindFirstChildOfClass("Weld") then
            fo.Handle:FindFirstChildOfClass("Weld"):Destroy()
          end
          fo.Handle.Massless = true
          fo.Handle.CanCollide = false
          coroutine.wrap(function()
            if va then
              Align(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[1].Parent = vd:FindFirstChild(vb.Name).Handle
              Align(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[2].Parent = vd:FindFirstChild(vb.Name).Handle
              while true do
                game:GetService("RunService").RenderStepped:wait()
                if HumanDied then
                  break
                end
                coroutine.wrap(function()
                  if va.Attachment1 == vb then
                    vc.CFrame = vc.CFrame:lerp(vd.Torso.CFrame * CFrame.new(0, 1.5, 0) * ve[vg].CFrame * vc[vg].CFrame:inverse(), 1)
                  else
                    vh.Handle.CFrame = vh.Handle.CFrame:lerp(va.Attachment1.Parent.CFrame * CFrame.new(va.Attachment1.Position) * CFrame.Angles(math.rad(va.Attachment1.Rotation.X), math.rad(va.Attachment1.Rotation.Y), math.rad(va.Attachment1.Rotation.Z)), 1)
                  end
                end)()
              end
            else
              Align(vb.Handle, vd[vb.Name].Handle, Vector3.new(0, 0, 0), Vector3.new(0, 0, 0))
            end
          end)()
        end
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part0 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "torso"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Neck:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.PrimaryPart, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone(), game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Health = 0
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "Torso"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal").Transparency = 1
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate"):Destroy()
      end
      function UnCollide()
        if HumanDied then
          va:Disconnect()
          return
        end
        for fd, fe in next, vb:GetChildren() do
          if fe:IsA("BasePart") then
            fe.CanCollide = false
          end
        end
      end
      Instance.new("BindableEvent").Event:connect(function()
        game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
        va:Destroy()
        HumanDied = true
        pcall(function()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
          va.Head:Destroy()
          va:FindFirstChildOfClass("Humanoid"):Destroy()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
          if va:FindFirstChildOfClass("Folder") then
            va:FindFirstChildOfClass("Folder"):Destroy()
          end
        end)
      end)
      game:GetService("StarterGui"):SetCore("ResetButtonCallback", (Instance.new("BindableEvent")))
      coroutine.wrap(function()
        while true do
          game:GetService("RunService").RenderStepped:wait()
          if 0 >= vb:FindFirstChildOfClass("Humanoid").Health then
            HumanDied = true
            pcall(function()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
              va.Head:Destroy()
              va:FindFirstChildOfClass("Humanoid"):Destroy()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
              if va:FindFirstChildOfClass("Folder") then
                va:FindFirstChildOfClass("Folder"):Destroy()
              end
            end)
            if vc then
              game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
              vc:Destroy()
            end
            break
          end
        end
      end)()
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Leg"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head)
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso)
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Arm"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Arm"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Leg"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Leg"])
      for fu, fy in pairs(game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren()) do
        if fy:IsA("BasePart") and fy.Name ~= "Head" then
        elseif fy:IsA("BasePart") and fy.Name == "Head" then
          coroutine.wrap(function()
            while true do
              game:GetService("RunService").RenderStepped:wait()
              if HumanDied then
                break
              end
              va.CFrame = vb.Torso.CFrame * CFrame.new(0, 1.5, 0)
            end
          end)()
        end
      end
      for fu, fy in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():GetDescendants() do
        if fy:IsA("Part") then
          fy.Transparency = 1
        end
      end
      game:GetService("RunService").RenderStepped:wait()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()
      game:FindFirstChildOfClass("Workspace"):FindFirstChildOfClass("Camera").CameraSubject = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid
      for fu, fy in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fy:IsA("Accessory") then
          if fy.Handle:FindFirstChildOfClass("Weld") then
            fy.Handle:FindFirstChildOfClass("Weld"):Destroy()
          end
          if fy.Handle:FindFirstChildOfClass("AccessoryWeld") then
            fy.Handle:FindFirstChildOfClass("AccessoryWeld"):Destroy()
          end
          if fy.Handle:FindFirstChildOfClass("BodyBackAttachment") then
            fy.Handle:FindFirstChildOfClass("BodyBackAttachment"):Destroy()
          end
        end
      end
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fz, fq in pairs(workspace[game.Players.LocalPlayer.Name].Torso:GetChildren()) do
        if fq:IsA("Attachment") and not string.find(fq.Name:lower(), "attachment") then
          fq:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy.Torso).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fQ, fW in pairs(workspace[game.Players.LocalPlayer.Name]["Right Arm"]:GetChildren()) do
        if fW:IsA("Attachment") and not string.find(fW.Name:lower(), "attachment") then
          fW:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Right Arm"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fT, fY in pairs(workspace[game.Players.LocalPlayer.Name]["Left Arm"]:GetChildren()) do
        if fY:IsA("Attachment") and not string.find(fY.Name:lower(), "attachment") then
          fY:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Left Arm"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fO, fP in pairs(workspace[game.Players.LocalPlayer.Name]["Left Leg"]:GetChildren()) do
        if fP:IsA("Attachment") and not string.find(fP.Name:lower(), "attachment") then
          fP:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Left Leg"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fD, fG in pairs(workspace[game.Players.LocalPlayer.Name]["Right Leg"]:GetChildren()) do
        if fG:IsA("Attachment") and not string.find(fG.Name:lower(), "attachment") then
          fG:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Right Leg"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      for fJ, fK in pairs(workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
        if fK.ClassName == "Accessory" then
          workspace.FallenPartsDestroyHeight = 0 / 0
          for fB, fN in pairs(fK.Handle:GetChildren()) do
            if fN:IsA("Attachment") and not string.find(fN.Name:lower(), "attachment") then
              fN:Destroy()
            end
          end
          for fB, fN in pairs(workspace[game.Players.LocalPlayer.Name].Dummy.Dummy:GetChildren()) do
            if fN.Name == fK.Name then
              Instance.new("Attachment", fN.Handle).Name = "nil"
              coroutine.wrap(function()
              end)()
            end
          end
        end
      end
      game.Players.LocalPlayer.Character.Animate:Clone().Parent = game.Players.LocalPlayer.Character
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Reanimations"):NewSection("Reanimate | Reanimations"):NewButton("Reanimate v2 (Jitter, Fairly Stable)", "Reanimate v2", function()
    spawn(function()
      spawn(function()
        while wait() do
          sethiddenproperty(game:GetService("Players").LocalPlayer, "SimulationRadius", 1000)
        end
      end)
      wait(0.5)
      HumanDied = false
      function swag(a, b, c, d)
        a = a
        Instance.new("AlignPosition", b).Name = "AliP_" .. va
        Instance.new("AlignPosition", b).ApplyAtCenterOfMass = true
        Instance.new("AlignPosition", b).MaxForce = 5772000
        Instance.new("AlignPosition", b).MaxVelocity = math.huge / -9223372036854775808
        Instance.new("AlignPosition", b).ReactionForceEnabled = false
        Instance.new("AlignPosition", b).Responsiveness = 200
        Instance.new("AlignPosition", b).RigidityEnabled = false
        Instance.new("AlignOrientation", b).Name = "AliO_" .. va
        Instance.new("AlignOrientation", b).MaxAngularVelocity = math.huge / -9223372036854775808
        Instance.new("AlignOrientation", b).MaxTorque = 5772000
        Instance.new("AlignOrientation", b).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", b).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", b).Responsiveness = 200
        Instance.new("AlignOrientation", b).RigidityEnabled = false
        Instance.new("Attachment", b).Name = "Ath_" .. va
        Instance.new("Attachment", a).Name = "Ath_" .. va
        Instance.new("Attachment", b).Orientation = d or Vector3.new(0, 0, 0)
        Instance.new("AlignOrientation", b).Attachment0, Instance.new("AlignOrientation", b).Attachment1, Instance.new("AlignPosition", b).Attachment0, Instance.new("AlignPosition", b).Attachment1, Instance.new("Attachment", b).Position = Instance.new("Attachment", a), Instance.new("Attachment", b), Instance.new("Attachment", a), Instance.new("Attachment", b), c or Vector3.new(0, 0, 0)
        va = va + 1
        Instance.new("BodyVelocity", v).Velocity = Vector3.new(0, 0, 0)
        Instance.new("BodyVelocity", v).MaxForce = Vector3.new(0, 0, 0)
        game:GetService("RunService").Stepped:Connect(function()
          va.Velocity = Vector3.new(26.5, 0, 0)
          for fd, fe in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if fe:IsA("Part") then
              fe.CanCollide = false
            end
          end
        end)
        spawn(function()
          while true do
            wait()
            va.Velocity = Vector3.new(26.5, 0, 0)
            setsimulationradius(1000)
          end
        end)
        spawn(function()
          while true do
            va.Velocity = Vector3.new(26.5, 0, 0)
            setsimulationradius(1000)
            wait()
          end
        end)
        game:GetService("RunService").Heartbeat:Connect(function()
          va.Velocity = Vector3.new(26.5, 0, 0)
        end)
        return {
          Instance.new("AlignPosition", b),
          Instance.new("AlignOrientation", b),
          Instance.new("Attachment", b),
          (Instance.new("Attachment", a))
        }
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Archivable = true
      for fg, fh in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fh:IsA("Accessory") then
          if {
            [fh.Name] = {},
            [fh.Name] = "s"
          }[fh.Name] then
            if {
              [fh.Name] = {},
              [fh.Name] = "s"
            }[fh.Name] == "s" then
            end
            table.insert({
              [fh.Name] = {},
              [fh.Name] = "s"
            }[fh.Name], fh)
          else
          end
        end
      end
      do return end
      while true do
        if type(nil) == "table" then
          for fo, fp in pairs(nil) do
            fp.Name = fp.Name .. 1
          end
        end
      end
      Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character).Name = "DMYF"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part0 = nil
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Parent = Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character)
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().HumanoidRootPart.CFrame = game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.BreakJointsOnDeath = false
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Name = "non"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.DisplayDistanceType = "None"
      for fl, fm in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fm:IsA("Accessory") then
          if fm.Handle:FindFirstChildOfClass("Weld") then
            fm.Handle:FindFirstChildOfClass("Weld"):Destroy()
          end
          fm.Handle.Massless = true
          fm.Handle.CanCollide = false
          coroutine.wrap(function()
            if va then
              swag(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[1].Parent = vd:FindFirstChild(vb.Name).Handle
              swag(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[2].Parent = vd:FindFirstChild(vb.Name).Handle
              Instance.new("BodyVelocity", vb).Velocity = Vector3.new(0, 0, 0)
              Instance.new("BodyVelocity", vb).MaxForce = Vector3.new(0, 0, 0)
              while true do
                game:GetService("RunService").RenderStepped:wait()
                if HumanDied then
                  break
                end
                coroutine.wrap(function()
                  if va.Attachment1 == vb then
                    vc.CFrame = vc.CFrame:lerp(vd.Torso.CFrame * CFrame.new(0, 1.5, 0) * ve[vg].CFrame * vc[vg].CFrame:inverse(), 1)
                  else
                    vh.Handle.CFrame = vh.Handle.CFrame:lerp(va.Attachment1.Parent.CFrame * CFrame.new(va.Attachment1.Position) * CFrame.Angles(math.rad(va.Attachment1.Rotation.X), math.rad(va.Attachment1.Rotation.Y), math.rad(va.Attachment1.Rotation.Z)), 1)
                  end
                end)()
              end
            else
              swag(vb.Handle, vd[vb.Name].Handle, Vector3.new(0, 0, 0), Vector3.new(0, 0, 0))
            end
          end)()
        end
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part0 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "torso"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Neck:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.PrimaryPart, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone().Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Name = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone(), game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character, "CstlySkidsFromMizt"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Health = 0
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "Torso"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal").Transparency = 1
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate"):Destroy()
      end
      function UnCollide()
        if HumanDied then
          va:Disconnect()
          return
        end
        for fd, fe in next, vb:GetChildren() do
          if fe:IsA("BasePart") then
            fe.CanCollide = false
          end
        end
      end
      Instance.new("BindableEvent").Event:connect(function()
        game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
        va:Destroy()
        HumanDied = true
        pcall(function()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
          va.Head:Destroy()
          va:FindFirstChildOfClass("Humanoid"):Destroy()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
          if va:FindFirstChildOfClass("Folder") then
            va:FindFirstChildOfClass("Folder"):Destroy()
          end
        end)
      end)
      game:GetService("StarterGui"):SetCore("ResetButtonCallback", (Instance.new("BindableEvent")))
      coroutine.wrap(function()
        while true do
          game:GetService("RunService").RenderStepped:wait()
          if vb:FindFirstChildOfClass("Humanoid").Health <= 0 then
            HumanDied = true
            pcall(function()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
              va.Head:Destroy()
              va:FindFirstChildOfClass("Humanoid"):Destroy()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
              if va:FindFirstChildOfClass("Folder") then
                va:FindFirstChildOfClass("Folder"):Destroy()
              end
            end)
            if vc then
              game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
              vc:Destroy()
            end
            break
          end
        end
      end)()
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head)
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso)
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Arm"])
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Arm"])
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Leg"])
      swag(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Leg"])
      for ft, fu in pairs(game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren()) do
        if fu:IsA("BasePart") and fu.Name == "Head" then
          coroutine.wrap(function()
            while true do
              game:GetService("RunService").RenderStepped:wait()
              if HumanDied then
                break
              end
              va.CFrame = vb.Torso.CFrame * CFrame.new(0, 1.5, 0)
            end
          end)()
        end
      end
      for ft, fu in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():GetDescendants() do
        if fu:IsA("Part") then
          fu.Transparency = 1
        end
      end
      game:GetService("RunService").RenderStepped:wait()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()
      game:FindFirstChildOfClass("Workspace"):FindFirstChildOfClass("Camera").CameraSubject = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid
      for ft, fu in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fu:IsA("Accessory") and fu.Handle:FindFirstChildOfClass("Weld") then
          fu.Handle:FindFirstChildOfClass("Weld"):Destroy()
        end
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate"):Clone() then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate"):Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Reanimations"):NewSection("Reanimate | Reanimations"):NewButton("Reanimate v3 (Jitter, Fling)", "Reanimate v3", function()
    spawn(function()
      HumanDied = false
      function Align(a, b, c, d)
        a = a
        Instance.new("AlignPosition", b).Name = "AliP_" .. va
        Instance.new("AlignPosition", b).ApplyAtCenterOfMass = true
        Instance.new("AlignPosition", b).MaxForce = 5772000
        Instance.new("AlignPosition", b).MaxVelocity = math.huge / -9223372036854775808
        Instance.new("AlignPosition", b).ReactionForceEnabled = false
        Instance.new("AlignPosition", b).Responsiveness = 200
        Instance.new("AlignPosition", b).RigidityEnabled = false
        Instance.new("AlignOrientation", b).Name = "AliO_" .. va
        Instance.new("AlignOrientation", b).MaxAngularVelocity = math.huge / -9223372036854775808
        Instance.new("AlignOrientation", b).MaxTorque = 5772000
        Instance.new("AlignOrientation", b).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", b).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", b).Responsiveness = 200
        Instance.new("AlignOrientation", b).RigidityEnabled = false
        Instance.new("Attachment", b).Name = "Ath_" .. va
        Instance.new("Attachment", a).Name = "Ath_" .. va
        Instance.new("Attachment", b).Orientation = d or Vector3.new(0, 0, 0)
        Instance.new("AlignOrientation", b).Attachment0, Instance.new("AlignOrientation", b).Attachment1, Instance.new("AlignPosition", b).Attachment0, Instance.new("AlignPosition", b).Attachment1, Instance.new("Attachment", b).Position = Instance.new("Attachment", a), Instance.new("Attachment", b), Instance.new("Attachment", a), Instance.new("Attachment", b), c or Vector3.new(0, 0, 0)
        va = va + 1
        game:GetService("RunService").Stepped:Connect(function()
          va.RotVelocity = Vector3.new(0, 25, 0)
          va.Velocity = Vector3.new(1000, 0, 1000)
          for fd, fe in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
            if fe:IsA("Part") then
              fe.CanCollide = false
            end
            if fe:IsA("Accessory") then
              fe.Handle.CanCollide = false
            end
          end
        end)
        return {
          Instance.new("AlignPosition", b),
          Instance.new("AlignOrientation", b),
          Instance.new("Attachment", b),
          (Instance.new("Attachment", a))
        }
      end
      if _G.netted ~= true then
        _G.netted = true
        coroutine.wrap(function()
          settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
          settings().Physics.AllowSleep = false
        end)()
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Archivable = true
      for fh, fj in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fj:IsA("Accessory") then
          if {
            [fj.Name] = {},
            [fj.Name] = "s"
          }[fj.Name] then
            if {
              [fj.Name] = {},
              [fj.Name] = "s"
            }[fj.Name] == "s" then
            end
            table.insert({
              [fj.Name] = {},
              [fj.Name] = "s"
            }[fj.Name], fj)
          else
          end
        end
      end
      do return end
      while true do
        if type(nil) == "table" then
          for fp, fn in pairs(nil) do
            fn.Name = fn.Name .. 1
          end
        end
      end
      Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character).Name = "Dummy"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChild("Animate"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():FindFirstChildOfClass("Folder"):Destroy()
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part0 = nil
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso:FindFirstChild("Neck"):Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Parent = Instance.new("Folder", game:FindFirstChildOfClass("Players").LocalPlayer.Character)
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().HumanoidRootPart.CFrame = game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.BreakJointsOnDeath = false
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Name = "Dummy"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid.DisplayDistanceType = "None"
      for fm, fo in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fo:IsA("Accessory") then
          if fo.Handle:FindFirstChildOfClass("Weld") then
            fo.Handle:FindFirstChildOfClass("Weld"):Destroy()
          end
          fo.Handle.Massless = true
          fo.Handle.CanCollide = false
          coroutine.wrap(function()
            if va then
              Align(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[1].Parent = vd:FindFirstChild(vb.Name).Handle
              Align(vb.Handle, vc.Torso, Vector3.new(0, 1.5, 0) + (vc.Head[va].Position + vb.Handle[va].Position * -1), Vector3.new(0, 0, 0))[2].Parent = vd:FindFirstChild(vb.Name).Handle
              while true do
                game:GetService("RunService").RenderStepped:wait()
                if HumanDied then
                  break
                end
                coroutine.wrap(function()
                  if va.Attachment1 == vb then
                    vc.CFrame = vc.CFrame:lerp(vd.Torso.CFrame * CFrame.new(0, 1.5, 0) * ve[vg].CFrame * vc[vg].CFrame:inverse(), 1)
                  else
                    vh.Handle.CFrame = vh.Handle.CFrame:lerp(va.Attachment1.Parent.CFrame * CFrame.new(va.Attachment1.Position) * CFrame.Angles(math.rad(va.Attachment1.Rotation.X), math.rad(va.Attachment1.Rotation.Y), math.rad(va.Attachment1.Rotation.Z)), 1)
                  end
                end)()
              end
            else
              Align(vb.Handle, vd[vb.Name].Handle, Vector3.new(0, 0, 0), Vector3.new(0, 0, 0))
            end
          end)()
        end
      end
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent = game:FindFirstChildOfClass("Workspace")
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part0 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.Part1 = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "torso"
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Neck:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.PrimaryPart, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone().Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone(), game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone().Health = 0
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.HumanoidRootPart:Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid.Parent, game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Parent = game:FindFirstChildOfClass("Players").LocalPlayer.Character, game:FindFirstChildOfClass("Players").LocalPlayer.Character
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Humanoid:Clone():Destroy()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso.Name = "Torso"
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head:FindFirstChildOfClass("Decal").Transparency = 1
      end
      if game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate") then
        game:FindFirstChildOfClass("Players").LocalPlayer.Character:FindFirstChild("Animate"):Destroy()
      end
      function UnCollide()
        if HumanDied then
          va:Disconnect()
          return
        end
        for fd, fe in next, vb:GetChildren() do
          if fe:IsA("BasePart") then
            fe.CanCollide = false
          end
        end
      end
      Instance.new("BindableEvent").Event:connect(function()
        game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
        va:Destroy()
        HumanDied = true
        pcall(function()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
          va.Head:Destroy()
          va:FindFirstChildOfClass("Humanoid"):Destroy()
          game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
          if va:FindFirstChildOfClass("Folder") then
            va:FindFirstChildOfClass("Folder"):Destroy()
          end
        end)
      end)
      game:GetService("StarterGui"):SetCore("ResetButtonCallback", (Instance.new("BindableEvent")))
      coroutine.wrap(function()
        while true do
          game:GetService("RunService").RenderStepped:wait()
          if 0 >= vb:FindFirstChildOfClass("Humanoid").Health then
            HumanDied = true
            pcall(function()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = va
              va.Head:Destroy()
              va:FindFirstChildOfClass("Humanoid"):Destroy()
              game:FindFirstChildOfClass("Players").LocalPlayer.Character = vb
              if va:FindFirstChildOfClass("Folder") then
                va:FindFirstChildOfClass("Folder"):Destroy()
              end
            end)
            if vc then
              game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
              vc:Destroy()
            end
            break
          end
        end
      end)()
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Leg"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Head, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Head)
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character.Torso, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Torso)
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Arm"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Arm"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Arm"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Left Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Left Leg"])
      Align(game:FindFirstChildOfClass("Players").LocalPlayer.Character["Right Leg"], game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()["Right Leg"])
      for fu, fy in pairs(game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren()) do
        if fy:IsA("BasePart") and fy.Name ~= "Head" then
        elseif fy:IsA("BasePart") and fy.Name == "Head" then
          coroutine.wrap(function()
            while true do
              game:GetService("RunService").RenderStepped:wait()
              if HumanDied then
                break
              end
              va.CFrame = vb.Torso.CFrame * CFrame.new(0, 1.5, 0)
            end
          end)()
        end
      end
      for fu, fy in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone():GetDescendants() do
        if fy:IsA("Part") then
          fy.Transparency = 1
        end
      end
      game:GetService("RunService").RenderStepped:wait()
      game:FindFirstChildOfClass("Players").LocalPlayer.Character = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone()
      game:FindFirstChildOfClass("Workspace"):FindFirstChildOfClass("Camera").CameraSubject = game:FindFirstChildOfClass("Players").LocalPlayer.Character:Clone().Humanoid
      for fu, fy in next, game:FindFirstChildOfClass("Players").LocalPlayer.Character:GetChildren() do
        if fy:IsA("Accessory") then
          if fy.Handle:FindFirstChildOfClass("Weld") then
            fy.Handle:FindFirstChildOfClass("Weld"):Destroy()
          end
          if fy.Handle:FindFirstChildOfClass("AccessoryWeld") then
            fy.Handle:FindFirstChildOfClass("AccessoryWeld"):Destroy()
          end
          if fy.Handle:FindFirstChildOfClass("BodyBackAttachment") then
            fy.Handle:FindFirstChildOfClass("BodyBackAttachment"):Destroy()
          end
        end
      end
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fz, fq in pairs(workspace[game.Players.LocalPlayer.Name].Torso:GetChildren()) do
        if fq:IsA("Attachment") and not string.find(fq.Name:lower(), "attachment") then
          fq:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy.Torso).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fQ, fW in pairs(workspace[game.Players.LocalPlayer.Name]["Right Arm"]:GetChildren()) do
        if fW:IsA("Attachment") and not string.find(fW.Name:lower(), "attachment") then
          fW:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Right Arm"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fT, fY in pairs(workspace[game.Players.LocalPlayer.Name]["Left Arm"]:GetChildren()) do
        if fY:IsA("Attachment") and not string.find(fY.Name:lower(), "attachment") then
          fY:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Left Arm"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fO, fP in pairs(workspace[game.Players.LocalPlayer.Name]["Left Leg"]:GetChildren()) do
        if fP:IsA("Attachment") and not string.find(fP.Name:lower(), "attachment") then
          fP:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Left Leg"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      workspace.FallenPartsDestroyHeight = 0 / 0
      for fD, fG in pairs(workspace[game.Players.LocalPlayer.Name]["Right Leg"]:GetChildren()) do
        if fG:IsA("Attachment") and not string.find(fG.Name:lower(), "attachment") then
          fG:Destroy()
        end
      end
      Instance.new("Attachment", workspace[game.Players.LocalPlayer.Name].Dummy.Dummy["Right Leg"]).Name = "nil"
      coroutine.wrap(function()
      end)()
      for fJ, fK in pairs(workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
        if fK.ClassName == "Accessory" then
          workspace.FallenPartsDestroyHeight = 0 / 0
          for fB, fN in pairs(fK.Handle:GetChildren()) do
            if fN:IsA("Attachment") and not string.find(fN.Name:lower(), "attachment") then
              fN:Destroy()
            end
          end
          for fB, fN in pairs(workspace[game.Players.LocalPlayer.Name].Dummy.Dummy:GetChildren()) do
            if fN.Name == fK.Name then
              Instance.new("Attachment", fN.Handle).Name = "nil"
              coroutine.wrap(function()
              end)()
            end
          end
        end
      end
      game.Players.LocalPlayer.Character.Animate:Clone().Parent = game.Players.LocalPlayer.Character
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Chips", "Chips", function()
    char = game.Players.LocalPlayer.Character
    Run = game:GetService("RunService")
    char.Animate:Destroy()
    spawn(function()
      wait(0.0166666666666667)
      cam = game.Workspace.CurrentCamera
      CF = CFrame.new
      angles = CFrame.Angles
      attack = false
      Euler = CFrame.fromEulerAnglesXYZ
      Rad = math.rad
      IT = Instance.new
      BrickC = BrickColor.new
      Cos = math.cos
      Acos = math.acos
      Sin = math.sin
      Asin = math.asin
      Abs = math.abs
      Mrandom = math.random
      Floor = math.floor
      RSH, LSH = nil, nil
      RW = Instance.new("Weld")
      LW = Instance.new("Weld")
      RH = game.Players.LocalPlayer.Character.Torso["Right Hip"]
      LH = game.Players.LocalPlayer.Character.Torso["Left Hip"]
      RSH = game.Players.LocalPlayer.Character.Torso["Right Shoulder"]
      LSH = game.Players.LocalPlayer.Character.Torso["Left Shoulder"]
      RSH.Parent = nil
      LSH.Parent = nil
      RW.Name = "RW"
      RW.Part0 = game.Players.LocalPlayer.Character.Torso
      RW.C0 = CF(1.5, 0.5, 0)
      RW.C1 = CF(0, 0.5, 0)
      RW.Part1 = game.Players.LocalPlayer.Character["Right Arm"]
      RW.Parent = game.Players.LocalPlayer.Character.Torso
      LW.Name = "LW"
      LW.Part0 = game.Players.LocalPlayer.Character.Torso
      LW.C0 = CF(-1.5, 0.5, 0)
      LW.C1 = CF(0, 0.5, 0)
      LW.Part1 = game.Players.LocalPlayer.Character["Left Arm"]
      LW.Parent = game.Players.LocalPlayer.Character.Torso
      Effects = {}
      function newWeld(a, b, c, d, e)
        a = a
        Instance.new("Weld", b).Part0 = a
        Instance.new("Weld", b).Part1 = b
        Instance.new("Weld", b).C0 = CFrame.new(c, d, e)
      end
      newWeld(game.Players.LocalPlayer.Character.Torso, game.Players.LocalPlayer.Character["Left Leg"], -0.5, -1, 0)
      game.Players.LocalPlayer.Character["Left Leg"].Weld.C1 = CFrame.new(0, 1, 0)
      newWeld(game.Players.LocalPlayer.Character.Torso, game.Players.LocalPlayer.Character["Right Leg"], 0.5, -1, 0)
      game.Players.LocalPlayer.Character["Right Leg"].Weld.C1 = CFrame.new(0, 1, 0)
      ArtificialHB = Instance.new("BindableEvent", script)
      ArtificialHB.Name = "Heartbeat"
      script:WaitForChild("Heartbeat")
      frame = 0.0166666666666667
      tf = 0
      allowframeloss = false
      tossremainder = false
      lastframe = tick()
      script.Heartbeat:Fire()
      game:GetService("RunService").Heartbeat:connect(function(a, b)
        a = a
        tf = tf + a
        if tf >= frame then
          if allowframeloss then
            script.Heartbeat:Fire()
            lastframe = tick()
          else
            for fg = 1, math.floor(tf / frame) do
              script.Heartbeat:Fire()
            end
            lastframe = tick()
          end
          if tossremainder then
            tf = 0
          else
            tf = tf - frame * math.floor(tf / frame)
          end
        end
      end)
      function swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          game:service("RunService").Stepped:wait(0)
        else
          for fe = 0, a do
            game:service("RunService").Stepped:wait(0)
          end
        end
      end
      function thread(a)
        a = a
        coroutine.resume(coroutine.create(a))
      end
      function clerp(a, b, c)
        a = a
        return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
          QuaternionFromCFrame(a)
        }, {
          QuaternionFromCFrame(b)
        }, c))
      end
      function QuaternionFromCFrame(a)
        a = a
        if 0 < a:components() + a:components() + a:components() then
          return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
        else
          if 1 == 0 then
          end
          if 2 == 0 then
            return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          elseif 2 == 1 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
          elseif 2 == 2 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          end
        end
      end
      function QuaternionToCFrame(a, b, c, d, e, g, h)
        a = a
        return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
      end
      function QuaternionSlerp(a, b, c)
        a = a
        if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
          if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
          else
          end
        elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
        return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
      end
      function rayCast(a, b, c, d)
        a = a
        return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
      end
      loadstring(game:HttpGet("https://paste.ee/r/oPpQI"))()
      CFuncs = {
        Part = {
          Create = function(a, b, c, d, e, g, h)
            a = a
            RemoveOutlines((va("Part")({
              Parent = a,
              Reflectance = c,
              Transparency = d,
              CanCollide = false,
              Locked = true,
              BrickColor = BrickColor.new(tostring(e)),
              Name = g,
              Size = h,
              Material = b
            })))
            return (va("Part")({
              Parent = a,
              Reflectance = c,
              Transparency = d,
              CanCollide = false,
              Locked = true,
              BrickColor = BrickColor.new(tostring(e)),
              Name = g,
              Size = h,
              Material = b
            }))
          end
        },
        Mesh = {
          Create = function(a, b, c, d, e, g)
            a = a
            if a == "SpecialMesh" then
              va(a)({
                Parent = b,
                Offset = e,
                Scale = g
              }).MeshType = c
              va(a)({
                Parent = b,
                Offset = e,
                Scale = g
              }).MeshId = d
            end
            return (va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }))
          end
        },
        Mesh = {
          Create = function(a, b, c, d, e, g)
            a = a
            if a == "SpecialMesh" then
              va(a)({
                Parent = b,
                Offset = e,
                Scale = g
              }).MeshType = c
              va(a)({
                Parent = b,
                Offset = e,
                Scale = g
              }).MeshId = d
            end
            return (va(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }))
          end
        },
        Weld = {
          Create = function(a, b, c, d, e)
            a = a
            return (va("Weld")({
              Parent = a,
              Part0 = b,
              Part1 = c,
              C0 = d,
              C1 = e
            }))
          end
        },
        Sound = {
          Create = function(a, b, c, d)
            a = a
            coroutine.resume(coroutine.create(function()
              wait()
              va("Sound")({
                Volume = vb,
                Pitch = vc or 1,
                SoundId = vd,
                Parent = ve or workspace
              }):play()
              game:GetService("Debris"):AddItem(va("Sound")({
                Volume = vb,
                Pitch = vc or 1,
                SoundId = vd,
                Parent = ve or workspace
              }), 6)
            end))
          end
        },
        ParticleEmitter = {
          Create = function(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r, s, t, u, y, z)
            a = a
            return (va("ParticleEmitter")({
              Parent = a,
              Color = ColorSequence.new(b, c),
              LightEmission = d,
              Size = e,
              Texture = g,
              Transparency = h,
              ZOffset = j,
              Acceleration = k,
              Drag = l,
              LockedToPart = m,
              VelocityInheritance = o,
              EmissionDirection = p,
              Enabled = n,
              Lifetime = r,
              Rate = s,
              Rotation = t,
              RotSpeed = u,
              Speed = y,
              VelocitySpread = z
            }))
          end
        }
      }
      function RemoveOutlines(a)
        a = a
        a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
      end
      function CreatePart(a, b, c, d, e, g, h, j)
        a = a
        RemoveOutlines((va("Part")({
          formFactor = a,
          Parent = b,
          Reflectance = d,
          Transparency = e,
          CanCollide = false,
          Locked = true,
          BrickColor = BrickColor.new(tostring(g)),
          Name = h,
          Size = j,
          Material = c
        })))
        return (va("Part")({
          formFactor = a,
          Parent = b,
          Reflectance = d,
          Transparency = e,
          CanCollide = false,
          Locked = true,
          BrickColor = BrickColor.new(tostring(g)),
          Name = h,
          Size = j,
          Material = c
        }))
      end
      function CreateMesh(a, b, c, d, e, g)
        a = a
        if a == "SpecialMesh" then
          va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }).MeshType = c
          va(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }).MeshId = d
        end
        return (va(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }))
      end
      function CreateWeld(a, b, c, d, e)
        a = a
        return (va("Weld")({
          Parent = a,
          Part0 = b,
          Part1 = c,
          C0 = d,
          C1 = e
        }))
      end
      EffectModel = Instance.new("Model", game.Players.LocalPlayer.Character)
      Effects = {
        Block = {
          Create = function(a, b, c, d, e, g, h, j, k, l)
            a = a
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
            if l ~= 1 then
            end
            if l == nil then
              table.insert(Effects, {
                CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
                "Block1",
                k,
                g,
                h,
                j,
                (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
              })
            elseif l == 2 then
              table.insert(Effects, {
                CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
                "Block2",
                k,
                g,
                h,
                j,
                (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
              })
            else
              table.insert(Effects, {
                CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
                "Block3",
                k,
                g,
                h,
                j,
                (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
              })
            end
          end
        },
        Sphere = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        },
        Cylinder = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("CylinderMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        },
        Wave = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g / 60,
              h / 60,
              j / 60,
              (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c / 60, d / 60, e / 60)))
            })
          end
        },
        Ring = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        },
        Break = {
          Create = function(a, b, c, d, e)
            a = a
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
              "Shatter",
              math.random(10, 50) / 1000,
              CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
              math.random() - math.random(),
              0,
              math.random(50, 100) / 100
            })
          end
        },
        Spiral = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        },
        Push = {
          Create = function(a, b, c, d, e, g, h, j, k)
            a = a
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
            game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Cylinder",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        }
      }
      function part(a, b, c, d, e, g, h)
        a = a
        IT("Part").formFactor = a
        IT("Part").Parent = b
        IT("Part").Reflectance = c
        IT("Part").Transparency = d
        IT("Part").CanCollide = false
        IT("Part").Locked = true
        IT("Part").BrickColor = e
        IT("Part").Name = g
        IT("Part").Size = h
        IT("Part").Position = va.Position
        RemoveOutlines((IT("Part")))
        IT("Part").Material = "SmoothPlastic"
        IT("Part"):BreakJoints()
        return (IT("Part"))
      end
      function mesh(a, b, c, d, e, g)
        a = a
        IT(a).Parent = b
        if a == "SpecialMesh" then
          IT(a).MeshType = c
          if d ~= "nil" then
            IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
          end
        end
        IT(a).Offset = e
        IT(a).Scale = g
        return (IT(a))
      end
      function Magic(a, b, c, d, e, g, h)
        a = a
        Instance.new("Part", va).Anchored = true
        Instance.new("Part", va).BrickColor = g
        Instance.new("Part", va).CanCollide = false
        Instance.new("Part", va).FormFactor = 3
        Instance.new("Part", va).Name = "Ring"
        Instance.new("Part", va).Material = "Neon"
        Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
        Instance.new("Part", va).Transparency = 0
        Instance.new("Part", va).TopSurface = 0
        Instance.new("Part", va).BottomSurface = 0
        Instance.new("Part", va).CFrame = c
        Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = h
        Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = d
        if b == "Add" then
        else
        end
        coroutine.resume(coroutine.create(function()
          for fd = 0, 10 / va, 0.1 do
            swait()
            if vb == "Add" then
              vc = vc - 0.01 * vd / va
            elseif vb == "Divide" then
              vc = vc - 0.01 / vd * va
            end
            ve.Transparency = ve.Transparency + 0.01 * va
            vg.Scale = vg.Scale + Vector3.new(vc * va, vc * va, vc * va)
          end
          ve:Destroy()
        end))
      end
      function Eviscerate(a)
        a = a
        if a.Name ~= va then
          IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
          IT("BoolValue", a).Name = "IsHit"
          coroutine.wrap(function()
            va:WaitForChild("Head"):BreakJoints()
            wait(0.5)
            target = nil
            coroutine.resume(coroutine.create(function()
              for fd, fe in pairs(va:GetChildren()) do
                if fe:IsA("Accessory") then
                  fe:Destroy()
                end
                if fe:IsA("Humanoid") then
                  fe:Destroy()
                end
                if fe:IsA("CharacterMesh") then
                  fe:Destroy()
                end
                if fe:IsA("Model") then
                  fe:Destroy()
                end
                if fe:IsA("MeshPart") then
                  for fk, fl in pairs(fe:GetChildren()) do
                    if fl:IsA("Decal") then
                      fl:Destroy()
                    end
                  end
                  coroutine.resume(coroutine.create(function()
                    va.Material = "Neon"
                    va.CanCollide = false
                    IT("ParticleEmitter", va).LightEmission = 1
                    IT("ParticleEmitter", va).Texture = "rbxassetid://284205403"
                    IT("ParticleEmitter", va).Color = ColorSequence.new(vb.Color)
                    IT("ParticleEmitter", va).Rate = 150
                    IT("ParticleEmitter", va).Lifetime = NumberRange.new(1)
                    IT("ParticleEmitter", va).Size = NumberSequence.new({
                      NumberSequenceKeypoint.new(0, 0.75, 0),
                      NumberSequenceKeypoint.new(1, 0, 0)
                    })
                    IT("ParticleEmitter", va).Transparency = NumberSequence.new({
                      NumberSequenceKeypoint.new(0, 0, 0),
                      NumberSequenceKeypoint.new(1, 1, 0)
                    })
                    IT("ParticleEmitter", va).Speed = NumberRange.new(0, 0)
                    IT("ParticleEmitter", va).VelocitySpread = 30000
                    IT("ParticleEmitter", va).Rotation = NumberRange.new(-500, 500)
                    IT("ParticleEmitter", va).RotSpeed = NumberRange.new(-500, 500)
                    IT("BodyPosition", va).P = 3000
                    IT("BodyPosition", va).D = 1000
                    IT("BodyPosition", va).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
                    IT("BodyPosition", va).position = va.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
                    va.Color = vb.Color
                    coroutine.resume(coroutine.create(function()
                      for fd = 0, 49 do
                        swait(1)
                        va.Transparency = va.Transparency + 0.08
                      end
                      wait(0.5)
                      vb.Enabled = false
                      wait(3)
                      va:Destroy()
                      vc:Destroy()
                    end))
                  end))
                end
              end
            end))
          end)()
        end
      end
      function FindNearestHead(a, b, c)
        a = a
        if c then
          return b >= c.Torso.CFrame.p - a.magnitude
        end
        for fj, fk in pairs(workspace:GetChildren()) do
          if fk:IsA("Model") and fk:findFirstChild("Head") and fk ~= va and b >= fk.Head.Position - a.magnitude then
            table.insert({}, fk)
          end
        end
        return {}
      end
      function Aura(a, b, c, d, e, g, h, j, k, l, m)
        a = a
        Instance.new("Part", va).Anchored = true
        Instance.new("Part", va).BrickColor = k
        Instance.new("Part", va).CanCollide = false
        Instance.new("Part", va).FormFactor = 3
        Instance.new("Part", va).Name = "Ring"
        Instance.new("Part", va).Material = "Neon"
        Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
        Instance.new("Part", va).Transparency = 0
        Instance.new("Part", va).TopSurface = 0
        Instance.new("Part", va).BottomSurface = 0
        Instance.new("Part", va).CFrame = d
        Instance.new("Part", va).CFrame = Instance.new("Part", va).CFrame + Instance.new("Part", va).CFrame.lookVector * l
        Instance.new("SpecialMesh", (Instance.new("Part", va))).MeshType = m
        Instance.new("SpecialMesh", (Instance.new("Part", va))).Scale = Vector3.new(e, g, h)
        if c == "Add" then
        else
        end
        coroutine.resume(coroutine.create(function()
          for fd = 0, 10 / va, 0.1 do
            swait()
            if vb == "Add" then
              vc = vc - 0.01 * vd / va
            elseif vb == "Divide" then
              vc = vc - 0.01 / vd * va
            end
            ve = ve - 0.01 * vg * va
            vh.CFrame = vh.CFrame + vh.CFrame.lookVector * ve * va
            vh.Transparency = vh.Transparency + 0.01 * va
            vj.Scale = vj.Scale + Vector3.new(vc * va, vc * va, 0)
          end
          vh:Destroy()
        end))
      end
      function SoulSteal(a)
        a = a
        if a.Name ~= va then
          IT("BodyGyro", a.Head).CFrame = IT("BodyGyro", a.Head).CFrame * CFrame.fromEulerAnglesXYZ(Rad(-90), 0, 0)
          IT("BoolValue", a).Name = "IsHit"
          coroutine.wrap(function()
            Instance.new("Part", va).Size = Vector3.new(1, 1, 1)
            Instance.new("Part", va).CanCollide = false
            Instance.new("Part", va).Anchored = false
            Instance.new("Part", va).Position = vb.Position
            Instance.new("Part", va).Transparency = 1
            IT("ParticleEmitter", (Instance.new("Part", va))).LightEmission = 1
            IT("ParticleEmitter", (Instance.new("Part", va))).Texture = "rbxassetid://569507414"
            IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
            IT("ParticleEmitter", (Instance.new("Part", va))).Rate = 250
            IT("ParticleEmitter", (Instance.new("Part", va))).Lifetime = NumberRange.new(1.6)
            IT("ParticleEmitter", (Instance.new("Part", va))).Size = NumberSequence.new({
              NumberSequenceKeypoint.new(0, 1, 0),
              NumberSequenceKeypoint.new(1, 0, 0)
            })
            IT("ParticleEmitter", (Instance.new("Part", va))).Transparency = NumberSequence.new({
              NumberSequenceKeypoint.new(0, 0, 0),
              NumberSequenceKeypoint.new(1, 1, 0)
            })
            IT("ParticleEmitter", (Instance.new("Part", va))).Speed = NumberRange.new(0, 0)
            IT("ParticleEmitter", (Instance.new("Part", va))).VelocitySpread = 30000
            IT("ParticleEmitter", (Instance.new("Part", va))).Rotation = NumberRange.new(-360, 360)
            IT("ParticleEmitter", (Instance.new("Part", va))).RotSpeed = NumberRange.new(-360, 360)
            IT("BodyPosition", (Instance.new("Part", va))).P = 3000
            IT("BodyPosition", (Instance.new("Part", va))).D = 1000
            IT("BodyPosition", (Instance.new("Part", va))).maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
            IT("BodyPosition", (Instance.new("Part", va))).position = vb.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
            wait(1.6)
            Instance.new("Part", va).Touched:connect(function(a)
              a = a
              if a.Parent == va then
                vb:Destroy()
              end
            end)
            wait(1.2)
            while Instance.new("Part", va) do
              swait()
              IT("ParticleEmitter", (Instance.new("Part", va))).Color = ColorSequence.new(vc.Color)
              IT("BodyPosition", (Instance.new("Part", va))).Position = ve.Position
            end
          end)()
        end
      end
      function FaceMouse()
        return {
          CFrame.new(va.Torso.Position, Vector3.new(mouse.Hit.p.x, va.Torso.Position.y, mouse.Hit.p.z)),
          Vector3.new(mouse.Hit.p.x, mouse.Hit.p.y, mouse.Hit.p.z)
        }
      end
      Effects = {
        Block = function(a, b, c, d, e, g, h, j, k)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
          Instance.new("Part", EffectModel).Size = b
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).Material = e
          Instance.new("Part", EffectModel).CFrame = a
          if j == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("BlockMesh", (Instance.new("Part", EffectModel))).Scale = c
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
              if vg == true then
                vc.CFrame = vc.CFrame * CFrame.Angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
              end
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Sphere = function(a, b, c, d, e, g, h, j)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
          Instance.new("Part", EffectModel).Size = b
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).Material = e
          Instance.new("Part", EffectModel).CFrame = a
          if h == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshType = "Sphere"
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = c
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Cylinder = function(a, b, c, d, e, g, h, j)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
          Instance.new("Part", EffectModel).Size = b
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).Material = e
          Instance.new("Part", EffectModel).CFrame = a
          if h == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("CylinderMesh", (Instance.new("Part", EffectModel))).Scale = c
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Wave = function(a, b, c, d, e, g, h)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
          Instance.new("Part", EffectModel).Size = Vector3.new()
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).CFrame = a
          if g == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = "rbxassetid://20329976"
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
              vc.CFrame = vc.CFrame * CFrame.Angles(0, math.rad(vg), 0)
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Ring = function(a, b, c, d, e, g)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
          Instance.new("Part", EffectModel).Size = Vector3.new()
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).CFrame = a
          if e == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = "rbxassetid://3270017"
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Meshed = function(a, b, c, d, e, g, h, j, k)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(d)
          Instance.new("Part", EffectModel).Size = Vector3.new()
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).CFrame = a
          if j == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshId = e
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).TextureId = g
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = b
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
              vc.CFrame = vc.CFrame * CFrame.Angles(0, math.rad(vg), 0)
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end,
        Explode = function(a, b, c, d, e, g, h, j, k)
          a = a
          Instance.new("Part", EffectModel).BrickColor = BrickColor.new(g)
          Instance.new("Part", EffectModel).Size = b
          Instance.new("Part", EffectModel).Anchored = true
          Instance.new("Part", EffectModel).CanCollide = false
          Instance.new("Part", EffectModel).Material = e
          Instance.new("Part", EffectModel).CFrame = a * CFrame.Angles(math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)))
          if j == true then
            Instance.new("Part", EffectModel).Transparency = 1
          else
            Instance.new("Part", EffectModel).Transparency = 0
          end
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).MeshType = "Sphere"
          Instance.new("SpecialMesh", (Instance.new("Part", EffectModel))).Scale = c
          coroutine.wrap(function()
            for fd = 0, 1, va do
              swait()
              if vb == true then
                vc.Transparency = 1 - fd
              else
                vc.Transparency = fd
              end
              vd.Scale = vd.Scale + ve
              vc.CFrame = vc.CFrame * CFrame.new(0, vg, 0)
            end
            vc:Destroy()
          end)()
          return (Instance.new("Part", EffectModel))
        end
      }
      function Cso(a, b, c, d)
        a = a
        coroutine.resume(coroutine.create(function()
          va = IT("Sound", vb)
          va.Volume = vc
          va.Pitch = vd
          va.SoundId = "http://www.roblox.com/asset/?id=" .. ve
          swait()
          va:play()
          game:GetService("Debris"):AddItem(va, 10)
        end))
        return nil
      end
      function CamShake(a, b)
        a = a
        coroutine.resume(coroutine.create(function()
          for fg = 0, vb, 0.1 do
            swait()
            vc.CameraOffset = Vector3.new(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)))
            cam.CFrame = cam.CFrame * CF(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb))) * Euler(Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), Rad(Mrandom(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb))
          end
          vc.CameraOffset = Vector3.new(0, 0, 0)
        end))
      end
      function NewInstance(a, b, c)
        a = a
        Instance.new(a).Parent = b
        if c then
          for fj, fk in next, c, nil do
            pcall(function()
              va[vb] = vc
            end)
          end
        end
        return (Instance.new(a))
      end
      game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxHealth = -9223372036854775808
      game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = -9223372036854775808
      game:GetService("RunService"):BindToRenderStep("HOT", 0, function()
        if 0.1 < va.Health and -9223372036854775808 > va.Health then
          va.MaxHealth = -9223372036854775808
          va.Health = -9223372036854775808
        end
      end)
      if 1 ~= 1 then
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Size * 1
        game.Players.LocalPlayer.Character.Torso.Size = game.Players.LocalPlayer.Character.Torso.Size * 1
        game.Players.LocalPlayer.Character["Right Arm"].Size = game.Players.LocalPlayer.Character["Right Arm"].Size * 1
        game.Players.LocalPlayer.Character["Left Arm"].Size = game.Players.LocalPlayer.Character["Left Arm"].Size * 1
        game.Players.LocalPlayer.Character["Right Leg"].Size = game.Players.LocalPlayer.Character["Right Leg"].Size * 1
        game.Players.LocalPlayer.Character["Left Leg"].Size = game.Players.LocalPlayer.Character["Left Leg"].Size * 1
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.Parent = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        RW.Parent = game.Players.LocalPlayer.Character.Torso
        LW.Parent = game.Players.LocalPlayer.Character.Torso
        RH.Parent = game.Players.LocalPlayer.Character.Torso
        LH.Parent = game.Players.LocalPlayer.Character.Torso
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
        game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C1 = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
        RW.C0 = CF(1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
        LW.C0 = CF(-1.5 * 1, 0.5 * 1, 0 * 1) * angles(Rad(0), Rad(0), Rad(0))
        RH.C0 = CF(1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
        LH.C0 = CF(-1 * 1, -1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
        RH.C1 = CF(0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
        LH.C1 = CF(-0.5 * 1, 1 * 1, 0 * 1) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
      end
      Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Volume = 2.5
      Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Looped = true
      Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Pitch = 1
      Instance.new("ForceField", game.Players.LocalPlayer.Character).Visible = false
      game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = 55
      game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Animator.Parent = nil
      IT("Model").Parent = game.Players.LocalPlayer.Character
      IT("Model").Name = "Chips"
      RHe = IT("Part")
      RHe.Parent = IT("Model")
      RHe.BrickColor = BrickColor.new("Really black")
      RHe.Locked = true
      RHe.CanCollide = false
      RHe.Transparency = 0
      PMesh = IT("SpecialMesh")
      RHe.formFactor = "Symmetric"
      PMesh.MeshType = "FileMesh"
      PMesh.MeshId = "rbxassetid://19106014"
      PMesh.TextureId = "rbxassetid://342435650"
      PMesh.Scale = Vector3.new(1, 1.4, 0.8)
      PMesh.Parent = RHe
      IT("Weld").Parent = RHe
      IT("Weld").Part1, IT("Weld").Part0 = game.Players.LocalPlayer.Character["Right Arm"], RHe
      IT("Weld").C0 = CF(-1.2, -0.5, 0) * angles(Rad(90), Rad(0), Rad(90))
      RHe.Transparency = 1
      function AttackTemplate()
        attack = true
        for fd = 0, 2, 0.1 do
          swait()
          va.C0 = clerp(va.C0, vb * CF(0 * vc, 0 * vc, -0.1 + 0.1 * vc * Cos(vd / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
          ve.Weld.C0 = clerp(ve.Weld.C0, CF(0.5 * vc, -0.9 - 0.1 * Cos(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
          vg.Weld.C0 = clerp(vg.Weld.C0, CF(-0.5 * vc, -0.9 - 0.1 * Cos(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
          RW.C0 = clerp(RW.C0, CF(1.5 * vc, 0.5 + 0.1 * Sin(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(0 + 5 * Sin(vd / 20)), Rad(10 + 5 * Sin(vd / 20))), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * vc, 0.5 + 0.1 * Sin(vd / 20) * vc, 0 * vc) * angles(Rad(0), Rad(0 - 5 * Sin(vd / 20)), Rad(-10 - 5 * Sin(vd / 20))), 0.1)
        end
        attack = false
      end
      function HitboxFunction(a, b, c, d, e, g, h, j, k, l)
        a = a
        RemoveOutlines((Instance.new("Part", EffectModel)))
        Instance.new("Part", EffectModel).Size = Vector3.new(c, d, e)
        Instance.new("Part", EffectModel).CanCollide = false
        Instance.new("Part", EffectModel).Transparency = 1
        Instance.new("Part", EffectModel).Anchored = true
        Instance.new("Part", EffectModel).CFrame = a
        game:GetService("Debris"):AddItem(Instance.new("Part", EffectModel), b)
      end
      wait2 = false
      combo = 1
      mouse = game.Players.LocalPlayer:GetMouse()
      mouse.Button1Down:connect(function(a)
        a = a
        if attack == false then
          attack = true
          va = 3.01
          if combo == 1 and wait2 == false then
            wait2 = true
            for fe = 0, 1.6, 0.1 do
              swait()
              vb.C0 = clerp(vb.C0, vc * CF(0 * vd, 0 * vd, -0.1 + 0.1 * vd * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(-45)), 0.2)
              vg.Weld.C0 = clerp(vg.Weld.C0, CF(0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(0), Rad(-45), Rad(0)) * angles(Rad(0), Rad(0), Rad(15)), 0.2)
              vh.Weld.C0 = clerp(vh.Weld.C0, CF(-0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-15)), 0.2)
              RW.C0 = clerp(RW.C0, CF(1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(180), Rad(0 + 5 * Sin(ve / 20)), Rad(25 + 5 * Sin(ve / 20))), 0.2)
              LW.C0 = clerp(LW.C0, CF(-1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(-20), Rad(0 - 5 * Sin(ve / 20)), Rad(-10 - 5 * Sin(ve / 20))), 0.2)
            end
            Cso("138097048", vj, 1.2, 0.8)
            HitboxFunction(vj.CFrame, 0.01, 1, 1, 1, 7, 6, 9, 3, "Normal")
            for fe = 0, 1.2, 0.1 do
              swait()
              vb.C0 = clerp(vb.C0, vc * CF(0 * vd, 0 * vd, -0.1 + 0.1 * vd * Cos(ve / 20)) * angles(Rad(20), Rad(0), Rad(45)), 0.3)
              vg.Weld.C0 = clerp(vg.Weld.C0, CF(0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(15)), 0.3)
              vh.Weld.C0 = clerp(vh.Weld.C0, CF(-0.5 * vd, -0.9 - 0.1 * Cos(ve / 20) * vd, 0 * vd) * angles(Rad(-20), Rad(45), Rad(0)) * angles(Rad(0), Rad(0), Rad(-15)), 0.3)
              RW.C0 = clerp(RW.C0, CF(1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(85), Rad(0 + 5 * Sin(ve / 20)), Rad(45 + 5 * Sin(ve / 20))), 0.3)
              LW.C0 = clerp(LW.C0, CF(-1.5 * vd, 0.5 + 0.1 * Sin(ve / 20) * vd, 0 * vd) * angles(Rad(-45), Rad(0 - 5 * Sin(ve / 20)), Rad(-25 - 5 * Sin(ve / 20))), 0.3)
            end
            combo = 1
          end
          va = 56
          wait2 = false
          attack = false
        end
      end)
      function Taunt()
        attack = true
        va = 3
        if vb == "layonme" then
          for fd = 0, 6, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(10), Rad(30 + 5 * Sin(vg / 20)), Rad(45 + 5 * Sin(vg / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(10), Rad(-30 - 5 * Sin(vg / 20)), Rad(-45 - 5 * Sin(vg / 20))), 0.1)
          end
        elseif vb == "5gumdowngrade" then
          Cso("1826625760", vk, 5, 1)
          for fd = 0, 5, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
            RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0 - 5 * Sin(vg / 20)), Rad(-10 - 5 * Sin(vg / 20))), 0.1)
          end
        end
        va = 56
        vl = false
        attack = false
      end
      function Gum()
        attack = true
        va = 0
        swait(2)
        repeat
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(20)), 0.2)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.2)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.2)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.2)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.2)
        until 2.7 < Cso("605297168", vb, 6, 1).TimePosition
        for fe = 0, 3, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve) * angles(Rad(-30), Rad(0), Rad(0)), 0.5)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.5)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
        end
        vk.Anchored = true
        repeat
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.7 + 0.1 * ve) * angles(Rad(90), Rad(0), Rad(0)), 0.5)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.5)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
        until Cso("605297168", vb, 6, 1).Playing == false
        va = 56
        attack = false
        vk.Anchored = false
      end
      function OHHHHHHH()
        attack = true
        va = 0
        Cso("663306786", vb, 3, 1)
        for fd = 0, 12, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 + 1 * fd * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.1)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(47), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(65), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(75), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(143), Rad(0 - 5 * Sin(vg / 20)), Rad(-10 - 5 * Sin(vg / 20))), 0.1)
        end
        Cso("663307468", vb, 6, 1)
        for fd = 0, 6, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 4500 * ve, -0.1 + 0.1 * ve * Cos(vg / 20)) * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(47), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 20) * ve, 0 * ve) * angles(Rad(65), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(75), Rad(0 + 5 * Sin(vg / 20)), Rad(10 + 5 * Sin(vg / 20))), 0.1)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 20) * ve, 0 * ve) * angles(Rad(156), Rad(0 - 5 * Sin(vg / 20)), Rad(-10 - 5 * Sin(vg / 20))), 0.1)
        end
        va = 56
        attack = false
      end
      function WoodyGotWood()
        attack = true
        va = 0
        swait(2)
        repeat
          swait()
          vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -0.1 + 0.1 * ve * Cos(vg / 5)) * angles(Rad(20), Rad(0), Rad(5)), 0.2)
          vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 - 0.1 * Cos(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.2)
          vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 - 0.1 * Cos(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.2)
          RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 + 0.1 * Sin(vg / 5) * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(10)), 0.2)
          LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 + 0.1 * Sin(vg / 5) * ve, 0 * ve) * angles(Rad(20), Rad(0), Rad(-10)), 0.2)
        until 3.6 < Cso("1764642350", vb, 6, 1).TimePosition
        vk.Anchored = true
        repeat
          swait()
          for fe = 0, 2, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.7 + 0.1 * ve) * angles(Rad(-90), Rad(0), Rad(0)), 0.5)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
            RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(90)), 0.5)
            LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-90)), 0.5)
          end
          for fe = 0, 1.6, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, vd * CF(0 * ve, 0 * ve, -2.4 + 0.1 * ve) * angles(Rad(-90), Rad(0), Rad(0)), 0.5)
            vh.Weld.C0 = clerp(vh.Weld.C0, CF(0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.5)
            vj.Weld.C0 = clerp(vj.Weld.C0, CF(-0.5 * ve, -0.9 * ve, 0 * ve) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.5)
            RW.C0 = clerp(RW.C0, CF(1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(75)), 0.5)
            LW.C0 = clerp(LW.C0, CF(-1.5 * ve, 0.5 * ve, 0 * ve) * angles(Rad(0), Rad(0), Rad(-75)), 0.5)
          end
        until Cso("1764642350", vb, 6, 1).Playing == false
        va = 56
        attack = false
        vk.Anchored = false
      end
      mouse.KeyDown:connect(function(a)
        a = a
        if attack == false then
          if a == "t" then
            Taunt()
          elseif a == "z" then
            Gum()
          elseif a == "x" then
            OHHHHHHH()
          elseif a == "c" then
            WoodyGotWood()
          elseif a == "f" then
            va = 690663957
            vb.TimePosition = 0
            PMesh.TextureId = "rbxassetid://206977326"
            vc = "cheesexd"
          elseif a == "m" then
            va = 525565668
            vb.TimePosition = 0
            PMesh.TextureId = "rbxassetid://342435650"
            vc = "onebearnakedwoman"
          elseif a == "n" then
            va = 937445925
            vb.TimePosition = 0
            PMesh.TextureId = "rbxassetid://342436716"
            vc = "layonme"
          elseif a == "b" then
            va = 1386299751
            vb.TimePosition = 0
            PMesh.TextureId = "rbxassetid://341999291"
            vc = "howitfeelstochew5gum"
          elseif a == "v" then
            va = 554967156
            vb.TimePosition = 0
            PMesh.TextureId = "rbxassetid://341999245"
            vc = "5gumdowngrade"
          end
        end
      end)
      while true do
        swait()
        hitfloor, posfloor = rayCast(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, CFrame.new(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector, 4 * 1, game.Players.LocalPlayer.Character)
        if false ~= true then
        end
        if false == false then
          if attack == false then
          else
          end
          if hitfloor then
          else
          end
          if true == false and false == true then
          end
          if hitfloor then
          else
          end
          if not "Paralyzed" then
            if not "Sit" then
              if true then
              end
            end
          end
          if ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Jump" then
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = 55
            if attack == false then
              game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(-16), Rad(0), Rad(0)), 0.1)
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, -0.2 - 0.1 * Cos((0 + 1) / 20), -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.1)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20), -0.5 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.1)
              RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(13 + 4.5 * Sin((0 + 1) / 20))), 0.1)
              LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(25), Rad(-0.6), Rad(-13 - 4.5 * Sin((0 + 1) / 20))), 0.1)
            end
          elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Fall" then
            if attack == false then
              game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, -1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(25), Rad(0), Rad(0)), 0.1)
              RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(165), Rad(-0.6), Rad(45 + 4.5 * Sin((0 + 1) / 20))), 0.1)
              LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(165), Rad(-0.6), Rad(-45 - 4.5 * Sin((0 + 1) / 20))), 0.1)
            end
          elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Land" then
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = 0
            if attack == false then
              game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -1 + 0.1 * Cos((0 + 1) / 20) * 1) * angles(Rad(10), Rad(0), Rad(0)), 0.15)
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, 0.1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(-10), Rad(0)) * angles(Rad(-3.5), Rad(0), Rad(5)), 0.15)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, 0.1 - 0.1 * Cos((0 + 1) / 20) * 1, -0.3 * 1) * angles(Rad(0), Rad(10), Rad(0)) * angles(Rad(-3.5), Rad(0), Rad(-5)), 0.15)
              RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(65), Rad(0), Rad(25 + 4.5 * Sin((0 + 1) / 20))), 0.1)
              LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.02 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(55), Rad(0), Rad(-25 - 4.5 * Sin((0 + 1) / 20))), 0.1)
            end
          elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Idle" then
            if attack == false then
              game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.1 + 0.1 * 1 * Cos((0 + 1) / 20)) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(0), Rad(0)), 0.1)
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(-10), Rad(0)) * angles(Rad(0), Rad(0), Rad(5)), 0.1)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.9 - 0.1 * Cos((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(10), Rad(0)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
              RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 + 15 * Sin((0 + 1) / 20)), Rad(0 + 5 * Sin((0 + 1) / 20)), Rad(10 + 5 * Sin((0 + 1) / 20))), 0.1)
              LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / 20) * 1, 0 * 1) * angles(Rad(0 + 15 * Sin((0 + 1) / 20)), Rad(0 - 5 * Sin((0 + 1) / 20)), Rad(-10 - 5 * Sin((0 + 1) / 20))), 0.1)
            end
          elseif ("Land" or "Fall" or "Jump" or not hitfloor or "Walk" or "Idle") == "Walk" then
            game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = 55
            if attack == false then
              game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0 = clerp(game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0 * 1, 0 * 1, -0.3 - 0.65 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))) * angles(Rad(-25), Rad(0), Rad(0 - 1.75 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2))) + game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75), 0.1)
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, -0.8 - 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, 0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-15 - 95 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) - game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75 + -Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 + 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 + 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, -0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-15 + 95 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RotVelocity.Y / -75 + Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 - 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
              RW.C0 = clerp(RW.C0, CF(1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) * 1, 0 * 1) * angles(Rad(215), Rad(0), Rad(45)), 0.1)
              LW.C0 = clerp(LW.C0, CF(-1.5 * 1, 0.5 + 0.1 * Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) * 1, 0 * 1) * angles(Rad(215), Rad(0), Rad(-45)), 0.1)
            elseif attack == true and false == true then
              game.Players.LocalPlayer.Character["Right Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Right Leg"].Weld.C0, CF(0.5 * 1, -0.8 - 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, 0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-10 - 25 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) - game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RotVelocity.Y / 75 + -Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 + 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
              game.Players.LocalPlayer.Character["Left Leg"].Weld.C0 = clerp(game.Players.LocalPlayer.Character["Left Leg"].Weld.C0, CF(-0.5 * 1, -0.8 + 0.5 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1, -0.6 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2 * 1) * angles(Rad(-10 + 25 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").RotVelocity.Y / -75 + Sin((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, Rad(0 - 10 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0)) * angles(Rad(0 - 2 * Cos((0 + 1) / (6 / (game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), Rad(0), Rad(0)), 0.3)
            end
          end
        end
        game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 56
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).SoundId = "rbxassetid://" .. 525565668
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Looped = true
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Pitch = 1
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Volume = 1.5
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Parent = game.Players.LocalPlayer.Character.Torso
        Instance.new("Sound", game.Players.LocalPlayer.Character.Torso).Playing = true
        if 0 < #Effects then
          for fX = 1, #Effects do
            if Effects[fX] ~= nil and Effects[fX] ~= nil then
              if 1 >= Effects[fX][1].Transparency then
                if Effects[fX][2] == "Block1" then
                  Effects[fX][1].CFrame = Effects[fX][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
                  Effects[fX][1].Mesh.Scale = Effects[fX][1].Mesh.Scale + Vector3.new(Effects[fX][4], Effects[fX][5], Effects[fX][6])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Block2" then
                  Effects[fX][1].CFrame = Effects[fX][1].CFrame + Vector3.new(0, 0, 0)
                  Effects[fX][7].Scale = Effects[fX][7].Scale + Vector3.new(Effects[fX][4], Effects[fX][5], Effects[fX][6])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Block3" then
                  Effects[fX][1].CFrame = Effects[fX][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
                  Effects[fX][7].Scale = Effects[fX][7].Scale + Vector3.new(Effects[fX][4], Effects[fX][5], Effects[fX][6])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Cylinder" then
                  Effects[fX][1].Mesh.Scale = Effects[fX][1].Mesh.Scale + Vector3.new(Effects[fX][4], Effects[fX][5], Effects[fX][6])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Blood" then
                  Effects[fX][1].CFrame = Effects[fX][1].CFrame * Vector3.new(0, 0.5, 0)
                  Effects[fX][7].Scale = Effects[fX][7].Scale + Vector3.new(Effects[fX][4], Effects[fX][5], Effects[fX][6])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Elec" then
                  Effects[fX][1].Mesh.Scale = Effects[fX][1].Mesh.Scale + Vector3.new(Effects[fX][7], Effects[fX][8], Effects[fX][9])
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Disappear" then
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                elseif Effects[fX][2] == "Shatter" then
                  Effects[fX][1].Transparency = Effects[fX][1].Transparency + Effects[fX][3]
                  Effects[fX][4] = Effects[fX][4] * CFrame.new(0, Effects[fX][7], 0)
                  Effects[fX][1].CFrame = Effects[fX][4] * CFrame.fromEulerAnglesXYZ(Effects[fX][6], 0, 0)
                  Effects[fX][6] = Effects[fX][6] + Effects[fX][5]
                end
              else
                Effects[fX][1].Parent = nil
                table.remove(Effects, fX)
              end
            end
          end
        end
      end
    end)
    wait(0.5)
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.Pillow, game:GetService("Players").LocalPlayer.Character.Chips.Part, false).Position = Vector3.new(0, -0.3, -0.1)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.Pillow, game:GetService("Players").LocalPlayer.Character.Chips.Part, false).Orientation = Vector3.new(0, -90, 90)
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Wizard", "Wizard", function()
    spawn(function()
      function weld(a, b, c, d)
        a = a
        it("Weld").Parent = a
        it("Weld").Part0 = b
        it("Weld").Part1 = c
        it("Weld").C0 = d
        return (it("Weld"))
      end
      function unanchor()
        if UNANCHOR == true then
          g = CharacterA:GetChildren()
          for fd = 1, #g do
            if g[fd].ClassName == "Part" then
              g[fd].Anchored = false
            end
          end
        end
      end
      IT = Instance.new
      CF = CFrame.new
      VT = Vector3.new
      RAD = math.rad
      C3 = Color3.new
      UD2 = UDim2.new
      BRICKC = BrickColor.new
      ANGLES = CFrame.Angles
      EULER = CFrame.fromEulerAnglesXYZ
      COS = math.cos
      ACOS = math.acos
      SIN = math.sin
      ASIN = math.asin
      ABS = math.abs
      MRANDOM = math.random
      FLOOR = math.floor
      Animation_Speed = 1.8
      Frame_Speed = 0.0166666666666667
      Frame_Speed = 0.0125
      IT("Animation").Name = "Roblox Idle Animation"
      IT("Animation").AnimationId = "http://www.roblox.com/asset/?id=180435571"
      function Swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          game:GetService("RunService").Heartbeat:wait()
        else
          for fe = 1, a do
            game:GetService("RunService").Heartbeat:wait()
          end
        end
      end
      function Raycast(a, b, c, d)
        a = a
        return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
      end
      function QuaternionFromCFrame(a)
        a = a
        if a:components() + a:components() + a:components() > 0 then
          return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
        else
          if 1 == 0 then
          end
          if 2 == 0 then
            return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          elseif 2 == 1 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
          elseif 2 == 2 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          end
        end
      end
      function QuaternionToCFrame(a, b, c, d, e, g, h)
        a = a
        return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
      end
      function QuaternionSlerp(a, b, c)
        a = a
        if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
          if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
          else
          end
        elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
        return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
      end
      function Clerp(a, b, c)
        a = a
        return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
          QuaternionFromCFrame(a)
        }, {
          QuaternionFromCFrame(b)
        }, c))
      end
      spawn(function()
        while true do
          Swait()
          if va:FindFirstChildOfClass("Humanoid") == nil then
            vb = IT("Humanoid", va)
          end
          for fd, fe in next, vb:GetPlayingAnimationTracks() do
            fe:Stop()
          end
          vd = vd + ve
          if vc.Velocity.y > 1 and vg == false and vh == false and Raycast(vc.Position, CF(vc.Position, vc.Position + VT(0, -1, 0)).lookVector, 5, va) == nil then
            vj = "Jump"
            vk.C0 = Clerp(vk.C0, vl * CF(0, 0, 2 - 1 * COS(vd / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vm.C0 = Clerp(vm.C0, CF(1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(90 + 10 * COS(vd / 10)), RAD(-12), RAD(-80 + 0 * COS(vd / 10))) * vo, 0.55 / Animation_Speed)
            vp.C0 = Clerp(vp.C0, CF(-1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(80 + 10 * COS(vd / 10)), RAD(-12), RAD(90 + 0 * COS(vd / 10))) * vn, 0.55 / Animation_Speed)
            vr.C0 = Clerp(vr.C0, CF(1, -1 - 0.1 * COS(vd / 12), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vs.C0 = Clerp(vs.C0, CF(-1, -0.5 - 0.2 * COS(vd / 12), -1) * ANGLES(RAD(-30), RAD(-80), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          elseif -1 > vc.Velocity.y and vg == false and vh == false and Raycast(vc.Position, CF(vc.Position, vc.Position + VT(0, -1, 0)).lookVector, 5, va) == nil then
            vj = "Fall"
            vk.C0 = Clerp(vk.C0, vl * CF(0, 0, 2 - 1 * COS(vd / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vm.C0 = Clerp(vm.C0, CF(1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(90 + 10 * COS(vd / 10)), RAD(-12), RAD(-80 + 0 * COS(vd / 10))) * vo, 0.55 / Animation_Speed)
            vp.C0 = Clerp(vp.C0, CF(-1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(80 + 10 * COS(vd / 10)), RAD(-12), RAD(90 + 0 * COS(vd / 10))) * vn, 0.55 / Animation_Speed)
            vr.C0 = Clerp(vr.C0, CF(1, -1 - 0.1 * COS(vd / 12), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vs.C0 = Clerp(vs.C0, CF(-1, -0.5 - 0.2 * COS(vd / 12), -1) * ANGLES(RAD(-30), RAD(-80), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          elseif vc.Velocity * VT(1, 0, 1).magnitude < 1 and vg == false and vh == false and Raycast(vc.Position, CF(vc.Position, vc.Position + VT(0, -1, 0)).lookVector, 5, va) ~= nil then
            vj = "Idle"
            vk.C0 = Clerp(vk.C0, vl * CF(0, 0, 2 - 1 * COS(vd / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vm.C0 = Clerp(vm.C0, CF(1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(90 + 10 * COS(vd / 10)), RAD(-12), RAD(-80 + 0 * COS(vd / 10))) * vo, 0.55 / Animation_Speed)
            vp.C0 = Clerp(vp.C0, CF(-1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(80 + 10 * COS(vd / 10)), RAD(-12), RAD(90 + 0 * COS(vd / 10))) * vn, 0.55 / Animation_Speed)
            vr.C0 = Clerp(vr.C0, CF(1, -1 - 0.1 * COS(vd / 12), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vs.C0 = Clerp(vs.C0, CF(-1, -0.5 - 0.2 * COS(vd / 12), -1) * ANGLES(RAD(-30), RAD(-80), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          elseif 1 < vc.Velocity * VT(1, 0, 1).magnitude and vh == false and Raycast(vc.Position, CF(vc.Position, vc.Position + VT(0, -1, 0)).lookVector, 5, va) ~= nil then
            vj = "Walk"
            vk.C0 = Clerp(vk.C0, vl * CF(0, 0, 2 - 1 * COS(vd / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vm.C0 = Clerp(vm.C0, CF(1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(90 + 10 * COS(vd / 10)), RAD(-12), RAD(-80 + 0 * COS(vd / 10))) * vo, 0.55 / Animation_Speed)
            vp.C0 = Clerp(vp.C0, CF(-1, 0.5 + 0.1 * SIN(vd / 12), -1) * ANGLES(RAD(80 + 10 * COS(vd / 10)), RAD(-12), RAD(90 + 0 * COS(vd / 10))) * vn, 0.55 / Animation_Speed)
            vr.C0 = Clerp(vr.C0, CF(1, -1 - 0.1 * COS(vd / 12), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            vs.C0 = Clerp(vs.C0, CF(-1, -0.5 - 0.2 * COS(vd / 12), -1) * ANGLES(RAD(-30), RAD(-80), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          end
        end
      end)
      unanchor()
    end)
    wait(0.6)
    spawn(function()
      game:GetService("RunService").Heartbeat:Connect(function()
        va.Orientation = Vector3.new(0, 0, vb)
        vb = vb + 5
      end)
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Knighty Death", "Knighty Death", function()
    spawn(function()
      wait(0.0166666666666667)
      wait(0.2)
      va = game:GetService("Players").LocalPlayer
      PlayerGui = va.PlayerGui
      Cam = workspace.CurrentCamera
      Backpack = va.Backpack
      Character = va.Character
      Humanoid = Character.Humanoid
      Mouse = va:GetMouse()
      RootPart = Character.HumanoidRootPart
      Torso = Character.Torso
      Head = Character.Head
      RightArm = Character["Right Arm"]
      LeftArm = Character["Left Arm"]
      RightLeg = Character["Right Leg"]
      LeftLeg = Character["Left Leg"]
      RootJoint = RootPart.RootJoint
      RightShoulder = Torso["Right Shoulder"]
      LeftShoulder = Torso["Left Shoulder"]
      RightHip = Torso["Right Hip"]
      LeftHip = Torso["Left Hip"]
      Instance.new("Sound", Torso).SoundId = "rbxassetid://259554386"
      Instance.new("Sound", Torso).Looped = true
      Instance.new("Sound", Torso).Pitch = 1
      Instance.new("Sound", Torso).Volume = 3
      Instance.new("Sound", Torso):Play()
      IT = Instance.new
      CF = CFrame.new
      VT = Vector3.new
      RAD = math.rad
      C3 = Color3.new
      UD2 = UDim2.new
      BRICKC = BrickColor.new
      ANGLES = CFrame.Angles
      EULER = CFrame.fromEulerAnglesXYZ
      COS = math.cos
      ACOS = math.acos
      SIN = math.sin
      ASIN = math.asin
      ABS = math.abs
      MRANDOM = math.random
      FLOOR = math.floor
      Animation_Speed = 3
      Frame_Speed = 0.0166666666666667
      IT("Animation").Name = "Roblox Idle Animation"
      IT("Animation").AnimationId = "http://www.roblox.com/asset/?id=180435571"
      IT("ScreenGui", PlayerGui).Name = "Weapon GUI"
      IT("Model").Name = "Adds"
      IT("Folder", (IT("Model"))).Name = "Effects"
      ArtificialHB = Instance.new("BindableEvent", game:GetObjects("rbxassetid://6651328156")[1])
      ArtificialHB.Name = "ArtificialHB"
      game:GetObjects("rbxassetid://6651328156")[1]:WaitForChild("ArtificialHB")
      frame = Frame_Speed
      tf = 0
      allowframeloss = false
      tossremainder = false
      lastframe = tick()
      game:GetObjects("rbxassetid://6651328156")[1].ArtificialHB:Fire()
      game:GetService("RunService").Heartbeat:connect(function(a, b)
        a = a
        tf = tf + a
        if tf >= frame then
          if allowframeloss then
            wait()
            va.ArtificialHB:Fire()
            lastframe = tick()
          else
            for fg = 1, math.floor(tf / frame) do
              va.ArtificialHB:Fire()
            end
            lastframe = tick()
          end
          if tossremainder then
            tf = 0
          else
            tf = tf - frame * math.floor(tf / frame)
          end
        end
      end)
      function Raycast(a, b, c, d)
        a = a
        return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
      end
      function PositiveAngle(a)
        a = a
        if a >= 0 then
          a = 0
        end
        return a
      end
      function NegativeAngle(a)
        a = a
        if a <= 0 then
          a = 0
        end
        return a
      end
      function Swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          ArtificialHB.Event:wait()
        else
          for fe = 1, a do
            ArtificialHB.Event:wait()
          end
        end
      end
      function CreateMesh(a, b, c, d, e, g, h)
        a = a
        if a == "SpecialMesh" then
          IT(a).MeshType = c
          if d ~= "nil" and d ~= "" then
            IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
          end
          if e ~= "nil" and e ~= "" then
            IT(a).TextureId = "http://www.roblox.com/asset/?id=" .. e
          end
        end
        IT(a).Offset = h or VT(0, 0, 0)
        IT(a).Scale = g
        IT(a).Parent = b
        return (IT(a))
      end
      function CreatePart(a, b, c, d, e, g, h, j, k)
        a = a
        IT("Part").formFactor = a
        IT("Part").Reflectance = d
        IT("Part").Transparency = e
        IT("Part").CanCollide = false
        IT("Part").Locked = true
        IT("Part").Anchored = true
        if k == false then
          IT("Part").Anchored = false
        end
        IT("Part").BrickColor = BRICKC(tostring(g))
        IT("Part").Name = h
        IT("Part").Size = j
        IT("Part").Position = Torso.Position
        IT("Part").Material = c
        IT("Part"):BreakJoints()
        IT("Part").Parent = b
        return (IT("Part"))
      end
      function QuaternionFromCFrame(a)
        a = a
        if 0 < a:components() + a:components() + a:components() then
          return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
        else
          if 1 == 0 then
          end
          if 2 == 0 then
            return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          elseif 2 == 1 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
          elseif 2 == 2 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          end
        end
      end
      function QuaternionToCFrame(a, b, c, d, e, g, h)
        a = a
        return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
      end
      function QuaternionSlerp(a, b, c)
        a = a
        if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
          if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
          else
          end
        elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
        return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
      end
      function Clerp(a, b, c)
        a = a
        return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
          QuaternionFromCFrame(a)
        }, {
          QuaternionFromCFrame(b)
        }, c))
      end
      function CreateFrame(a, b, c, d, e, g, h, j)
        a = a
        IT("Frame").BackgroundTransparency = b
        IT("Frame").BorderSizePixel = c
        IT("Frame").Position = d
        IT("Frame").Size = e
        IT("Frame").BackgroundColor3 = g
        IT("Frame").BorderColor3 = h
        IT("Frame").Name = j
        IT("Frame").Parent = a
        return (IT("Frame"))
      end
      function CreateLabel(a, b, c, d, e, g, h, j, k)
        a = a
        IT("TextLabel").BackgroundTransparency = 1
        IT("TextLabel").Size = UD2(1, 0, 1, 0)
        IT("TextLabel").Position = UD2(0, 0, 0, 0)
        IT("TextLabel").TextColor3 = c
        IT("TextLabel").TextStrokeTransparency = j
        IT("TextLabel").TextTransparency = g
        IT("TextLabel").FontSize = d
        IT("TextLabel").Font = e
        IT("TextLabel").BorderSizePixel = h
        IT("TextLabel").TextScaled = false
        IT("TextLabel").Text = b
        IT("TextLabel").Name = k
        IT("TextLabel").Parent = a
        return (IT("TextLabel"))
      end
      function NoOutlines(a)
        a = a
        a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
      end
      function CreateWeldOrSnapOrMotor(a, b, c, d, e, g)
        a = a
        IT(a).Part0 = c
        IT(a).Part1 = d
        IT(a).C0 = e
        IT(a).C1 = g
        IT(a).Parent = b
        return (IT(a))
      end
      function CreateSound(a, b, c, d, e)
        a = a
        coroutine.resume(coroutine.create(function()
          va = vb:Clone()
          va.Parent = vc
          va.Volume = vd
          va.Pitch = ve
          va.SoundId = "http://www.roblox.com/asset/?id=" .. vg
          va:play()
          if vh == true then
            va.Looped = true
          else
            repeat
              wait(1)
            until va.Playing == false
            va:remove()
          end
        end))
        return nil
      end
      function CFrameFromTopBack(a, b, c)
        a = a
        return CF(a.x, a.y, a.z, b:Cross(c).x, b.x, c.x, b:Cross(c).y, b.y, c.y, b:Cross(c).z, b.z, c.z)
      end
      function WACKYEFFECT(a)
        a = a
        coroutine.resume(coroutine.create(function()
          if vd ~= nil and ve ~= nil and vg ~= nil then
          end
          CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Color = vh
          if vj == "Sphere" then
          elseif vj == "Block" then
            IT("BlockMesh", (CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true))).Scale = VT(vk.X, vk.X, vk.X)
          elseif vj == "Wave" then
          elseif vj == "Ring" then
          elseif vj == "Slash" then
          elseif vj == "Round Slash" then
          elseif vj == "Swirl" then
          elseif vj == "Skull" then
          elseif vj == "Crystal" then
          end
          if CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)) ~= nil then
            if vl ~= nil then
            end
            if vj == "Block" then
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
            else
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm
            end
            for fm = 1, vo + 1 do
              Swait()
              CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale = CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale - (vk - vp) / vo
              if vj == "Wave" then
                CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Offset = VT(0, 0, -CreateMesh("SpecialMesh", CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), "FileMesh", "9756362", "", vk, VT(0, 0, 0)).Scale.X / 8)
              end
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Transparency - (vc - vn) / vo
              if vj == "Block" then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = vm * ANGLES(RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)), RAD(MRANDOM(0, 360)))
              else
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame * ANGLES(RAD(vr), RAD(vs), RAD(vt))
              end
              if vl ~= nil then
                CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).CFrame = CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Orientation, CF(CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true).Position, vl) * CF(0, 0, -(vm.p - vl.Magnitude / vo))
              end
            end
            if true == false then
              CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
            else
              CreateSound(vd, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), vg, ve, false).Stopped:Connect(function()
                va:remove()
              end)
            end
          elseif true == false then
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
          else
            repeat
              Swait()
            until CreateSound(vd, CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true), vg, ve, false).Playing == false
            CreatePart(3, va, vb, 0, vc, BRICKC("Pearl"), "Effect", VT(1, 1, 1), true):remove()
          end
        end))
      end
      IT("ParticleEmitter", nil).Enabled = false
      IT("ParticleEmitter", nil).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.1),
        [22] = NumberSequenceKeypoint.new(1, 1)
      })
      IT("ParticleEmitter", nil).LightEmission = 0.5
      IT("ParticleEmitter", nil).Rate = 500
      IT("ParticleEmitter", nil).Rotation = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).RotSpeed = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).Texture = "http://www.roblox.com/asset/?id=304437537"
      IT("ParticleEmitter", nil).Color = ColorSequence.new(C3(1, 0.333333333333333, 0), C3(1, 0, 0))
      function ParticleEmitter(a)
        a = a
        va:Clone().Parent = a.Parent or Torso
        va:Clone().Size = NumberSequence.new(a.Size1 or 1, a.Size2 or 5)
        va:Clone().Lifetime = NumberRange.new(a.Lifetime1 or 1, a.Lifetime2 or 1.5)
        va:Clone().Acceleration, va:Clone().Drag, va:Clone().VelocitySpread, va:Clone().Speed = a.Acel or VT(0, 0, 0), a.Drag or 0, a.Offset or 360, NumberRange.new(a.Speed or 5)
        if (a.Enabled or false) == false then
          va:Clone():Emit(a.Emit or 100)
          Debris:AddItem(va:Clone(), a.Lifetime2 or 1.5)
        else
          va:Clone().Enabled = true
        end
        return (va:Clone())
      end
      function MakeForm(a, b)
        a = a
        if b == "Cyl" then
        elseif b == "Ball" then
          IT("SpecialMesh", a).MeshType = "Sphere"
        elseif b == "Wedge" then
          IT("SpecialMesh", a).MeshType = "Wedge"
        end
      end
      Debris = game:GetService("Debris")
      function CastProperRay(a, b, c, d)
        a = a
        return Raycast(a, CF(a, b).lookVector, c, d)
      end
      function turnto(a)
        a = a
        RootPart.CFrame = CFrame.new(RootPart.CFrame.p, VT(a.X, RootPart.Position.Y, a.Z)) * CFrame.new(0, 0, 0)
      end
      CreateMesh("SpecialMesh", CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), "FileMesh", "582117241", "582117428", VT(1, 1, 1), VT(0, 0, 0))
      CreateWeldOrSnapOrMotor("Weld", CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false), CF(0, 1.95, 0), CF(0, 0, 0))
      ParticleEmitter({
        Enabled = true,
        Speed = 0,
        Parent = CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false),
        Drag = 0,
        Size1 = 0.7,
        Size2 = 0,
        Acel = VT(0, 45, 0),
        Lifetime1 = 0.2,
        Lifetime2 = 0.6
      }).VelocityInheritance = 0.1
      IT("Attachment", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Position = VT(0, 1, 0)
      IT("Attachment", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Position = VT(0, -1, 0)
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Attachment1, IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Attachment0 = IT("Attachment", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))), IT("Attachment", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false)))
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Lifetime = 0.2
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Color = ColorSequence.new(C3(1, 0.333333333333333, 0), C3(1, 0, 0))
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Transparency = NumberSequence.new(0, 1)
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Enabled = false
      IT("Trail", (CreatePart(3, IT("Model"), "Marble", 0, 1, "Institutional white", "AxeHead", VT(0.25, 2, 1.75), false))).Texture = "http://www.roblox.com/asset/?id=1472703539"
      for fL, fZ in pairs(IT("Model"):GetChildren()) do
        if fZ.ClassName == "Part" then
          fZ.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
      end
      IT("Model").Parent = Character
      Humanoid.Died:connect(function()
        va = true
      end)
      function StatLabel(a, b, c)
        a = a
        CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()).CFrame = CF(a.p, a.p + VT(MRANDOM(-5, 5), MRANDOM(0, 5), MRANDOM(-5, 5)))
        game:GetService("Debris"):AddItem(CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()), 5)
        Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))).Adornee = CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())
        Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))).Size = UD2(2.5, 0, 2.5, 0)
        Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))).StudsOffset = VT(-2, 2, 0)
        Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))).AlwaysOnTop = false
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).BackgroundTransparency = 1
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).Size = UD2(2.5, 0, 2.5, 0)
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).Text = b
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).Font = vb
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).FontSize = "Size42"
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).TextColor3 = c
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).TextStrokeTransparency = 0
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).TextScaled = true
        Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()))))).TextWrapped = true
        coroutine.resume(coroutine.create(function(a, b, c)
          a = a
          for fh = 1, 50 do
            Swait()
            va.CFrame = va.CFrame * CF(0, 0, -0.2)
            vb.TextTransparency = vb.TextTransparency + 0.02
            vb.TextStrokeTransparency = vb.TextTransparency
          end
          a.Parent = nil
        end), CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT()), (Instance.new("TextLabel", (Instance.new("BillboardGui", (CreatePart(3, va, "SmoothPlastic", 0, 1, "Really black", "Effect", VT())))))))
      end
      function ApplyDamage(a, b, c)
        a = a
        Instance.new("BoolValue", a.Parent).Name = "HitBy" .. va.Name
        game:GetService("Debris"):AddItem(Instance.new("BoolValue", a.Parent), 0.001)
        b = 0
        if a.Health ~= 0 then
          if b > a.Health then
            b = math.ceil(a.Health)
            if b == 0 then
              b = 0.1
            end
          end
          a.Health = a.Health - b
          StatLabel(c.CFrame * CF(0, 0 + (c.Size.z - 1), 0), b, C3(0, 0, 0))
        end
      end
      function ApplyAoE(a, b, c, d, e, g)
        a = a
        do return end
        while true do
          if nil.ClassName == "Model" and nil ~= Character and (nil):FindFirstChildOfClass("Humanoid") then
            if ((nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso")) and b >= (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso").Position - a.Magnitude then
              if g == true then
                (nil):BreakJoints()
              else
                ApplyDamage((nil):FindFirstChildOfClass("Humanoid"), MRANDOM(0, 0), (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso"))
              end
              if e > 0 then
                for fu, fy in pairs((nil):GetChildren()) do
                  if fy:IsA("BasePart") then
                    Instance.new("BodyVelocity").maxForce = Vector3.new(1000000000, 1000000000, 1000000000)
                    Instance.new("BodyVelocity").velocity = CF(a, (nil):FindFirstChild("Torso") or (nil):FindFirstChild("UpperTorso").Position).lookVector * e
                    Instance.new("BodyVelocity").Parent = fy
                    Debris:AddItem(Instance.new("BodyVelocity"), 0.05)
                  end
                end
              end
            end
          end
        end
      end
      function Fire_Swipes()
        va = true
        vb = false
        repeat
          repeat
            if MRANDOM(1, 3) == 0 then
            end
          until MRANDOM(1, 3) ~= 0
          if MRANDOM(1, 3) == 1 then
            for fh = 0, 0.3, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-65)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(140), RAD(0), RAD(12)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-45), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            vh.Enabled = true
            CreateSound(184474135, vj, MRANDOM(3, 4), MRANDOM(8, 13) / 10, false)
            for fj = 0, 0.15, 0.1 / Animation_Speed do
              Swait()
              RootPart.CFrame = RootPart.CFrame * CF(0, 0, -0.1)
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, -0.2) * ANGLES(RAD(0), RAD(0), RAD(25)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(25), RAD(15), RAD(12)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.8, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.8, -0.3) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            for fj = 0, 0.3, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, -0.2) * ANGLES(RAD(0), RAD(0), RAD(25)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(15), RAD(15), RAD(12)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -0.8, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -0.8, -0.3) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-120), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
          elseif MRANDOM(1, 3) == 2 then
            for fh = 0, 0.1, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(75)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(90), RAD(0)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            vh.Enabled = true
            CreateSound(184474135, vj, MRANDOM(3, 4), MRANDOM(8, 13) / 10, false)
            for fj = 0, 0.15, 0.1 / Animation_Speed do
              Swait()
              RootPart.CFrame = RootPart.CFrame * CF(0, 0, -0.1)
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.2) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-135), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            for fj = 0, 0.3, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-45)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(90)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-35), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.2) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(-135), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
          elseif MRANDOM(1, 3) == 3 then
            for fh = 0, 0.1, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(-56)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(85)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(25), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(145), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            vh.Enabled = true
            CreateSound(184474135, vj, MRANDOM(3, 4), MRANDOM(8, 13) / 10, false)
            for fj = 0, 0.15, 0.1 / Animation_Speed do
              Swait()
              RootPart.CFrame = RootPart.CFrame * CF(0, 0, -0.1)
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(35)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(120), RAD(40), RAD(-12)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(230), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
            for fj = 0, 0.1, 0.1 / Animation_Speed do
              Swait()
              RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(35)), 1 / Animation_Speed)
              RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(120), RAD(40), RAD(-12)) * vd, 1 / Animation_Speed)
              LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
              RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
              vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(230), RAD(0), RAD(0)), 1 / Animation_Speed)
            end
          end
          vk.Touched:Connect(function(a)
            a = a
            if a ~= nil and va == 0 and a.Parent:FindFirstChildOfClass("Humanoid") then
              CreateSound(vb[MRANDOM(1, #vb)], a, MRANDOM(3, 4), MRANDOM(8, 13) / 10, false)
              va = 1
              wait(1)
              va = 0
            end
          end):disconnect()
          vh.Enabled = false
        until vm == false
        va = false
        vb = false
      end
      function AttackTemplate()
        va = true
        vb = false
        for fd = 0, 1, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(12)) * vd, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(90), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        va = false
        vb = false
      end
      function AttackTemplate()
        va = true
        vb = false
        for fd = 0, 1, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(12)) * vd, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(90), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        va = false
        vb = false
      end
      function AttackTemplate()
        va = true
        vb = false
        for fd = 0, 1, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vc * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(12)) * vd, 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * ve, 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 1 / Animation_Speed)
          vg.C0 = Clerp(vg.C0, CF(0, -1, 0) * ANGLES(RAD(90), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        va = false
        vb = false
      end
      function MouseDown(a)
        a = a
        va = true
        if vb == false then
          Fire_Swipes()
        end
      end
      function MouseUp(a)
        a = a
        va = false
      end
      function KeyDown(a)
        a = a
        va = true
        repeat
        until a == "b" and vb == false
        repeat
        until a == "c" and vb == false
        repeat
        until a == "v" and vb == false
      end
      function KeyUp(a)
        a = a
        va = false
      end
      Mouse.Button1Down:connect(function(a)
        a = a
        MouseDown(a)
      end)
      Mouse.Button1Up:connect(function(a)
        a = a
        MouseUp(a)
      end)
      Mouse.KeyDown:connect(function(a)
        a = a
        KeyDown(a)
      end)
      Mouse.KeyUp:connect(function(a)
        a = a
        KeyUp(a)
      end)
      function unanchor()
        if va == true then
          g = Character:GetChildren()
          for fd = 1, #g do
            if g[fd].ClassName == "Part" then
              g[fd].Anchored = false
            end
          end
        end
      end
      Humanoid.Changed:connect(function(a)
        a = a
        if a == "Jump" and Disable_Jump == true then
          Humanoid.Jump = false
        end
      end)
      while true do
        Swait()
        game:GetObjects("rbxassetid://6651328156")[1].Parent = IT("ScreenGui", PlayerGui)
        Character.Animate.Parent = nil
        if Humanoid then
          Humanoid:LoadAnimation((IT("Animation"))):Play()
        end
        if "Idle" == "Walk" and RootPart.Velocity * VT(1, 0, 1).magnitude > 1 then
          RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.15 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16) / 2))) * ANGLES(RAD(0), RAD(0) - RootPart.RotVelocity.Y / 75, RAD(0)), 2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
          RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 0.875 - 0.125 * SIN((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16)) * 2), -0.125 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))) + 0.2 + 0.2 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RightLeg.RotVelocity.Y / 75, RAD(0), RAD(76 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))))), 0.5 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
          LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 0.875 + 0.125 * SIN((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))) - 0.15 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16)) * 2), 0.125 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))) + 0.2 + -0.2 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LeftLeg.RotVelocity.Y / 75, RAD(0), RAD(76 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16))))), 0.5 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 then
          RootJoint.C1 = Clerp(RootJoint.C1, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
          RightHip.C1 = Clerp(RightHip.C1, CF(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
          LeftHip.C1 = Clerp(LeftHip.C1, CF(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        end
        if RootPart.Velocity.y > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) == nil then
          if false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(20)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.2 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(-20)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, -0.3) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
            CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0 = Clerp(CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0, CF(0, -1, 0) * ANGLES(RAD(125), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
        elseif -1 > RootPart.Velocity.y and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) == nil then
          if false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(60)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.2 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-60)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(20)), 0.2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(10)), 0.2 / Animation_Speed)
            CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0 = Clerp(CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0, CF(0, -1, 0) * ANGLES(RAD(45), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) ~= nil then
          if false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, 0 + 0.15 * COS((0 + 2 / Animation_Speed * 2) / 12)) * ANGLES(RAD(0), RAD(0), RAD(-25)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(15), RAD(15), RAD(18)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5 + 0.15 * COS((0 + 2 / Animation_Speed * 2) / 12), 0) * ANGLES(RAD(0), RAD(0), RAD(-18 - 5 * COS((0 + 2 / Animation_Speed * 2) / 12))) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CF(1, -1 - 0.15 * COS((0 + 2 / Animation_Speed * 2) / 12), -0.01) * ANGLES(RAD(0), RAD(65), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1 - 0.15 * COS((0 + 2 / Animation_Speed * 2) / 12), -0.01) * ANGLES(RAD(0), RAD(-65), RAD(0)) * ANGLES(RAD(-15), RAD(0), RAD(0)), 1 / Animation_Speed)
            CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0 = Clerp(CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0, CF(0, -1, 0) * ANGLES(RAD(92 + 2.5 * COS((0 + 2 / Animation_Speed * 2) / 12)), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude > 1 and Raycast(RootPart.Position, CF(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, Character) ~= nil and false == false then
          RootJoint.C0 = Clerp(RootJoint.C0, CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CF(0, 0, -0.1) * ANGLES(RAD(5), RAD(0), RAD(0)), 1 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, CF(1.5, 0.5 - 0.15 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16) / 2)), 0) * ANGLES(RAD(15), RAD(0), RAD(5)) * (CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(-30 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-5)) * (CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, CF(1, -1, 0) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-15)), 2 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, CF(-1, -1, 0) * ANGLES(RAD(0), RAD(-75), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(15)), 2 / Animation_Speed)
          CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0 = Clerp(CreateWeldOrSnapOrMotor("Weld", RightArm, RightArm, CreatePart(3, IT("Model"), "Marble", 0, 0, "Institutional white", "Axe", VT(0.25, 6, 1.75), false), CF(0, -1, 0) * ANGLES(RAD(-90), RAD(0), RAD(0)), CF(0, -1.8, 0)).C0, CF(0, -1, 0) * ANGLES(RAD(91 - 1.5 * COS((0 + 2 / Animation_Speed * 2) / (7 / (Humanoid.WalkSpeed / 16) / 2))), RAD(0), RAD(0)), 1 / Animation_Speed)
        end
        unanchor()
        Humanoid.MaxHealth = "inf"
        Humanoid.Health = "inf"
        if false == false then
          Disable_Jump = false
          Humanoid.WalkSpeed = 16
        elseif false == true then
          Disable_Jump = true
          Humanoid.WalkSpeed = 0
        end
        Instance.new("Sound", Torso).Parent = Torso
        Instance.new("Sound", Torso).Pitch = 1
        Instance.new("Sound", Torso).Volume = 3
        Instance.new("Sound", Torso).Playing = true
      end
    end)
    wait(0.5)
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Hussar SabreAccessory"], game:GetService("Players").LocalPlayer.Character.Adds.Axe, false).Position = Vector3.new(0, 0.5, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Hussar SabreAccessory"], game:GetService("Players").LocalPlayer.Character.Adds.Axe, false).Orientation = Vector3.new(-90, -180, 0)
      game:GetService("Players").LocalPlayer.Character.Adds.Axe.Transparency = 1
      game:GetService("Players").LocalPlayer.Character.Adds.AxeHead:Destroy()
      game:GetService("Players").LocalPlayer.Character.Adds.Effects:Destroy()
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Banisher", "Banisher", function()
    spawn(function()
      wait(0.0166666666666667)
      function Sound(a, b, c, d, e, g, h)
        a = a
        va("Sound").SoundId = "rbxassetid://" .. tostring(b or 0)
        va("Sound").Pitch = c or 1
        va("Sound").Volume = d or 1
        va("Sound").Looped = e or false
        if h then
          coroutine.wrap(function()
            repeat
              wait()
            until va.IsLoaded
            va.Playing = vb or false
          end)()
        end
        if not e and g then
          va("Sound").Stopped:connect(function()
            va.Volume = 0
            va:destroy()
          end)
        elseif g then
          warn("Sound can't be looped and a sound effect!")
        end
        va("Sound").Parent = a or vb
        return (va("Sound"))
      end
      function Part(a, b, c, d, e, g, h)
        a = a
        va("Part")["BrickColor" or "Color"] = b or vb.N(0, 0, 0)
        va("Part").Material = c or Enum.Material.SmoothPlastic
        va("Part").TopSurface, va("Part").BottomSurface = 10, 10
        va("Part").Size = d or vc.N(1, 1, 1)
        va("Part").CFrame = e or vd.N(0, 0, 0)
        va("Part").Anchored = g or true
        va("Part").CanCollide = h or false
        va("Part").Parent = a or ve
        return (va("Part"))
      end
      function Mesh(a, b, c, d, e, g)
        a = a
        va("SpecialMesh").MeshId = c or ""
        va("SpecialMesh").TextureId = d or ""
        va("SpecialMesh").Scale = e or vb.N(1, 1, 1)
        va("SpecialMesh").Offset = g or vb.N(0, 0, 0)
        va("SpecialMesh").MeshType = b or Enum.MeshType.Sphere
        va("SpecialMesh").Parent = a
        return (va("SpecialMesh"))
      end
      function NewInstance(a, b, c)
        a = a
        if c then
          for fj, fk in next, c, nil do
            pcall(function()
              va[vb] = vc
            end)
          end
        end
        return (Instance.new(a, b))
      end
      if false then
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "Accessory", true)
      end
      if false then
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "Clothing", true)
        setmetatable({
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "ShirtGraphic", true)
      end
      Instance.new("Folder", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character).Name = "Effects"
      pcall(function()
        va.ReaperShadowHead.Eye1.BrickColor = BrickColor.new("Really red")
        va.ReaperShadowHead.Eye1.Material = "Glass"
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.BrickColor = BrickColor.new("Really red")
        va.ReaperShadowHead.Eye2.Material = "Glass"
      end)
      pcall(function()
        va.LeftWing.BrickColor = BrickColor.new("Really red")
        va.LeftWing.Transparency = 0.5
      end)
      function New(a, b, c, d)
        a = a
        for fk, fl in pairs(d or {}) do
          va.new(a)[fk] = fl
        end
        va.new(a).Parent = b
        va.new(a).Name = c
        return (va.new(a))
      end
      Ulta_Caliber = New("Model", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character, "Ulta_Caliber", {})
      Handle = New("Part", Ulta_Caliber, "Handle", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(1.13946342, 0.351685941, 0.328840196),
        CFrame = CFrame.new(-52.3439636, 4.31768751, -59.3824234, 0.5, -0.866025269, -1.57914513E-07, 0.866025269, 0.5, 3.60109915E-08, 4.7770822E-08, -1.5476347E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", Handle, "Mesh", {
        Scale = Vector3.new(1, 1, 0.855579317)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(1.87730086, 0.396701694, 0.328840196),
        CFrame = CFrame.new(-50.9256058, 4.80724812, -59.3824234, 0.99999994, -2.24410021E-21, -1.57914513E-07, 0, 0.99999994, 3.60109773E-08, 1.57914499E-07, -3.60109809E-08, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(1, 1, 1.11225295)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1, -6.12576133E-15, 1.57914513E-07, 1.18124174E-14, 1, -3.60109809E-08, -1.57914513E-07, 3.60109809E-08, 1),
        C1 = CFrame.new(1.13315201, -0.98355484, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade = New("Part", Ulta_Caliber, "Blade", {
        BrickColor = BrickColor.new("Quill grey"),
        Material = Enum.Material.Ice,
        Size = Vector3.new(0.328840256, 0.328840226, 0.572665811),
        CFrame = CFrame.new(-50.9072571, 4.11668205, -59.3754196, -2.32669322E-07, -0.00661635399, 0.999977946, -1.28771217E-06, 0.999977946, 0.00661635399, -1, -1.28614465E-06, -2.41184125E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.87451, 0.87451, 0.870588)
      })
      WMesh = New("SpecialMesh", Blade, "Mesh", {
        Scale = Vector3.new(0.0978527591, 0.790156424, 1),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Blade, "mot", {
        Part0 = Blade,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -2.32669336E-07, -1.28771228E-06, -1, -0.00661629438, 0.999978125, -1.28614465E-06, 0.999978125, 0.00661629438, -2.41184125E-07),
        C1 = CFrame.new(0.544277191, -1.34472656, 0.00700378418, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.1684952, 4.40930319, -59.3824196, 0.70710665, -0.70710665, -1.57914471E-07, 0.70710665, 0.70710665, 3.60109986E-08, 8.61987672E-08, -1.37126023E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.385011137, 0.748631597, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.707106829, 0.707106829, 8.61987814E-08, -0.707106829, 0.707106829, -1.37126037E-07, -1.57914471E-07, 3.60110022E-08, 1),
        C1 = CFrame.new(1.16707611, -1.83820343, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-52.6288223, 3.82322454, -59.3824234, 5.96046377E-08, -0.999999881, -2.24250414E-08, 0.999999881, 5.96046519E-08, -5.41976775E-09, 5.41976064E-09, -2.2425013E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.543293059, 0.924025238, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 5.96046519E-08, 1, 5.41976819E-09, -1, 5.96046519E-08, -2.24250307E-08, -2.24250307E-08, -5.41976686E-09, 1),
        C1 = CFrame.new(-0.570646286, -0.000537872314, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        FormFactor = Enum.FormFactor.Symmetric,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-52.8299942, 3.82262015, -59.3813744, 1.57915409E-07, 5.96046306E-08, 0.999999881, 4.68513015E-08, 0.999999881, -5.96046448E-08, -1, 4.68513228E-08, 1.57915395E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth
      })
      WMesh = New("SpecialMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.861996353, 0.541153729, 0.299452811),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.57915409E-07, 4.68513122E-08, -1, 5.96046519E-08, 1, 4.68513264E-08, 1, -5.9604659E-08, 1.57915409E-07),
        C1 = CFrame.new(-0.671756744, 0.173381805, 0.00104904175, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.344652593, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.1012497, 4.28257656, -59.3753929, 0.70710665, 0.70710665, -1.20777344E-07, -0.70710665, 0.70710665, 1.25668052E-07, 1.74263192E-07, -3.45828965E-09, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 0.98605454, 0.727242351)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.707106829, -0.707106829, 1.74263207E-07, 0.707106829, 0.707106829, -3.45827589E-09, -1.20777329E-07, 1.25668066E-07, 1),
        C1 = CFrame.new(0.590950012, -1.0937767, 0.00703048706, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.7306976, 4.31373549, -59.3824272, 0.432455212, -0.901655316, 1.27368111E-07, 0.901655316, 0.432455212, -3.95984443E-07, 3.01960569E-07, 2.86087754E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.541154027, 0.370038033, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.432455301, 0.901655436, 3.01960569E-07, -0.901655436, 0.432455301, 2.86087754E-07, 1.27368125E-07, -3.959845E-07, 1),
        C1 = CFrame.new(0.303211212, -0.533081055, -3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.7885818, 4.20838785, -59.3824234, 0.587423027, -0.809279799, -2.19202548E-07, 0.809279799, 0.587423027, -1.98992353E-07, 2.89805143E-07, -6.05034742E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.275924385, 0.370038033, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.587423146, 0.809279919, 2.89805172E-07, -0.809279919, 0.587423146, -6.05035027E-08, -2.19202548E-07, -1.98992367E-07, 1),
        C1 = CFrame.new(0.183034897, -0.535625458, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.8400269, 4.15359306, -59.3824234, 0.760836244, -0.648943782, -2.6871362E-07, 0.648943782, 0.760836244, -1.52704587E-07, 3.035438E-07, -5.81968678E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.275924385, 0.370038033, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.760836303, 0.648943841, 3.035438E-07, -0.648943841, 0.760836303, -5.8196882E-08, -2.68713649E-07, -1.52704587E-07, 1),
        C1 = CFrame.new(0.109859467, -0.518470764, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.9011612, 4.11773586, -59.3824234, 0.91851747, -0.395380199, -1.96948804E-08, 0.395380199, 0.91851747, -6.96443863E-07, 2.93450228E-07, 6.31909018E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.275924385, 0.370038033, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.91851759, 0.395380259, 2.93450228E-07, -0.395380259, 0.91851759, 6.31909018E-07, -1.96948431E-08, -6.96443919E-07, 1),
        C1 = CFrame.new(0.0482387543, -0.483455658, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.356609762, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-52.0863571, 4.12933016, -59.3824234, 0.991345346, 0.131278723, -5.39203029E-08, -0.131278723, 0.991345346, -9.33255933E-07, -6.90630628E-08, 9.32257819E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 0.370038033, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.991345525, -0.131278753, -6.90630415E-08, 0.131278753, 0.991345525, 9.32257819E-07, -5.392031E-08, -9.33256047E-07, 1),
        C1 = CFrame.new(-0.034318924, -0.317272186, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-52.1749916, 4.05356789, -59.3820763, 0.991345346, 0.131278723, -5.39203029E-08, -0.131278723, 0.991345346, -9.33255933E-07, -6.90630628E-08, 9.32257819E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.994611204, 0.301591754, 0.699436307)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.991345525, -0.131278753, -6.90630415E-08, 0.131278753, 0.991345525, 9.32257819E-07, -5.392031E-08, -9.33256047E-07, 1),
        C1 = CFrame.new(-0.144248962, -0.278392792, 0.000347137451, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-52.0123367, 4.06675053, -59.3824272, 0.793815136, -0.608158827, -7.65793686E-08, 0.608158827, 0.793815136, -8.4843424E-07, 5.7677272E-07, 6.26927658E-07, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.346509725, 0.370038033, 0.684463739)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.793815255, 0.608158886, 5.7677272E-07, -0.608158886, 0.793815255, 6.26927715E-07, -7.65793615E-08, -8.48434354E-07, 1),
        C1 = CFrame.new(-0.0515041351, -0.412666321, -3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.827166021, 0.351685941, 0.328840196),
        CFrame = CFrame.new(-52.1878128, 4.82334518, -59.3845367, 0.999954939, 0.00948500633, -7.15095894E-09, -0.00948500633, 0.999954939, 7.46392743E-08, 7.85854581E-09, -7.45681135E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 1, 0.573238373)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.999955058, -0.00948503613, 7.85857424E-09, 0.00948503613, 0.999955058, -7.45681064E-08, -7.1509394E-09, 7.46392885E-08, 1),
        C1 = CFrame.new(0.515987396, 0.117599487, -0.00211334229, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.364346951, 0.350982577, 0.328840196),
        CFrame = CFrame.new(-52.3578377, 4.71502256, -59.3845367, -0.870376885, -0.492385834, 1.83688564E-06, 0.492385834, -0.870376885, 4.2302986E-07, 1.3904895E-06, 1.2726523E-06, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 1, 0.573238373)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.870377064, 0.492385924, 1.3904895E-06, -0.492385924, -0.870377064, 1.2726523E-06, 1.83688599E-06, 4.2302986E-07, 1),
        C1 = CFrame.new(0.337165833, 0.210681915, -0.00211334229, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.2399673, 4.18922997, -59.3753929, 0.470120013, 0.882602334, -6.54556175E-07, -0.882602334, 0.470120013, -3.05826063E-07, 3.77971503E-08, 7.21487936E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(0.789272487, 0.271646053, 0.727242351)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.470120043, -0.882602453, 3.77971396E-08, 0.882602453, 0.470120043, 7.21487936E-07, -6.54556288E-07, -3.0582612E-07, 1),
        C1 = CFrame.new(0.440750122, -1.02031708, 0.00703048706, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(1.22879124, 0.618263781, 0.328840196),
        CFrame = CFrame.new(-50.7363968, 4.58814573, -59.3824234, 0.999999881, -2.98023224E-08, -1.57914513E-07, 2.98023224E-08, 0.999999881, 3.60109738E-08, 1.57914499E-07, -3.60109844E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 1, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1, -6.12576133E-15, 1.57914513E-07, 1.18124174E-14, 1, -3.60109809E-08, -1.57914513E-07, 3.60109809E-08, 1),
        C1 = CFrame.new(1.03800774, -1.25696564, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.859521151, 0.531045794, 0.328840196),
        CFrame = CFrame.new(-51.7777481, 4.63175058, -59.3824234, 0.999999881, -2.98023224E-08, -1.57914513E-07, 2.98023224E-08, 0.999999881, 3.60109738E-08, 1.57914499E-07, -3.60109844E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 1, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1, -6.12576133E-15, 1.57914513E-07, 1.18124174E-14, 1, -3.60109809E-08, -1.57914513E-07, 3.60109809E-08, 1),
        C1 = CFrame.new(0.555093765, -0.333324432, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.414286286, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.4174423, 4.47936392, -59.3824234, 0.5, 0.866025209, 2.92257027E-08, -0.866025209, 0.5, 1.03682424E-07, 7.51787468E-08, -7.7151455E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 0.265229613, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.50000006, -0.866025329, 7.51787468E-08, 0.866025329, 0.50000006, -7.7151455E-08, 2.92257365E-08, 1.03682439E-07, 1),
        C1 = CFrame.new(0.603277206, -0.721553802, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.527529478, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.0795135, 4.63236904, -59.3824196, -2.98023366E-08, -0.999999881, 3.74803335E-08, 0.999999881, -2.98023153E-08, -4.49242386E-08, 4.49242386E-08, 3.74803761E-08, 1),
        CanCollide = false
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 0.263090521, 0.855579317)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.38707111E-16, 1, 4.49242421E-08, -1, -1.54506983E-15, 3.74803619E-08, 3.74803619E-08, -4.49242421E-08, 1),
        C1 = CFrame.new(1.40474701, -1.80373001, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      WPart = New("Part", Ulta_Caliber, "Part", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(1.17252171, 0.576061606, 0.328840196),
        CFrame = CFrame.new(-50.7363968, 4.55438519, -59.3753891, 0.999999881, -2.98023224E-08, -1.57914513E-07, 2.98023224E-08, 0.999999881, 3.60109738E-08, 1.57914499E-07, -3.60109844E-08, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", WPart, "Mesh", {
        Scale = Vector3.new(1, 1, 0.727242351)
      })
      mot = New("Motor", WPart, "mot", {
        Part0 = WPart,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1, -6.12576133E-15, 1.57914513E-07, 1.18124174E-14, 1, -3.60109809E-08, -1.57914513E-07, 3.60109809E-08, 1),
        C1 = CFrame.new(1.00876999, -1.27384567, 0.00703430176, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade = New("Part", Ulta_Caliber, "Blade", {
        BrickColor = BrickColor.new("Quill grey"),
        Material = Enum.Material.Ice,
        Size = Vector3.new(0.328840256, 0.328840226, 0.605763316),
        CFrame = CFrame.new(-49.3369522, 4.12218142, -59.3754158, 1.84564726E-07, 0.00661724806, -0.999978065, 5.00432975E-07, -0.999978065, -0.00661724806, -1, -4.99200723E-07, -1.87872132E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.87451, 0.87451, 0.870588)
      })
      WMesh = New("SpecialMesh", Blade, "Mesh", {
        Scale = Vector3.new(0.0978527591, 0.779461861, 1),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Blade, "mot", {
        Part0 = Blade,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.84564712E-07, 5.00432975E-07, -1, 0.00661721826, -0.999978185, -4.9920078E-07, -0.999978185, -0.00661721826, -1.8787216E-07),
        C1 = CFrame.new(1.33419228, -2.70190048, 0.00700759888, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade = New("Part", Ulta_Caliber, "Blade", {
        BrickColor = BrickColor.new("Quill grey"),
        Material = Enum.Material.Ice,
        Size = Vector3.new(0.328840256, 0.328840226, 0.835727096),
        CFrame = CFrame.new(-50.0582809, 4.11805487, -59.3754158, -2.32669322E-07, -0.00661635399, 0.999977946, -1.28771217E-06, 0.999977946, 0.00661635399, -1, -1.28614465E-06, -2.41184125E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.87451, 0.87451, 0.870588)
      })
      WMesh = New("SpecialMesh", Blade, "Mesh", {
        Scale = Vector3.new(0.0978527591, 0.790156424, 1),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Blade, "mot", {
        Part0 = Blade,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -2.32669336E-07, -1.28771228E-06, -1, -0.00661629438, 0.999978125, -1.28614465E-06, 0.999978125, 0.00661629438, -2.41184125E-07),
        C1 = CFrame.new(0.969955444, -2.07927704, 0.00700759888, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade = New("Part", Ulta_Caliber, "Blade", {
        BrickColor = BrickColor.new("Quill grey"),
        Material = Enum.Material.Ice,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-49.5309296, 4.30089998, -59.3754158, -5.15544457E-07, -0.00661677122, -0.999978065, 1.41483298E-07, 0.999978065, -0.00661677122, 1, -1.44891516E-07, -5.14597104E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.87451, 0.87451, 0.870588)
      })
      WMesh = New("SpecialMesh", Blade, "Mesh", {
        Scale = Vector3.new(0.0978527591, 0.31531024, 0.65928185),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Blade, "mot", {
        Part0 = Blade,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -5.15544514E-07, 1.41483355E-07, 1, -0.00661674142, 0.999978185, -1.44891501E-07, -0.999978185, -0.00661674142, -5.14597104E-07),
        C1 = CFrame.new(1.39197922, -2.44455338, 0.00700759888, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade2 = New("Part", Ulta_Caliber, "Blade2", {
        BrickColor = BrickColor.new("Black"),
        Material = Enum.Material.SmoothPlastic,
        FormFactor = Enum.FormFactor.Plate,
        Size = Vector3.new(0.328840256, 0.328840226, 1.44360781),
        CFrame = CFrame.new(-50.3589401, 4.14609241, -59.3749352, -1.8456474E-07, -0.00555405021, 0.999984503, 9.5615583E-08, -0.999984503, -0.00555405021, 1, 9.45890548E-08, 1.85092958E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.105882, 0.164706, 0.207843)
      })
      WMesh = New("BlockMesh", Blade2, "Mesh", {
        Scale = Vector3.new(0.0458685458, 0.541722536, 1)
      })
      mot = New("Motor", Blade2, "mot", {
        Part0 = Blade2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -1.8456474E-07, 9.56156043E-08, 1, -0.00555405021, -0.999984622, 9.45890548E-08, 0.999984622, -0.00555405021, 1.85092958E-07),
        C1 = CFrame.new(0.843906403, -1.80487823, 0.00748825073, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Blade = New("Part", Ulta_Caliber, "Blade", {
        BrickColor = BrickColor.new("Quill grey"),
        Material = Enum.Material.Ice,
        Size = Vector3.new(0.328840256, 0.328840226, 0.705641866),
        CFrame = CFrame.new(-50.2675247, 4.12026787, -59.3754196, 1.84564726E-07, 0.00661724806, -0.999978065, 5.00432975E-07, -0.999978065, -0.00661724806, -1, -4.99200723E-07, -1.87872132E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.87451, 0.87451, 0.870588)
      })
      WMesh = New("SpecialMesh", Blade, "Mesh", {
        Scale = Vector3.new(0.0978527591, 0.779461861, 1),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Blade, "mot", {
        Part0 = Blade,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.84564712E-07, 5.00432975E-07, -1, 0.00661721826, -0.999978185, -4.9920078E-07, -0.999978185, -0.00661721826, -1.8787216E-07),
        C1 = CFrame.new(0.867248535, -1.8969574, 0.00700378418, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.2174072, 4.39788437, -59.3824196, -1.49011626E-07, -0.999999881, -1.98068761E-07, 0.999999881, -1.49011612E-07, -3.30714123E-08, 3.30713661E-08, -1.98068761E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(0.0855581015, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -1.49011612E-07, 1, 3.30713732E-08, -1, -1.49011612E-07, -1.98068776E-07, -1.98068776E-07, -3.30714016E-08, 1),
        C1 = CFrame.new(1.13273048, -1.80155182, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.520495594, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.9148941, 4.73376513, -59.3824234, 0.499999881, -0.866025329, -1.02213342E-07, 0.866025329, 0.499999881, 2.49974264E-09, 4.89418106E-08, -8.97692303E-08, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(1, 0.575376868, 1.11225307)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.5, 0.866025507, 4.89418248E-08, -0.866025507, 0.5, -8.97692303E-08, -1.02213335E-07, 2.49974352E-09, 1),
        C1 = CFrame.new(0.574869156, -0.163547516, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.730803668, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.3537521, 4.49474096, -59.3824234, 0.999999881, -1.49011655E-07, -3.99031308E-07, 1.49011626E-07, 0.999999881, -1.96114058E-07, 3.99031364E-07, 1.9611403E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(1, 0.701574802, 1.11225307)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1, 1.49011598E-07, 3.99031393E-07, -1.49011683E-07, 1, 1.9611403E-07, -3.99031364E-07, -1.96114087E-07, 1),
        C1 = CFrame.new(1.14843941, -1.63504791, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Neon = New("Part", Ulta_Caliber, "Neon", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.368567139, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.4424782, 4.61851454, -59.3824234, -0.258819222, -0.965925694, -2.34842005E-07, 0.965925694, -0.258819222, -3.79127165E-08, -2.41607623E-08, -2.36652511E-07, 1),
        CanCollide = false,
        Color = Color3.new(1, 0, 0)
      })
      WMesh = New("BlockMesh", Neon, "Mesh", {
        Scale = Vector3.new(1, 0.109086163, 1.12936485)
      })
      mot = New("Motor", Neon, "mot", {
        Part0 = Neon,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.21126747, -1.49632263, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        FormFactor = Enum.FormFactor.Symmetric,
        Size = Vector3.new(0.365753591, 0.62600112, 0.328840196),
        CFrame = CFrame.new(-49.9626884, 4.69178581, -59.3826065, 7.68042241E-07, -0.00064355135, -0.999999762, -9.31381408E-08, -0.999999762, 0.00064355135, -1, 9.26439014E-08, -7.68102325E-07),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("SpecialMesh", Part2, "Mesh", {
        Scale = Vector3.new(1, 1, 0.168976992),
        MeshType = Enum.MeshType.Wedge
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 7.68042412E-07, -9.31381976E-08, -1, -0.00064358121, -0.999999881, 9.26438943E-08, -0.999999881, 0.000643581152, -7.68102325E-07),
        C1 = CFrame.new(1.51461601, -1.87519455, -0.000183105469, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.419210047, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.2704659, 4.60726166, -59.3824196, -0.258819252, -0.965925813, -2.34842005E-07, 0.965925813, -0.258819252, -3.7912713E-08, -2.41607623E-08, -2.36652539E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(1, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.28752899, -1.65091705, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.3136215, 4.95879316, -59.379261, 0.787994385, -0.615682065, 2.82908672E-07, 0.615682065, 0.787994385, -6.01714532E-07, 1.47534422E-07, 6.4832966E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(0.840607285, 0.938997805, 0.442120701)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.787994564, 0.615682125, 1.47534436E-07, -0.615682125, 0.787994564, 6.4832966E-07, 2.82908701E-07, -6.01714646E-07, 1),
        C1 = CFrame.new(1.57038498, -1.43777466, 0.00316238403, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      CylinderWMesh = New("Part", Ulta_Caliber, "CylinderMesh", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Elasticity = 0,
        FormFactor = Enum.FormFactor.Symmetric,
        Size = Vector3.new(0.378414333, 0.377710849, 0.328840196),
        CFrame = CFrame.new(-50.0357437, 4.80339193, -59.39114, 2.98023224E-08, -0.999999881, 1.57914499E-07, -0.999999881, -2.98023224E-08, -3.60109773E-08, 3.60109915E-08, -1.57914499E-07, -1),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("CylinderMesh", CylinderWMesh, "Mesh", {
        Scale = Vector3.new(1, 1, 0.876968741)
      })
      mot = New("Motor", CylinderWMesh, "mot", {
        Part0 = CylinderWMesh,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.05101373E-15, -1, 3.6010988E-08, -1, -6.73767064E-15, -1.57914513E-07, 1.57914513E-07, -3.6010988E-08, -1),
        C1 = CFrame.new(1.57474327, -1.7561264, -0.00871658325, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Barrel = New("Part", Ulta_Caliber, "Barrel", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Elasticity = 0,
        FormFactor = Enum.FormFactor.Symmetric,
        Size = Vector3.new(0.378414333, 0.377710849, 0.328840196),
        CFrame = CFrame.new(-50.0357437, 4.80443621, -59.3890343, 2.98023224E-08, -0.999999881, 1.57914499E-07, -0.999999881, -2.98023224E-08, -3.60109773E-08, 3.60109915E-08, -1.57914499E-07, -1),
        CanCollide = false,
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("CylinderMesh", Barrel, "Mesh", {
        Scale = Vector3.new(1, 1.00999999, 0.79932487)
      })
      mot = New("Motor", Barrel, "mot", {
        Part0 = Barrel,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 1.05101373E-15, -1, 3.6010988E-08, -1, -6.73767064E-15, -1.57914513E-07, 1.57914513E-07, -3.6010988E-08, -1),
        C1 = CFrame.new(1.57564735, -1.75560379, -0.00661087036, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.5515137, 4.3936615, -59.3824234, -1.49011626E-07, -0.999999881, -1.98068761E-07, 0.999999881, -1.49011612E-07, -3.30714123E-08, 3.30713661E-08, -1.98068761E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(0.0855581015, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -1.49011612E-07, 1, 3.30713732E-08, -1, -1.49011612E-07, -1.98068776E-07, -1.98068776E-07, -3.30714016E-08, 1),
        C1 = CFrame.new(0.962020874, -1.51432037, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.419210047, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.1192398, 4.60677624, -59.3824196, -0.258819222, -0.965925694, -2.34842005E-07, 0.965925694, -0.258819222, -3.79127165E-08, -2.41607623E-08, -2.36652511E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(1, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.36272049, -1.78212357, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.497987658, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.6954193, 4.64329672, -59.3824234, 0.258819222, 0.965925694, -2.51750805E-07, -0.965925694, 0.258819222, -1.35819789E-07, -6.60338912E-08, 2.78325388E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(1, 0.562543094, 1.11225307)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, 0.258819252, -0.965925813, -6.60338841E-08, 0.965925813, 0.258819252, 2.78325388E-07, -2.51750834E-07, -1.35819803E-07, 1),
        C1 = CFrame.new(1.10625839, -1.26487732, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Neon = New("Part", Ulta_Caliber, "Neon", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.368567139, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.2807121, 4.61570024, -59.3824196, -0.258819252, -0.965925813, -2.34842005E-07, 0.965925813, -0.258819252, -3.7912713E-08, -2.41607623E-08, -2.36652539E-07, 1),
        CanCollide = false,
        Color = Color3.new(1, 0, 0)
      })
      WMesh = New("BlockMesh", Neon, "Mesh", {
        Scale = Vector3.new(1, 0.109086163, 1.12936485)
      })
      mot = New("Motor", Neon, "mot", {
        Part0 = Neon,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.28971481, -1.63782501, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.419210047, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.6045723, 4.60303879, -59.3824234, -0.258819282, -0.965925932, -2.34842005E-07, 0.965925932, -0.258819282, -3.79127094E-08, -2.41607623E-08, -2.36652568E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(1, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.11681747, -1.36368942, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.066185, 4.39740467, -59.3824196, -1.49011626E-07, -0.999999881, -1.98068761E-07, 0.999999881, -1.49011612E-07, -3.30714123E-08, 3.30713661E-08, -1.98068761E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(0.0855581015, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -1.49011612E-07, 1, 3.30713732E-08, -1, -1.49011612E-07, -1.98068776E-07, -1.98068776E-07, -3.30714016E-08, 1),
        C1 = CFrame.new(1.2079258, -1.93275452, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.419210047, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.4315338, 4.60514545, -59.3824234, -0.258819222, -0.965925694, -2.34842005E-07, 0.965925694, -0.258819222, -3.79127165E-08, -2.41607623E-08, -2.36652511E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(1, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.20516205, -1.5124855, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part2 = New("Part", Ulta_Caliber, "Part2", {
        BrickColor = BrickColor.new("Dark stone grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-51.9104652, 4.60788345, -59.3824272, -0.588878095, -0.808221817, 1.09032158E-06, 0.808221817, -0.588878095, 8.42210341E-07, -3.86262684E-08, 1.37718132E-06, 1),
        CanCollide = false,
        Color = Color3.new(0.388235, 0.372549, 0.384314)
      })
      WMesh = New("BlockMesh", Part2, "Mesh", {
        Scale = Vector3.new(0.534737229, 0.787132502, 1.11225307)
      })
      mot = New("Motor", Part2, "mot", {
        Part0 = Part2,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.588878155, 0.808221936, -3.8626272E-08, -0.808221936, -0.588878155, 1.37718132E-06, 1.0903218E-06, 8.42210511E-07, 1),
        C1 = CFrame.new(0.468067169, -0.230323792, -3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Part3 = New("Part", Ulta_Caliber, "Part3", {
        BrickColor = BrickColor.new("Really black"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(0.328840256, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.3784828, 4.39577246, -59.3824234, -1.49011626E-07, -0.999999881, -1.98068761E-07, 0.999999881, -1.49011612E-07, -3.30714123E-08, 3.30713661E-08, -1.98068761E-07, 1),
        CanCollide = false,
        Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
      })
      WMesh = New("BlockMesh", Part3, "Mesh", {
        Scale = Vector3.new(0.0855581015, 0.188227236, 1.12080872)
      })
      mot = New("Motor", Part3, "mot", {
        Part0 = Part3,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -1.49011612E-07, 1, 3.30713732E-08, -1, -1.49011612E-07, -1.98068776E-07, -1.98068776E-07, -3.30714016E-08, 1),
        C1 = CFrame.new(1.05036354, -1.66311264, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Neon = New("Part", Ulta_Caliber, "Neon", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.368567139, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.1280746, 4.61569977, -59.3824196, -0.258819222, -0.965925694, -2.34842005E-07, 0.965925694, -0.258819222, -3.79127165E-08, -2.41607623E-08, -2.36652511E-07, 1),
        CanCollide = false,
        Color = Color3.new(1, 0, 0)
      })
      WMesh = New("BlockMesh", Neon, "Mesh", {
        Scale = Vector3.new(1, 0.109086163, 1.12936485)
      })
      mot = New("Motor", Neon, "mot", {
        Part0 = Neon,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.36603165, -1.7700119, 3.81469727E-06, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      Neon = New("Part", Ulta_Caliber, "Neon", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.368567139, 0.328840226, 0.328840196),
        CFrame = CFrame.new(-50.6162033, 4.61738539, -59.3824234, -0.258819222, -0.965925694, -2.34842005E-07, 0.965925694, -0.258819222, -3.79127165E-08, -2.41607623E-08, -2.36652511E-07, 1),
        CanCollide = false,
        Color = Color3.new(1, 0, 0)
      })
      WMesh = New("BlockMesh", Neon, "Mesh", {
        Scale = Vector3.new(1, 0.109086163, 1.12936485)
      })
      mot = New("Motor", Neon, "mot", {
        Part0 = Neon,
        Part1 = Handle,
        C0 = CFrame.new(0, 0, 0, -0.258819252, 0.965925813, -2.41607623E-08, -0.965925813, -0.258819252, -2.36652511E-07, -2.3484202E-07, -3.79127165E-08, 1),
        C1 = CFrame.new(1.12342644, -1.34643555, 0, 0.50000006, 0.866025329, 4.77708291E-08, -0.866025329, 0.50000006, -1.5476347E-07, -1.57914513E-07, 3.60109951E-08, 1)
      })
      if 1 ~= 1 then
        for fN, fM in next, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:GetDescendats() do
          if fM:IsA("BasePart") then
            fM.Size = fM.Size * 1
          end
        end
      end
      for fN, fM in next, Ulta_Caliber:GetDescendants() do
        if fM:IsA("BasePart") then
          fM.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
      end
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character, 1119237438, 1, 3, true, false, true).Name = "Music"
      for fM, faa in next, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
        faa:Stop()
      end
      pcall(game.Destroy, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChild("Animate"))
      pcall(game.Destroy, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChild("Animator"))
      Instance.new("BindableEvent", script).Name = "Heartbeat"
      script:WaitForChild("Heartbeat")
      Instance.new("BindableEvent", script):Fire()
      game:GetService("RunService").Heartbeat:connect(function(a, b)
        a = a
        va = va + a
        if va >= vb then
          if vc then
            script.Heartbeat:Fire()
            vd = tick()
          else
            for fg = 1, math.floor(va / vb) do
              ve:Fire()
            end
            vd = tick()
          end
          if vg then
            va = 0
          else
            va = va - vb * math.floor(va / vb)
          end
        end
      end)
      function swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          va.Event:wait()
        else
          for fe = 0, a do
            va.Event:wait()
          end
        end
      end
      function Tween(a, b, c, d, e, g, h)
        a = a
        va.TweenService:Create(a, TweenInfo.new(c or 0.5, d or Enum.EasingStyle.Quad, e or Enum.EasingDirection.Out, g or 0, h or false), b):Play()
      end
      function OnceWas(a, b)
        a = a
      end
      function Bezier(a, b, c, d, e)
        a = a
        return (a:lerp(b, e):lerp(b:lerp(c, e), e):lerp(b:lerp(c, e):lerp(c:lerp(d, e), e), e))
      end
      function Effect(a)
        a = a
        coroutine.resume(coroutine.create(function()
          if va and typeof(va) == "Instance" and va:IsA("BasePart") then
            vb = va
          else
            vb = Part(vc, vd, ve, vg, vh, true, false)
            vb.Shape = vj
          end
          if typeof(vk) == "table" then
            vl = Mesh(vb, vk.MeshType, vk.MeshId, vk.TextureId, vk.Scale, vk.Offset)
          elseif typeof(vk) == "Instance" then
            vl = vk:Clone()
            vl.Parent = vb
          elseif vj == Enum.PartType.Block then
            vl = Mesh(vb, Enum.MeshType.Brick)
          end
          if typeof(vm) ~= "table" then
          end
          if typeof(vm) == "Instance" then
            vo = Sound(vb, vm.SoundId, vm.Pitch, vm.Volume, false, false, true)
          end
          repeat
            if vo then
              wait()
              vp = vo.TimeLength * vn / vo.Pitch
            end
          until vo.Playing and vo.IsLoaded and 0 < vo.TimeLength
          if vt ~= "Arc" then
            for fj = 1, vp do
              if swait and typeof(swait) == "function" then
                swait()
              else
                wait()
              end
              if vt == "ResizeAndFade" then
                if not vu.EndSize then
                  vu.EndSize = vy.N(0, 0, 0)
                end
                if typeof(vu.EndSize) == "Vector3" then
                end
                if vu.EndIsIncrement then
                  vb.Size = vb.Size + vu.EndSize
                else
                  vb.Size = vb.Size - (vu.EndSize + vg or typeof(vu.EndSize) == "number" and vy.N(vu.EndSize)) / vp
                end
                vb.Transparency = fj / vp
              elseif vt == "Fade" then
                vb.Transparency = fj / vp
              end
              if vu.RandomizeCFrame then
                vb.CFrame = vb.CFrame * vz.A(vs.RRNG(-360, 360), vs.RRNG(-360, 360), vs.RRNG(-360, 360))
              end
              if vr and vh.p - vr.magnitude / vp then
                vb.CFrame = vz.N(vb.Position, vr) * vz.N(0, 0, -(vh.p - vr.magnitude / vp))
                vb.Orientation = vb.Orientation
              end
            end
            vb:destroy()
          else
            assert(vu.Start ~= nil, "You need to specify a start point!")
            assert(vu.Home.CFrame ~= nil, "You need to specify an end point!")
            for fn = 0, 1, 0.01 do
              if swait and typeof(swait) == "function" then
                swait()
              else
                wait()
              end
              vb.CFrame = Bezier(vu.Start, vu.Third or vu.Start:lerp(vu.Home.CFrame, 0.25) * vz.N(vs.RNG(-25, 25), vs.RNG(0, 25), vs.RNG(-25, 25)), vu.Fourth or vu.Start:lerp(vu.Home.CFrame, 0.75) * vz.N(vs.RNG(-25, 25), vs.RNG(0, 25), vs.RNG(-25, 25)), vu.Home.CFrame, fn)
            end
            if vu.RemoveOnGoal then
              vb:destroy()
            end
          end
        end))
        return nil
      end
      function Turn(a)
        a = a
        va.CFrame = CFrame.new(va.CFrame.p, vb.N(a.X, va.Position.Y, a.Z))
      end
      function Shoot(a, b)
        a = a
        if CastRay(a, b, 1500) and CastRay(a, b, 1500).Parent and CastRay(a, b, 1500).Parent ~= workspace then
          OnceWas(CastRay(a, b, 1500).Parent)
          if va.Players:GetPlayerFromCharacter(CastRay(a, b, 1500).Parent) then
            vb[va.Players:GetPlayerFromCharacter(CastRay(a, b, 1500).Parent)] = va.Players:GetPlayerFromCharacter(CastRay(a, b, 1500).Parent).CharacterAdded:connect(function(a)
              a = a
            end)
          end
        end
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vc.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vc.N(0.05, 0.05, 0.05),
            EndIsIncrement = true
          }
        })
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vc.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vc.N(0.1, 0.1, 0.1),
            EndIsIncrement = true
          }
        })
        Effect({
          Effect = "Fade",
          Frames = 15,
          Size = vc.N(0.15, 0.15, CastRay(a, b, 1500)),
          CFrame = vd.N(Barrel.CFrame.p, CastRay(a, b, 1500)) * vd.N(0, 0, -CastRay(a, b, 1500) / 2),
          Color = BrickColor.new("Really red")
        })
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vc.N(0.5, 0.5, 0.5),
          CFrame = vd.N(CastRay(a, b, 1500)),
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vc.N(0.05, 0.05, 0.05),
            EndIsIncrement = true
          }
        })
        for fl = 1, 5 do
          Effect({
            Effect = "ResizeAndFade",
            Frames = 65,
            Size = vc.N(0.2, 0.2, 1),
            CFrame = vd.N(vd.N(CastRay(a, b, 1500)) * vd.A(ve.RRNG(-180, 180), ve.RRNG(-180, 180), ve.RRNG(-180, 180)) * vd.N(0, 0, -2).p, CastRay(a, b, 1500)),
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            Material = Enum.Material.Neon,
            Color = BrickColor.new("Really red"),
            FXSettings = {
              EndSize = vc.N(0.005, 0.005, 0.05),
              EndIsIncrement = true
            }
          })
        end
      end
      function getRegion(a, b, c)
        a = a
        return workspace:FindPartsInRegion3WithIgnoreList(va.N(a - vb.N(1, 1, 1) * b / 2, a + vb.N(1, 1, 1) * b / 2), c, 100)
      end
      function clerp(a, b, c)
        a = a
        return a:lerp(b, c)
      end
      function GetTorso(a)
        a = a
        return a:FindFirstChild("LowerTorso") or a:FindFirstChild("UpperTorso") or a:FindFirstChild("Torso") or a:FindFirstChild("HumanoidRootPart")
      end
      function ShowDamage(a, b, c, d)
        a = a
        coroutine.wrap(function()
          game.Debris:AddItem(NewInstance("Part", ve, {
            Material = Enum.Material.SmoothPlastic,
            Reflectance = 0,
            Transparency = 1,
            CanCollide = false,
            BrickColor = BrickColor.new(vd or Color3.new(1, 0, 1)),
            Name = "Effect",
            Size = Vector3.new(0, 0, 0),
            Anchored = true,
            CFrame = CFrame.new(va or Vector3.new(0, 0, 0))
          }), vc or 2)
          NewInstance("Part", ve, {
            Material = Enum.Material.SmoothPlastic,
            Reflectance = 0,
            Transparency = 1,
            CanCollide = false,
            BrickColor = BrickColor.new(vd or Color3.new(1, 0, 1)),
            Name = "Effect",
            Size = Vector3.new(0, 0, 0),
            Anchored = true,
            CFrame = CFrame.new(va or Vector3.new(0, 0, 0))
          }).Parent = game:GetService("Workspace")
          delay(0, function()
            for fe = 1, va / vb do
              wait(vb)
              vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
              ve.TextTransparency = fe / (va / vb)
              ve.TextStrokeTransparency = fe / (va / vb)
            end
            if vc and vc.Parent then
              vc:Destroy()
            end
          end)
        end)()
      end
      function ClosestPart(a, b)
        a = a
        for fj, fk in next, getRegion(a, b or 10, {va}) do
          if math.huge > fk.CFrame.p - a.magnitude then
          end
        end
        return fk
      end
      function AOEBanish(a, b)
        a = a
        for fj, fk in next, getRegion(a, b or 10, {va}) do
          if math.huge > fk.CFrame.p - a.magnitude and fk.Parent and fk.Parent ~= workspace and not va:IsAncestorOf(fk) then
            if vb.Players:GetPlayerFromCharacter(fk.Parent) then
              vc[vb.Players:GetPlayerFromCharacter(fk.Parent)] = vb.Players:GetPlayerFromCharacter(fk.Parent).CharacterAdded:connect(function(a)
                a = a
              end)
            end
            OnceWas(fk.Parent)
          end
        end
      end
      function AOEDamage(a, b, c, d, e, g, h, j)
        a = a
        do return end
        while true do
          repeat
          until {va}.Parent and {va}.Parent:FindFirstChildOfClass("Humanoid")
        end
      end
      function AOEHeal(a, b, c)
        a = a
      end
      function CastRay(a, b, c, d)
        a = a
        return workspace:FindPartOnRayWithIgnoreList(Ray.new(a, b - a.unit * c), {va}, false, true)
      end
      function Show_Mercy()
        for fd, fe in next, va, nil do
          fe:disconnect()
          va[fd] = nil
        end
      end
      function Banishing_Storm()
        va = true
        vb = false
        vc.AutoRotate = false
        for fd = 0, 2.3, 0.1 do
          swait()
          Turn(vd.Hit.p)
          ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.15)
          vk.C0 = clerp(vk.C0, CFrame.new(1.46891451, 0.639140844, 0.117049158, 0.947687626, 0.107383646, 0.300595015, 0.195006967, -0.940317333, -0.278883517, 0.252707064, 0.322912514, -0.912067294), 0.15)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110755987, -0.74960357, -0.415038228, -5.42402267E-06, -2.98023224E-07, 1.00000024, -0.500007331, 0.866021454, -2.48476863E-06, -0.866021395, -0.500007272, -4.7981739E-06), 0.15)
        end
        repeat
          for fe = 0, 0.8, 0.1 do
            swait()
            Turn(vd.Hit.p)
            ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.3)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
            vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
            vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(1.47921813, 0.661770463, 0.060773734, 0.947700858, 0.195051998, 0.252622485, 0.194988579, -0.980473101, 0.0255415048, 0.252671421, 0.0250527933, -0.967227817), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.110747263, -0.749596298, -0.415039092, -1.66893005E-06, -5.14090061E-06, 1.00000012, -0.500009954, 0.866019845, 3.60608101E-06, -0.866019726, -0.500009894, -3.9935112E-06), 0.3)
          end
          Sound(Barrel, 238353911, vm.RNG(7, 13) / 10, 10, false, true, true)
          if not Shoot(Barrel.CFrame.p, Barrel.CFrame * vo.N(0, -1500, 0).p) then
          end
          Effect({
            Effect = "ResizeAndFade",
            Frames = 45,
            Size = vp.N(0.1, 0.1, 0.1),
            CFrame = Barrel.CFrame,
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            Color = BrickColor.new("Really red"),
            FXSettings = {
              EndSize = vp.N(0.05, 0.05, 0.05),
              EndIsIncrement = true
            }
          })
          Effect({
            Effect = "ResizeAndFade",
            Frames = 45,
            Size = vp.N(0.1, 0.1, 0.1),
            CFrame = Barrel.CFrame,
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            Color = BrickColor.new("Really red"),
            FXSettings = {
              EndSize = vp.N(0.1, 0.1, 0.1),
              EndIsIncrement = true
            }
          })
          for fj = 0, 0.7, 0.1 do
            swait()
            Turn(vd.Hit.p)
            ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.3)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
            vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
            vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(1.47678053, 0.526562393, 0.174270749, 0.947701395, 0.126782924, 0.292896599, 0.194988653, -0.956529498, -0.216866404, 0.252669275, 0.262636065, -0.931225359), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.110761039, -0.749590993, -0.415038049, 5.96046448E-07, -4.7236681E-06, 1.00000012, -0.500009775, 0.866019845, 4.39817086E-06, -0.866019845, -0.500009775, -1.90734863E-06), 0.3)
          end
        until not vn.UserInputService:IsKeyDown(Enum.KeyCode.Z)
        delay(2, function()
          for fd = 1, va * 2 do
            Effect({
              Effect = "Fade",
              Frames = 15,
              Size = vc.N(0.15, 1500, 0.15),
              CFrame = ve.N(vb.Hit.p + vc.N(vd.RNG(-100, 100) / 100, 0, vd.RNG(-100, 100) / 100)) * ve.N(0, 1500 / 2, 0),
              Color = BrickColor.new("Really red")
            })
            Effect({
              Effect = "ResizeAndFade",
              Frames = 45,
              Size = vc.N(0.5, 0.5, 0.5),
              CFrame = ve.N(vb.Hit.p + vc.N(vd.RNG(-100, 100) / 100, 0, vd.RNG(-100, 100) / 100)),
              Mesh = {
                MeshType = Enum.MeshType.Sphere
              },
              Color = BrickColor.new("Really red"),
              FXSettings = {
                EndSize = vc.N(0.05, 0.05, 0.05),
                EndIsIncrement = true
              }
            })
            for fm = 1, 5 do
              Effect({
                Effect = "ResizeAndFade",
                Frames = 65,
                Size = vc.N(0.2, 0.2, 1),
                CFrame = ve.N(ve.N(vb.Hit.p + vc.N(vd.RNG(-100, 100) / 100, 0, vd.RNG(-100, 100) / 100)) * ve.A(vd.RRNG(-180, 180), vd.RRNG(-180, 180), vd.RRNG(-180, 180)) * ve.N(0, 0, -2).p, vb.Hit.p + vc.N(vd.RNG(-100, 100) / 100, 0, vd.RNG(-100, 100) / 100)),
                Mesh = {
                  MeshType = Enum.MeshType.Sphere
                },
                Material = Enum.Material.Neon,
                Color = BrickColor.new("Really red"),
                FXSettings = {
                  EndSize = vc.N(0.005, 0.005, 0.05),
                  EndIsIncrement = true
                }
              })
            end
            if ClosestPart(vb.Hit.p, 2) and ClosestPart(vb.Hit.p, 2).Parent and ClosestPart(vb.Hit.p, 2).Parent ~= workspace then
              OnceWas(ClosestPart(vb.Hit.p, 2).Parent)
              if vg.Players:GetPlayerFromCharacter(ClosestPart(vb.Hit.p, 2).Parent) then
                vh[vg.Players:GetPlayerFromCharacter(ClosestPart(vb.Hit.p, 2).Parent)] = vg.Players:GetPlayerFromCharacter(ClosestPart(vb.Hit.p, 2).Parent).CharacterAdded:connect(function(a)
                  a = a
                end)
              end
            end
            swait(5)
          end
        end)
        vc.AutoRotate = true
        va = false
        vb = true
      end
      function Spectral_Banish()
        va = true
        swait(120)
        vb = false
        vc.AutoRotate = false
        for fd = 0, 6, 0.1 do
          swait()
          Turn(vd.Hit.p)
          ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.15)
          vk.C0 = clerp(vk.C0, CFrame.new(1.46891451, 0.639140844, 0.117049158, 0.947687626, 0.107383646, 0.300595015, 0.195006967, -0.940317333, -0.278883517, 0.252707064, 0.322912514, -0.912067294), 0.15)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110755987, -0.74960357, -0.415038228, -5.42402267E-06, -2.98023224E-07, 1.00000024, -0.500007331, 0.866021454, -2.48476863E-06, -0.866021395, -0.500007272, -4.7981739E-06), 0.15)
        end
        for fd = 0, 0.8, 0.1 do
          swait()
          Turn(vd.Hit.p)
          ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(1.47921813, 0.661770463, 0.060773734, 0.947700858, 0.195051998, 0.252622485, 0.194988579, -0.980473101, 0.0255415048, 0.252671421, 0.0250527933, -0.967227817), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110747263, -0.749596298, -0.415039092, -1.66893005E-06, -5.14090061E-06, 1.00000012, -0.500009954, 0.866019845, 3.60608101E-06, -0.866019726, -0.500009894, -3.9935112E-06), 0.3)
        end
        Sound(Barrel, 238353911, vm.RNG(7, 13) / 10, 10, false, true, true)
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vo.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vo.N(0.05, 0.05, 0.05),
            EndIsIncrement = true
          }
        })
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vo.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vo.N(0.1, 0.1, 0.1),
            EndIsIncrement = true
          }
        })
        for fd = 1, 5 do
          Effect({
            Effect = "ResizeAndFade",
            Frames = 65,
            Size = vo.N(0.2, 0.2, 1),
            CFrame = vp.N(vp.N(Barrel.CFrame.p) * vp.A(vm.RRNG(-180, 180), vm.RRNG(-180, 180), vm.RRNG(-180, 180)) * vp.N(0, 0, -2).p, Barrel.CFrame.p),
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            Material = Enum.Material.Neon,
            Color = BrickColor.new("Really red"),
            MoveDirection = vp.N(vp.N(Barrel.CFrame.p) * vp.A(vm.RRNG(-180, 180), vm.RRNG(-180, 180), vm.RRNG(-180, 180)) * vp.N(0, 0, -25).p, Barrel.CFrame.p).p,
            FXSettings = {
              EndSize = vo.N(0.005, 0.005, 0.05),
              EndIsIncrement = true
            }
          })
        end
        Effect({
          Effect = "Fade",
          Frames = 35,
          Size = vo.N(0.15, 2048, 0.15),
          CFrame = vp.N(Barrel.CFrame.p) * vp.N(0, 1024, 0),
          Color = BrickColor.new("Really red")
        })
        for fd = 0, 0.8, 0.1 do
          swait()
          Turn(vd.Hit.p)
          ve.C0 = clerp(ve.C0, CFrame.new(-0.149688482, 0.00629410101, -0.0288102441, 0.908953488, -0.00262140064, -0.416884065, -7.05317973E-08, 0.99998033, -0.00628811028, 0.41689238, 0.00571563188, 0.908935547), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.404874682, -0.991180301, -0.0352490693, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(0.71690762, -0.991053104, 0.00471016858, 0.902334571, -7.05317973E-08, 0.4310323, -0.00271031447, 0.99998033, 0.00567401201, -0.431023717, -0.00628811028, 0.902316749), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.26718163, 0.394917995, 0.30748421, 0.758522511, -0.65150404, 0.013650775, 0.563350797, 0.666130126, 0.488780826, -0.327535838, -0.363061011, 0.87229985), 0.15)
          vk.C0 = clerp(vk.C0, CFrame.new(1.46891451, 0.639140844, 0.117049158, 0.947687626, 0.107383646, 0.300595015, 0.195006967, -0.940317333, -0.278883517, 0.252707064, 0.322912514, -0.912067294), 0.15)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110755987, -0.74960357, -0.415038228, -5.42402267E-06, -2.98023224E-07, 1.00000024, -0.500007331, 0.866021454, -2.48476863E-06, -0.866021395, -0.500007272, -4.7981739E-06), 0.15)
        end
        for fd, fe in next, vn.Players:players() do
          if fe.Character and fe.Character:FindFirstChild("Head") and not fe.Character.Parent then
            pcall(function()
              va.Character.Parent = workspace
              Effect({
                Effect = "Fade",
                Frames = 15,
                Size = vb.N(0.15, 2048, 0.15),
                CFrame = vc.N(va.Character:FindFirstChild("Head").CFrame.p) * vc.N(0, 1024, 0),
                Color = BrickColor.new("Really red")
              })
              Effect({
                Effect = "ResizeAndFade",
                Frames = 45,
                Size = vb.N(0.5, 0.5, 0.5),
                CFrame = vc.N(va.Character:FindFirstChild("Head").CFrame.p),
                Mesh = {
                  MeshType = Enum.MeshType.Sphere
                },
                Color = BrickColor.new("Really red"),
                FXSettings = {
                  EndSize = vb.N(0.05, 0.05, 0.05),
                  EndIsIncrement = true
                }
              })
              for fe = 1, 5 do
                Effect({
                  Effect = "ResizeAndFade",
                  Frames = 65,
                  Size = vb.N(0.2, 0.2, 1),
                  CFrame = vc.N(vc.N(va.Character:FindFirstChild("Head").CFrame.p) * vc.A(vd.RRNG(-180, 180), vd.RRNG(-180, 180), vd.RRNG(-180, 180)) * vc.N(0, 0, -2).p, va.Character:FindFirstChild("Head").CFrame.p),
                  Mesh = {
                    MeshType = Enum.MeshType.Sphere
                  },
                  Material = Enum.Material.Neon,
                  Color = BrickColor.new("Really red"),
                  FXSettings = {
                    EndSize = vb.N(0.005, 0.005, 0.05),
                    EndIsIncrement = true
                  }
                })
              end
              OnceWas(va.Character)
              ve[va] = va.CharacterAdded:connect(function(a)
                a = a
              end)
            end)
          end
        end
        vc.AutoRotate = true
        va = false
        vb = true
      end
      function Teleport()
        va = true
        vb = false
        vc.AutoRotate = false
        repeat
          Turn(vd.Hit.p)
          swait()
          ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.1)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
          vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.1)
          vk.C0 = clerp(vk.C0, CFrame.new(1.56039762, 0.53398639, -0.0236691795, 0.0156120034, -0.99157083, 0.128623411, 0.00628500059, -0.128539219, -0.991684735, 0.999858379, 0.0162905809, 0.00422526803), 0.1)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749616861, -0.415070713, 0, 0, 1, -0.500001788, 0.866024435, 0, -0.866024435, -0.500001788, 0), 0.1)
        until not vm.UserInputService:IsKeyDown(Enum.KeyCode.C)
        Sound(Barrel, 238353911, vo.RNG(7, 13) / 10, 10, false, true, true)
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vp.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vp.N(0.05, 0.05, 0.05),
            EndIsIncrement = true
          }
        })
        Effect({
          Effect = "ResizeAndFade",
          Frames = 45,
          Size = vp.N(0.1, 0.1, 0.1),
          CFrame = Barrel.CFrame,
          Mesh = {
            MeshType = Enum.MeshType.Sphere
          },
          Color = BrickColor.new("Really red"),
          FXSettings = {
            EndSize = vp.N(0.1, 0.1, 0.1),
            EndIsIncrement = true
          }
        })
        Effect({
          Effect = "Fade",
          Frames = 15,
          Size = vp.N(0.15, 0.15, Barrel.CFrame.p - vd.Hit.p.magnitude),
          CFrame = vn.N(Barrel.CFrame.p, vd.Hit.p) * vn.N(0, 0, -Barrel.CFrame.p - vd.Hit.p.magnitude / 2),
          Color = BrickColor.new("Really red")
        })
        for fg = 0, 0.3, 0.05 do
          swait()
          ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(1.43598688, 0.64456445, -0.0224216785, 0.0156120034, -0.933606386, 0.357960403, 0.00628500059, -0.357905358, -0.933736861, 0.999858379, 0.0168272816, 0.000280098058), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749611259, -0.415075362, 0, 0, 1, -0.500002265, 0.866024256, 0, -0.866024256, -0.500002265, 0), 0.3)
        end
        OnceWas(vr, true)
        vs.CFrame = vn.N(vd.Hit.p) * vn.N(0, 3, 0)
        for fg = 1, 15 do
          Effect({
            Effect = "ResizeAndFade",
            Frames = 65,
            Size = vp.N(2, 2, 10),
            CFrame = vn.N(vn.N(vs.CFrame.p) * vn.A(vo.RRNG(-180, 180), vo.RRNG(-180, 180), vo.RRNG(-180, 180)) * vn.N(0, 0, -2).p, vs.CFrame.p),
            Mesh = {
              MeshType = Enum.MeshType.Sphere
            },
            Material = Enum.Material.Neon,
            Color = BrickColor.new("Really red"),
            MoveDirection = vn.N(vn.N(vs.CFrame.p) * vn.A(vo.RRNG(-180, 180), vo.RRNG(-180, 180), vo.RRNG(-180, 180)) * vn.N(0, 0, -25).p, vs.CFrame.p).p,
            FXSettings = {
              EndSize = vp.N(0.005, 0.005, 0.05),
              EndIsIncrement = true
            }
          })
        end
        OnceWas(vr, true)
        for fg = 0, 0.4, 0.05 do
          swait()
          ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(1.56039762, 0.53398639, -0.0236691795, 0.0156120034, -0.99157083, 0.128623411, 0.00628500059, -0.128539219, -0.991684735, 0.999858379, 0.0162905809, 0.00422526803), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749616861, -0.415070713, 0, 0, 1, -0.500001788, 0.866024435, 0, -0.866024435, -0.500001788, 0), 0.3)
        end
        va = false
        vb = true
        vc.AutoRotate = true
      end
      function BGone()
        va = true
        vb = false
        vc.AutoRotate = false
        for fd = 0, 9, 0.1 do
          Turn(vd.Hit.p)
          swait()
          vc.WalkSpeed = 0
          ve.C0 = clerp(ve.C0, CFrame.new(-0.0296121463, -0.249109969, -0.153551444, -0.000328990631, -0.0094739655, -0.999952853, 0.204196915, 0.978885293, -0.0093415454, 0.978927732, -0.204190359, 0.0016125096), 0.1)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.475788742, -0.651965797, 0.0191618577, 0.978805363, 0.204197079, 0.0156120053, -0.204313993, 0.978885233, 0.00628500246, -0.0139989806, -0.0093415454, 0.999858379), 0.1)
          vh.C0 = clerp(vh.C0, CFrame.new(0.498535633, -0.912865818, 0.0149653442, 0.999878168, 5.14090061E-06, 0.0156120053, -0.000103279948, 0.999980271, 0.00628500246, -0.0156116625, -0.00628584996, 0.999858379), 0.1)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.29815638, 0.566930115, -0.00661327224, -0.237626657, 0.971231222, 0.0156120053, -0.971307039, -0.237746239, 0.00628500246, 0.00981588662, -0.0136705656, 0.999858379), 0.1)
          vk.C0 = clerp(vk.C0, CFrame.new(1.24513125, 0.449408412, -0.155189604, 0.502771139, -0.519900203, -0.690597773, 0.303394169, 0.854222655, -0.422203362, 0.809427798, 0.00274830475, 0.587213099), 0.1)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110760681, -0.749610901, -0.415069938, -1.63912773E-06, 9.19401646E-06, 1.00000024, -0.500005245, 0.866022348, -8.86109865E-06, -0.866022408, -0.500005245, 3.1888485E-06), 0.1)
        end
        for fd = 0, 0.7, 0.1 do
          swait()
          vc.WalkSpeed = 0
          ve.C0 = clerp(ve.C0, CFrame.new(-0.00766070001, -0.269241363, -0.0518192649, 0.00021806825, 0.00368537591, 0.99999094, -0.166544884, 0.9860273, -0.00359759619, -0.986031651, -0.166542619, 0.000828802586), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.497863114, -0.984335184, 0.0215952508, 0.987798393, 0.154953942, 0.0156120034, -0.155066714, 0.987884164, 0.00628500665, -0.0144489631, -0.00862922147, 0.999858379), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(0.462316692, -0.882526457, 0.015341443, 0.985910237, -0.166545048, 0.0156120034, 0.166465312, 0.9860273, 0.00628500665, -0.0164405983, -0.00359759573, 0.999858379), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.34305215, 0.64557004, 0.206238627, 0.819938838, 0.417069167, 0.392114401, -0.412350535, 0.905431569, -0.100800663, -0.397073597, -0.0790382028, 0.914377153), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(1.3656987, 0.557721138, -0.0314715505, 0.0156120034, -0.985910237, 0.166545048, 0.00628500665, -0.166465312, -0.9860273, 0.999858379, 0.0164405983, 0.00359759573), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.11075601, -0.749610424, -0.415073156, 0, 0, 1, -0.500000238, 0.866025388, 0, -0.866025388, -0.500000238, 0), 0.3)
        end
        Sound(Barrel, 238353911, vm.RNG(7, 13) / 10, 10, false, true, true)
        Sound(Barrel, 415700134, 1.6, 10, false, true, true)
        Sound(Barrel, 138677306, 1.2, 7, false, true, true)
        coroutine.wrap(function()
          for fe = 1, 100 do
            Effect({
              Effect = "ResizeAndFade",
              CFrame = va.CFrame * vb.N(0, 0, -2) * vb.A(vc.R(90), 0, vc.R(90)),
              Size = vd.N(2, 5, 5),
              Material = Enum.Material.Neon,
              Color = BrickColor.new("Crimson"),
              Shape = "Cylinder",
              FXSettings = {
                EndSize = vd.N(0, 0.3, 0.3),
                EndIsIncrement = true
              }
            })
            for fk = 1, 3 do
              Effect({
                Effect = "ResizeAndFade",
                Frames = 65,
                Size = vd.N(1, 1, 1),
                CFrame = vb.N(vb.N(va.CFrame * vb.N(0, 0, -2).p) * vb.A(vc.RRNG(-180, 180), vc.RRNG(-180, 180), vc.RRNG(-180, 180)) * vb.N(0, 0, -10).p, va.CFrame * vb.N(0, 0, -2).p),
                Mesh = {
                  MeshType = Enum.MeshType.Sphere
                },
                Material = Enum.Material.Neon,
                Color = BrickColor.new("Really red"),
                MoveDirection = vb.N(vb.N(va.CFrame * vb.N(0, 0, -2).p) * vb.A(vc.RRNG(-180, 180), vc.RRNG(-180, 180), vc.RRNG(-180, 180)) * vb.N(0, 0, -50).p, va.CFrame * vb.N(0, 0, -2).p).p,
                FXSettings = {
                  EndSize = vd.N(0, 0, 0.3),
                  EndIsIncrement = true
                }
              })
            end
            AOEBanish(va.CFrame * vb.N(0, 0, -2).p, 8)
            swait()
          end
        end)()
        swait(30)
        vc.WalkSpeed = 16
        va = false
        vb = true
        vc.AutoRotate = true
      end
      function Banisher_Bullet()
        va = true
        vb = false
        vc.AutoRotate = false
        for fd = 0, 0.4, 0.0333333333333333 do
          Turn(vd.Hit.p)
          swait()
          ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.1)
          vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
          vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
          vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.1)
          vk.C0 = clerp(vk.C0, CFrame.new(1.56039762, 0.53398639, -0.0236691795, 0.0156120034, -0.99157083, 0.128623411, 0.00628500059, -0.128539219, -0.991684735, 0.999858379, 0.0162905809, 0.00422526803), 0.1)
          vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749616861, -0.415070713, 0, 0, 1, -0.500001788, 0.866024435, 0, -0.866024435, -0.500001788, 0), 0.1)
        end
        repeat
          for fd = 0, 0.2, 0.0333333333333333 do
            Turn(vd.Hit.p)
            swait()
            ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.1)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
            vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
            vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.1)
            vk.C0 = clerp(vk.C0, CFrame.new(1.43598688, 0.64456445, -0.0224216785, 0.0156120034, -0.933606386, 0.357960403, 0.00628500059, -0.357905358, -0.933736861, 0.999858379, 0.0168272816, 0.000280098058), 0.1)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749611259, -0.415075362, 0, 0, 1, -0.500002265, 0.866024256, 0, -0.866024256, -0.500002265, 0), 0.1)
          end
          Sound(Barrel, 238353911, vm.RNG(7, 13) / 10, 10, false, true, true)
          Shoot(Barrel.CFrame.p, vd.Hit.p)
          for fd = 0, 0.3, 0.0333333333333333 do
            swait()
            ve.C0 = clerp(ve.C0, CFrame.new(-0.027945349, 0.0062955129, 0.00791542884, -4.65661287E-09, 0.00628571073, 0.99997133, -1.62185909E-08, 0.99998033, -0.00628576661, -0.999991417, -3.25962901E-09, -9.31322575E-10), 0.1)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.513343155, -0.990872025, 0.0134561155, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
            vh.C0 = clerp(vh.C0, CFrame.new(0.504049361, -0.991316199, -0.037166521, 0.999878228, 0, 0.0156120034, -9.81333942E-05, 0.99998033, 0.00628500059, -0.0156116933, -0.00628576661, 0.999858379), 0.1)
            vj.C0 = clerp(vj.C0, CFrame.new(-1.48807681, 0.583711386, -0.00375273079, 0.980986238, 0.193449557, 0.0156120034, -0.193565607, 0.981067359, 0.00628500059, -0.0141005944, -0.00918744504, 0.999858379), 0.1)
            vk.C0 = clerp(vk.C0, CFrame.new(1.46904922, 0.532365739, -0.0222326554, 0.0156120034, -0.987360775, 0.157718793, 0.00628500059, -0.157637998, -0.987477064, 0.999858379, 0.0164077543, 0.00374451769), 0.1)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.110757828, -0.749605894, -0.415075004, 0, 0, 1, -0.50000155, 0.866024613, 0, -0.866024613, -0.50000149, 0), 0.1)
          end
        until not vo.UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1)
        vc.AutoRotate = true
        va = false
        vb = true
      end
      function Taunt()
        va = true
        vb = false
        if 1 == 1 then
          for fg = 0, 6, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, CFrame.new(5.9524434E-13, 0.00629317388, 1.41309647E-06, 0.99999553, 9.4587449E-11, 0, -5.58664226E-12, 0.999980271, -0.00628617778, 9.31322575E-10, 0.00628615683, 0.99997592), 0.3)
            vd.C0 = clerp(vd.C0, CFrame.new(-0.500225782, -0.996483386, 0.0217089336, 0.994214952, 0.10624785, 0.0156119671, -0.106356524, 0.994308293, 0.00628523249, -0.014855314, -0.00790933147, 0.999856234), 0.3)
            ve.C0 = clerp(ve.C0, CFrame.new(0.512264967, -0.996646643, 0.0152785685, 0.994214535, -0.106250875, 0.0156119233, 0.106164388, 0.994328737, 0.00628523249, -0.0161911994, -0.0045914636, 0.999856234), 0.3)
            vg.C0 = clerp(vg.C0, CFrame.new(-1.44726694, 0.503729105, -0.00388534926, 0.993391156, 0.113691822, 0.0156119671, -0.113801189, 0.993483663, 0.00628523249, -0.0147956526, -0.00802037865, 0.999856234), 0.3)
            vh.C0 = clerp(vh.C0, CFrame.new(1.41887283, 0.461011291, -0.0306870341, 0.0158389043, -0.994383454, -0.104623824, 0.00844715256, 0.104766518, -0.994461119, 0.999836862, 0.0148673952, 0.0100591201), 0.3)
            vj.C0 = clerp(vj.C0, CFrame.new(-0.11075747, -0.749606431, -0.415068656, -5.63569483E-06, -1.58343755E-06, 1.00000012, -0.500001132, 0.866024792, -1.44650403E-06, -0.866024852, -0.500001192, -5.67225288E-06) * vk.A(0, 0, vl.R(0 + 35)), 0.3)
          end
          for fg = 0, 6, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, CFrame.new(5.9524434E-13, 0.00629317388, 1.41309647E-06, 0.99999553, 9.4587449E-11, 0, -5.58664226E-12, 0.999980271, -0.00628617778, 9.31322575E-10, 0.00628615683, 0.99997592), 0.3)
            vd.C0 = clerp(vd.C0, CFrame.new(-0.500225782, -0.996483386, 0.0217089336, 0.994214952, 0.10624785, 0.0156119671, -0.106356524, 0.994308293, 0.00628523249, -0.014855314, -0.00790933147, 0.999856234), 0.3)
            ve.C0 = clerp(ve.C0, CFrame.new(0.512264967, -0.996646643, 0.0152785685, 0.994214535, -0.106250875, 0.0156119233, 0.106164388, 0.994328737, 0.00628523249, -0.0161911994, -0.0045914636, 0.999856234), 0.3)
            vg.C0 = clerp(vg.C0, CFrame.new(-1.44726694, 0.503729105, -0.00388534926, 0.993391156, 0.113691822, 0.0156119671, -0.113801189, 0.993483663, 0.00628523249, -0.0147956526, -0.00802037865, 0.999856234), 0.3)
            vh.C0 = clerp(vh.C0, CFrame.new(1.30098641, 0.458334863, -0.45630464, 0.97372508, 0.226236522, 0.0259280894, 0.00073058781, 0.110756524, -0.99384743, -0.227716282, 0.967752993, 0.10768114), 0.3)
            vj.C0 = clerp(vj.C0, CFrame.new(-0.110763341, -0.749599576, -0.415068239, -6.5267086E-06, -2.71201134E-06, 1.00000012, -0.500001013, 0.866024971, -9.23871994E-07, -0.866024971, -0.500001013, -7.01099634E-06), 0.3)
          end
        end
        va = false
        vb = true
      end
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer:GetMouse().KeyDown:connect(function(a)
        a = a
        if va then
          return
        end
        if a == "x" then
          Show_Mercy()
        end
        if a == "z" then
          Banishing_Storm()
        end
        if a == "b" then
          Spectral_Banish()
        end
        if a == "c" then
          Teleport()
        end
        if a == "v" then
          BGone()
        end
        if a == "t" then
          Taunt()
        end
      end)
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer:GetMouse().Button1Down:connect(function()
        if va then
          return
        end
        Banisher_Bullet()
      end)
      while true do
        while true do
          while true do
            while true do
              while true do
                while true do
                  swait()
                  if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character) or "Idle") == "Walk" then
                    NewInstance("Motor", setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character, {
                      Part0 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character.Torso,
                      Part1 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character["Right Leg"],
                      C0 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0.5 * 1, -1 * 1, 0),
                      C1 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 1 * 1, 0)
                    }).C1 = NewInstance("Motor", setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character, {
                      Part0 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character.Torso,
                      Part1 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character["Right Leg"],
                      C0 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0.5 * 1, -1 * 1, 0),
                      C1 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 1 * 1, 0)
                    }).C1:lerp({
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1, 0) * {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 0 - 0.2 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14))), 0 + 0.4 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))) * {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.A({
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.R(25 + 45 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))) + -{
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.S((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14))), 0, 0), (math.min(0.1 * (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                    NewInstance("Motor", setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character, {
                      Part0 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character.Torso,
                      Part1 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character["Left Leg"],
                      C0 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(-0.5 * 1, -1 * 1, 0),
                      C1 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 1 * 1, 0)
                    }).C1 = NewInstance("Motor", setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character, {
                      Part0 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character.Torso,
                      Part1 = setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character["Left Leg"],
                      C0 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(-0.5 * 1, -1 * 1, 0),
                      C1 = {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 1 * 1, 0)
                    }).C1:lerp({
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1, 0) * {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 0 + 0.2 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14))), 0 - 0.4 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))) * {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.A({
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.R(25 - 45 * {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))) + {
                      C = math.cos,
                      R = math.rad,
                      S = math.sin,
                      P = math.pi,
                      RNG = math.random,
                      MRS = math.randomseed,
                      H = math.huge,
                      RRNG = function(a, b, c)
                        a = a
                        return math.rad(math.random(a, b) / (c or 1))
                      end
                    }.S((0 + 1 + 1) / (32 / (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14))), 0, 0), (math.min(0.1 * (setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                    break
                  end
                  NewInstance("Motor", setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character, {
                    Part0 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character.Torso,
                    Part1 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character["Right Leg"],
                    C0 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0.5 * 1, -1 * 1, 0),
                    C1 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1 * 1, 0)
                  }).C1 = NewInstance("Motor", setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character, {
                    Part0 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character.Torso,
                    Part1 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character["Right Leg"],
                    C0 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0.5 * 1, -1 * 1, 0),
                    C1 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1 * 1, 0)
                  }).C1:lerp({
                    N = CFrame.new,
                    A = CFrame.Angles,
                    fEA = CFrame.fromEulerAnglesXYZ
                  }.N(0, 1, 0), 0.1)
                  NewInstance("Motor", setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character, {
                    Part0 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character.Torso,
                    Part1 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character["Left Leg"],
                    C0 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(-0.5 * 1, -1 * 1, 0),
                    C1 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1 * 1, 0)
                  }).C1 = NewInstance("Motor", setmetatable({}, {
                    __index = function(a, b)
                      a = a
                      return game:service(b)
                    end
                  }).Players.LocalPlayer.Character, {
                    Part0 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character.Torso,
                    Part1 = setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character["Left Leg"],
                    C0 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(-0.5 * 1, -1 * 1, 0),
                    C1 = {
                      N = CFrame.new,
                      A = CFrame.Angles,
                      fEA = CFrame.fromEulerAnglesXYZ
                    }.N(0, 1 * 1, 0)
                  }).C1:lerp({
                    N = CFrame.new,
                    A = CFrame.Angles,
                    fEA = CFrame.fromEulerAnglesXYZ
                  }.N(0, 1, 0), 0.1)
                  if true then
                    if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character) or "Idle") == "Idle" then
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0, CFrame.new(5.95311994E-13, 0.00629388914 + 0.2 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / 20), 1.41759301E-06, 0.99999553, 9.4587449E-11, 0, -5.58664226E-12, 0.999980271, -0.00628617778, 9.31322575E-10, 0.00628615683, 0.99997592), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, CFrame.new(-0.560905516, -0.984790266 - 0.2 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / 20), 0.0225828942, 0.997905374, 0.0627432317, 0.0156119671, -0.062847726, 0.998003423, 0.00628523249, -0.0151864393, -0.00725326827, 0.999856234), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, CFrame.new(0.507978499, -0.98526901 - 0.2 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / 20), 0.0152739538, 0.995106399, -0.0975458771, 0.0156119671, 0.0974583924, 0.995219886, 0.00628523249, -0.016150441, -0.00473298226, 0.999856234), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0, CFrame.new(-0.997352481, 0.328557909 + 0.1 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / 20), 0.373372614, 0.726782799, -0.595508456, 0.342274755, 0.369578063, 0.759076476, 0.535924494, -0.578960299, -0.263003558, 0.771770597), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0, CFrame.new(1.35597444, 0.402479589 + 0.1 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / 20), 0.0100756176, 0.788939416, -0.614269078, 0.0156119671, 0.614255786, 0.78908211, 0.00628523249, -0.0161799639, 0.00463105366, 0.999856234), 0.1)
                      NewInstance("Weld", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        Part1 = Handle,
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, -0.5, -0.4) * {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.A({
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(0), {
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(90), {
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(-30))
                      }).C0 = clerp(NewInstance("Weld", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        Part1 = Handle,
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, -0.5, -0.4) * {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.A({
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(0), {
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(90), {
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(-30))
                      }).C0, CFrame.new(-0.110785089, -0.749598742, -0.415072441, 2.87592411E-06, 1.69873238E-06, 1.00000012, -0.500000358, 0.866025329, 0, -0.866025269, -0.500000358, 3.33799494E-06), 0.1)
                    end
                    if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character) or "Idle") == "Walk" then
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0 = NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0:lerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0 * {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 0 - 0.15 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.C((0 + 1 + 1) / (32 / (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14) / 2)), 0) * {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.A(0, {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.R(0 - 15 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.S((0 + 1 + 1) / (32 / (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14))) / 2), 0), (math.min(0.1 * (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0:lerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, (math.min(0.1 * (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0:lerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, (math.min(0.1 * (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0:lerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 * {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.N(0, 0, 0 - 0.3 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.S((0 + 1 + 1) / (32 / (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))) * {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.A({
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.R(0 + 45 * {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.S((0 + 1 + 1) / (32 / (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 14)))), 0, {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.R(-5)), (math.min(0.1 * (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0, CFrame.new(1.35597444, 0.402479589, 0.0100756176, 0.788939416, -0.614269078, 0.0156119671, 0.614255786, 0.78908211, 0.00628523249, -0.0161799639, 0.00463105366, 0.999856234), (math.min(0.1 * (setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
                    end
                    if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character) or "Idle") == "Fall" then
                      if math.abs(setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.x) >= 1 or math.abs(setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.z) >= 1 then
                        NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso
                        }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso
                        }).C0, NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso
                        }).C0 * {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.A(math.min(math.max(setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(65)), {
                          C = math.cos,
                          R = math.rad,
                          S = math.sin,
                          P = math.pi,
                          RNG = math.random,
                          MRS = math.randomseed,
                          H = math.huge,
                          RRNG = function(a, b, c)
                            a = a
                            return math.rad(math.random(a, b) / (c or 1))
                          end
                        }.R(65)), 0, 0), 0.1)
                        NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Left Leg"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(-0.5 * 1, -1 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 1 * 1, 0)
                        }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Left Leg"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(-0.5 * 1, -1 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 1 * 1, 0)
                        }).C0, CFrame.new(-0.497912645, -1.0987643, -0.0683324337, 0.999878228, 0.00860835519, 0.0130246133, -0.00010142161, 0.837816596, -0.545952022, -0.015611981, 0.545884132, 0.837715328), 0.1)
                        NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Right Leg"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0.5 * 1, -1 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 1 * 1, 0)
                        }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Right Leg"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0.5 * 1, -1 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 1 * 1, 0)
                        }).C0, CFrame.new(0.499978393, -1.16382337, 0.109293163, 0.999878228, -0.0120433727, 0.00993486121, -0.00010142161, 0.631323814, 0.775519371, -0.015611981, -0.775425911, 0.631245613), 0.1)
                        NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Left Arm"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(-1.5 * 1, 0.5 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 0.5 * 1, 0)
                        }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Left Arm"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(-1.5 * 1, 0.5 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 0.5 * 1, 0)
                        }).C0, CFrame.new(-1.55211556, 0.576563478, -0.00269976072, 0.976067662, 0.216906726, 0.0156116467, -0.217024669, 0.976145923, 0.00628317893, -0.0138763804, -0.00952091813, 0.999858499), 0.1)
                        NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Right Arm"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(1.5 * 1, 0.5 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 0.5 * 1, 0)
                        }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character, {
                          Part0 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character.Torso,
                          Part1 = setmetatable({}, {
                            __index = function(a, b)
                              a = a
                              return game:service(b)
                            end
                          }).Players.LocalPlayer.Character["Right Arm"],
                          C0 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(1.5 * 1, 0.5 * 1, 0),
                          C1 = {
                            N = CFrame.new,
                            A = CFrame.Angles,
                            fEA = CFrame.fromEulerAnglesXYZ
                          }.N(0, 0.5 * 1, 0)
                        }).C0, CFrame.new(1.50182188, 0.636661649, 0.00632623257, 0.977592707, -0.209926367, 0.0156121543, 0.209851891, 0.977713108, 0.00628198683, -0.016582964, -0.00286500831, 0.999858439), 0.1)
                      end
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0, NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso
                      }).C0 * {
                        N = CFrame.new,
                        A = CFrame.Angles,
                        fEA = CFrame.fromEulerAnglesXYZ
                      }.A(math.min(math.max(setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.R(65)), {
                        C = math.cos,
                        R = math.rad,
                        S = math.sin,
                        P = math.pi,
                        RNG = math.random,
                        MRS = math.randomseed,
                        H = math.huge,
                        RRNG = function(a, b, c)
                          a = a
                          return math.rad(math.random(a, b) / (c or 1))
                        end
                      }.R(65)), 0, 0), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, CFrame.new(-0.504374504, -0.291219354, -0.487436086, 0.999878228, -0.00438931212, 0.0149825988, -0.00010142161, 0.957819223, 0.287371844, -0.015611981, -0.287338346, 0.957701981), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Leg"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0.5 * 1, -1 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 1 * 1, 0)
                      }).C0, CFrame.new(0.453094482, -0.871358454, 0.0898642987, 0.985589385, -0.168456957, 0.0153662469, 0.162863791, 0.969548643, 0.182895929, -0.0457084104, -0.177757636, 0.983012319), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Left Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(-1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0, CFrame.new(-1.55211556, 0.576563478, -0.00269976072, 0.976067662, 0.216906726, 0.0156116467, -0.217024669, 0.976145923, 0.00628317893, -0.0138763804, -0.00952091813, 0.999858499), 0.1)
                      NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                        __index = function(a, b)
                          a = a
                          return game:service(b)
                        end
                      }).Players.LocalPlayer.Character, {
                        Part0 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character.Torso,
                        Part1 = setmetatable({}, {
                          __index = function(a, b)
                            a = a
                            return game:service(b)
                          end
                        }).Players.LocalPlayer.Character["Right Arm"],
                        C0 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(1.5 * 1, 0.5 * 1, 0),
                        C1 = {
                          N = CFrame.new,
                          A = CFrame.Angles,
                          fEA = CFrame.fromEulerAnglesXYZ
                        }.N(0, 0.5 * 1, 0)
                      }).C0, CFrame.new(1.50182188, 0.636661649, 0.00632623257, 0.977592707, -0.209926367, 0.0156121543, 0.209851891, 0.977713108, 0.00628198683, -0.016582964, -0.00286500831, 0.999858439), 0.1)
                    end
                    if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character) or "Idle") == "Paralyzed" then
                    end
                    if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
                      __index = function(a, b)
                        a = a
                        return game:service(b)
                      end
                    }).Players.LocalPlayer.Character) or "Idle") == "Sit" then
                    end
                  end
                end
              end
            end
          end
        end
      end
    end)
    wait(0.5)
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["AR-L 10 [Back]"], game:GetService("Players").LocalPlayer.Character.Ulta_Caliber.Handle, false).Orientation = Vector3.new(-180, 0, -115)
      for fk, fl in pairs(game:GetService("Players").LocalPlayer.Character.Ulta_Caliber:GetChildren()) do
        if not fl:IsA("Part") or fl.Name == "AR-L 10 [Back]" then
        else
          fl.Transparency = 10
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Pixel FBI", "Pixel FBI", function()
    spawn(function()
      pcall(function()
        va.Animate:Destroy()
      end)
      for fq, fw in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fw:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      game.Players.LocalPlayer:GetMouse().Button1Down:connect(function()
        va = true
        vb = true
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 3
      end)
      game.Players.LocalPlayer:GetMouse().Button1Up:connect(function()
        va = false
        vb = false
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
      end)
      game:GetService("RunService").RenderStepped:connect(function()
        if va and vb == true then
          swait()
          vc.C0 = vc.C0:Lerp(vd * CFrame.new(0, -0.2, -0.45) * CFrame.Angles(0, 0, math.rad(90) - math.cos(tick() * 50) / 1.5), 0.1)
          ve.C0 = ve.C0:Lerp(vg * CFrame.new(-1, -0.2, -1) * CFrame.Angles(0, math.rad(-50), math.rad(-90) - math.cos(tick() * 50) / 1.5), 0.1)
          vh.C0 = vh.C0:Lerp(vj * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(-20), 0), 0.1)
          vk.C0 = vk.C0:Lerp(vl * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(20), 0), 0.1)
          vm.C0 = vm.C0:Lerp(vo * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end)
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, -0.2, 0) * CFrame.Angles(0, math.rad(60), math.rad(50)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, -0.2, 0) * CFrame.Angles(0, math.rad(-50), math.rad(-40)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0 + math.cos(tick() * 1) / 7, 0) * CFrame.Angles(math.rad(-2), 0, math.cos(tick() * 6) / 2), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0 + math.cos(tick() * 1) / 7, 0) * CFrame.Angles(math.rad(-2), 0, math.cos(tick() * 6) / 2), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0.1 - math.cos(tick() * 1) / 7) * CFrame.Angles(math.rad(10), 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, -0.2, 0) * CFrame.Angles(0, math.rad(60), math.rad(50)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, -0.2, 0) * CFrame.Angles(0, math.rad(-50), math.rad(-40)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0 + math.cos(tick() * 1) / 7, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0 + math.cos(tick() * 1) / 7, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0.1 - math.cos(tick() * 1) / 7) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
    wait(0.5)
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Meshes/M4A1Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"], false).Position = Vector3.new(1.6, -1, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Meshes/M4A1Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"], false).Orientation = Vector3.new(110, 90, 0)
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("SelexNitsu", "SelexNitsu", function()
    Instance.new("Animation").AnimationId = "rbxassetid://33169596"
    plr = game.Players.LocalPlayer
    char = plr.Character
    mouse = plr:GetMouse()
    Instance.new("Sound", char.Nagamaki.Handle).SoundId = "rbxassetid://5985793946"
    Instance.new("Sound", char.Nagamaki.Handle).Volume = 10
    deb = false
    mouse.Button1Down:connect(function()
      if not deb then
        deb = true
        game:GetService("TweenService"):create(char.HumanoidRootPart, TweenInfo.new(0.3), {
          CFrame = char.HumanoidRootPart.CFrame * CFrame.new(0, 0, -7)
        }):play()
        game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(va):Play()
        vb:Play()
        deb = false
      end
    end)
    (function(a, b, c)
      a = a
      if c == true then
        for fh, fj in next, a:GetDescendants() do
          if fj:IsA("SpecialMesh") then
            fj:Remove()
          end
        end
      end
      a.Parent = va
      a0 = Instance.new("Attachment", a.Handle)
      a1 = Instance.new("Attachment", b)
      Instance.new("AlignPosition", a.Handle).Attachment0 = a0
      Instance.new("AlignPosition", a.Handle).Attachment1 = a1
      Instance.new("AlignPosition", a.Handle).Responsiveness = 200
      Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
      Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
      Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
      Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
      Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
      Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
      Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
      Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
      Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
      Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
      a.Handle:BreakJoints()
      game:GetService("RunService").Stepped:Connect(function()
        va.Handle.CanCollide = false
        va.Handle.RotVelocity = Vector3.new(0, 1, 0)
        va.Handle.Velocity = Vector3.new(0, -25, 0)
      end)
      return a0
    end)(game:GetService("Players").LocalPlayer.Character.Nagamaki, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(-0.1, 1.5, 0.2)
    (function(a, b, c)
      a = a
      if c == true then
        for fh, fj in next, a:GetDescendants() do
          if fj:IsA("SpecialMesh") then
            fj:Remove()
          end
        end
      end
      a.Parent = va
      a0 = Instance.new("Attachment", a.Handle)
      a1 = Instance.new("Attachment", b)
      Instance.new("AlignPosition", a.Handle).Attachment0 = a0
      Instance.new("AlignPosition", a.Handle).Attachment1 = a1
      Instance.new("AlignPosition", a.Handle).Responsiveness = 200
      Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
      Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
      Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
      Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
      Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
      Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
      Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
      Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
      Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
      Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
      a.Handle:BreakJoints()
      game:GetService("RunService").Stepped:Connect(function()
        va.Handle.CanCollide = false
        va.Handle.RotVelocity = Vector3.new(0, 1, 0)
        va.Handle.Velocity = Vector3.new(0, -25, 0)
      end)
      return a0
    end)(game:GetService("Players").LocalPlayer.Character.Nagamaki, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(-50, -90, 0)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("AirPod Shotty", "AirPod Shotty", function()
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.PlasmaRifle, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(1.5, 1, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.PlasmaRifle, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(40, 90, 0)
      game:GetService("Players").LocalPlayer.Character.PlasmaRifle.Name = "abc"
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle).SoundId = "rbxassetid://6129533897"
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle).Looped = true
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle).Volume = 5
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle).SoundId = "rbxassetid://2292978536"
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle).Volume = 10
      pcall(function()
        va.Animate:Destroy()
      end)
      for fY, fU in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fU:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      function shoot()
        va = true
        for fd = 0, 5, 0.2 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, -0.05 - math.sin(tick() * 1.5) / 7, 0) * CFrame.Angles(0, 0, math.rad(90)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(-1, -0.05 - math.sin(tick() * 1.5) / 7, -1) * CFrame.Angles(0, math.rad(-50), math.rad(-90)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.rad(-25)), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(-0.2, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        for fd = 0, 8, 0.3 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, -0.05 - math.sin(tick() * 1.5) / 7, 0) * CFrame.Angles(0, 0, math.rad(160)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(-1, -0.05 - math.sin(tick() * 1.5) / 7, -1) * CFrame.Angles(0, math.rad(-50), math.rad(-160)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-15), 0, 0), 0.1)
        end
        va = false
      end
      game.Players.LocalPlayer:GetMouse().Button1Down:connect(function()
        if va == false then
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 10
          vb:play()
          shoot()
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
      end)
      Instance.new("Sound", game.Players.LocalPlayer.Character.abc.Handle):Play()
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, math.sin(tick() * 1) / 4, 0) * CFrame.Angles(0, math.rad(10), math.rad(180) - math.sin(tick() * 1) / 5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), 0, math.rad(40)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.sin(tick() * 5) / 2), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.sin(tick() * 5) / 2), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, -0.05 - math.sin(tick() * 1.5) / 7, 0) * CFrame.Angles(0, 0, math.rad(90)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(-1, -0.05 - math.sin(tick() * 1.5) / 7, -1) * CFrame.Angles(0, math.rad(-50), math.rad(-90)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.rad(-25)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(-0.2, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Scythe", "Scythe", function()
    spawn(function()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Volcanic Scythe"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(-2, -0.5, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Volcanic Scythe"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(45, -90, 0)
      game:GetService("Players").LocalPlayer.Character["Volcanic Scythe"].Name = "sa"
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      pcall(function()
        va.Animate:Destroy()
      end)
      for fW, fE in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fE:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      function Swing()
        va = true
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 9
        for fd = 0, 8, 0.4 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(70), math.rad(-20), math.rad(170)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, math.rad(-70)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(-0.3, 0.5, 0) * CFrame.Angles(math.rad(-3), 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        for fd = 0, 15, 0.4 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(-20), math.rad(40)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), 0, math.rad(50)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, math.rad(20)), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), 0, math.rad(45)), 0.1)
        end
        va = false
      end
      deb = false
      function Invis()
        for fd = 0, 50, 0.3 do
          swait()
          va.C0 = va.C0:Lerp(vb * CFrame.new(0, 0, -30) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
      mouse.KeyDown:connect(function(a)
        a = a
        if va == false and a == "r" then
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 40
          Invis()
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
      end)
      mouse.Button1Down:connect(function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 9
        Swing()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
      end)
      while game.Players.LocalPlayer.Character.Humanoid.Health > 0 do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, math.cos(tick() * 1) / 10, 0) * CFrame.Angles(math.rad(-5), math.rad(-45), math.sin(tick() * 2) / 4), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, math.rad(20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, math.cos(tick() * 5) / 2), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, math.cos(tick() * 5) / 2), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(5), 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, math.cos(tick() * 1) / 10, 0) * CFrame.Angles(math.rad(-5), math.rad(-45), math.sin(tick() * 2) / 4), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, math.sin(tick() * 3) / 7), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Axe", "Axe", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Battle Axe"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(1.5, 0.2, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Battle Axe"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(45, 90, 0)
      game:GetService("Players").LocalPlayer.Character["Battle Axe"].Name = "Fire"
      pcall(function()
        va.Animate:Destroy()
      end)
      for fQ, fW in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fW:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      Instance.new("Sound", char.Fire.Handle).SoundId = "rbxassetid://3923230963"
      Instance.new("Sound", char.Fire.Handle).Volume = 10
      function Swing()
        va = true
        vb:play()
        spawn(function()
          for fd = 1, 20 do
            game:service("RunService").RenderStepped:wait()
            va.CameraOffset = Vector3.new(math.rad(math.random(-50, 50)), math.rad(math.random(-50, 50)), math.rad(math.random(-50, 50))) / 2
          end
          va.CameraOffset = Vector3.new(0, 0, 0)
        end)
        for fd = 0, 10, 0.3 do
          swait()
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0.5, 0, 0) * CFrame.Angles(math.rad(20), math.rad(20), math.rad(5)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), 0, math.rad(40)), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(-10), math.rad(-50)), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(10), math.rad(-20)), 0.1)
          vo.C0 = vo.C0:Lerp(vp * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 5
        end
        va = false
      end
      mouse.Button1Down:connect(function()
        if va == false then
          Swing()
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 14
        end
      end)
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          swait()
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(-20), math.rad(170) - math.cos(tick() * 2) / 5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, math.sin(tick() * 2.5) / 2), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, math.cos(tick() * 6) / 1.5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-3), 0, math.cos(tick() * 6) / 1.5), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(15), 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          swait()
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(-20), math.rad(170) - math.cos(tick() * 1) / 5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.sin(tick() * 2) / 3, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(-10), 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), math.rad(10), 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Agent", "Agent", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.RightMk73LP, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(0, 0, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.RightMk73LP, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(0, 180, 0)
      game:GetService("Players").LocalPlayer.Character.RightMk73LP.Name = "gun"
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.YandereKnife, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(0, 0, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.YandereKnife, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(0, 0, 90)
      game:GetService("Players").LocalPlayer.Character.YandereKnife.Name = "aaa"
      pcall(function()
        va.Animate:Destroy()
      end)
      for fE, fR in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fR:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      function Shoot()
        va = true
        for fd = 0, 7, 0.3 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.rad(90)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        for fd = 0, 8, 0.3 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(-0.4, 0, 0) * CFrame.Angles(0, 0, math.rad(110)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        va = false
      end
      function Slash()
        va = true
        for fd = 0, 7, 0.3 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(20), math.rad(170)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        for fd = 0, 7, 0.3 do
          swait()
          vb.C0 = vb.C0:Lerp(vc * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20), math.rad(30), math.rad(50)), 0.1)
          vd.C0 = vd.C0:Lerp(ve * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          vg.C0 = vg.C0:Lerp(vh * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vj.C0 = vj.C0:Lerp(vk * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vl.C0 = vl.C0:Lerp(vm * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
        va = false
      end
      mouse.KeyDown:connect(function(a)
        a = a
        if va == false and a == "x" then
          vb.Orientation = Vector3.new(0, 90, 90)
          vb.Position = Vector3.new(-0.3, 0, 1.1)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 7
          Slash()
          vb.Orientation = Vector3.new(0, 0, 90)
          vb.Position = Vector3.new(0, 0, 0)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
      end)
      mouse.Button1Down:connect(function()
        if va == false then
          vb.Position = Vector3.new(0, 1.7, 0)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 7
          Shoot()
          wait(0.3)
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
          vb.Position = Vector3.new(0, 0, 0)
        end
      end)
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(-0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(-20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.cos(tick() * 5) / 3), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.cos(tick() * 5) / 3), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(-0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(-20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0.4, 0, -0.3) * CFrame.Angles(math.rad(30), 0, math.rad(20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("BloodWater", "BloodWater", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      char.Animate:Remove()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(1.5, 1, -0.3)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(37, 90, 0)
      game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"].Name = "Fire"
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.YandereKnife, game:GetService("Players").LocalPlayer.Character["Left Arm"]).Position = Vector3.new(-0.3, 0, 1.1)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.YandereKnife, game:GetService("Players").LocalPlayer.Character["Left Arm"]).Orientation = Vector3.new(0, 90, 90)
      game:GetService("Players").LocalPlayer.Character.YandereKnife.Name = "aaa"
      va = game.Players.LocalPlayer
      PlayerGui = va.PlayerGui
      Cam = workspace.CurrentCamera
      Backpack = va.Backpack
      Humanoid = va.Character.Humanoid
      Mouse = va:GetMouse()
      RootPart = va.Character.HumanoidRootPart
      Torso = va.Character.Torso
      Head = va.Character.Head
      RightArm = va.Character["Right Arm"]
      LeftArm = va.Character["Left Arm"]
      RightLeg = va.Character["Right Leg"]
      LeftLeg = va.Character["Left Leg"]
      RootJoint = RootPart.RootJoint
      RightShoulder = Torso["Right Shoulder"]
      LeftShoulder = Torso["Left Shoulder"]
      RightHip = Torso["Right Hip"]
      LeftHip = Torso["Left Hip"]
      IT = Instance.new
      VT = Vector3.new
      RAD = math.rad
      UD2 = UDim2.new
      BRICKC = BrickColor.new
      ANGLES = CFrame.Angles
      EULER = CFrame.fromEulerAnglesXYZ
      COS = math.cos
      ACOS = math.acos
      SIN = math.sin
      ASIN = math.asin
      ABS = math.abs
      MRANDOM = math.random
      FLOOR = math.floor
      Animation_Speed = 3
      Frame_Speed = 0.0166666666666667
      Player_Size = 1
      SIZE = 1
      IT("Animation").Name = "Roblox Idle Animation"
      IT("ScreenGui", PlayerGui).Name = "BanishV4Gui"
      IT("Model").Name = "Adds"
      IT("Folder", (IT("Model"))).Name = "Effects"
      Instance.new("Sound", va.Character).Volume = 5
      Instance.new("Sound", va.Character).TimePosition = 0
      Instance.new("Sound", va.Character).PlaybackSpeed = 0.75
      Instance.new("Sound", va.Character).Pitch = 0.95
      Instance.new("Sound", va.Character).SoundId = "rbxassetid://2256171111"
      Instance.new("Sound", va.Character).Name = "wrecked"
      Instance.new("Sound", va.Character).Looped = true
      Instance.new("Sound", va.Character):Play()
      shotsound = Instance.new("Sound", va.Character)
      shotsound.Volume = 10
      shotsound.SoundId = "rbxassetid://1905403158"
      Instance.new("BillboardGui", va.Character).AlwaysOnTop = true
      Instance.new("BillboardGui", va.Character).Size = UDim2.new(7, 35, 3, 15)
      Instance.new("BillboardGui", va.Character).StudsOffset = Vector3.new(0, 2, 0)
      Instance.new("BillboardGui", va.Character).MaxDistance = 10000
      Instance.new("BillboardGui", va.Character).Adornee = Head
      Instance.new("BillboardGui", va.Character).Name = "NameBillboard"
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).BackgroundTransparency = 1
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextScaled = false
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).BorderSizePixel = 0
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).Text = "B L O O D W A T E R"
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).Font = "Antique"
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextSize = 30
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextStrokeTransparency = 0
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).Parent, Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).Size = Instance.new("BillboardGui", va.Character), UDim2.new(1, 0, 0.5, 0)
      Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextColor3 = Color3.fromRGB(0, 0, 0)
      cf, Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextStrokeColor3 = CFrame.new, Color3.new(0, 0, 0)
      sine, angles = 5, ANGLES
      mouse = Mouse
      RH = RightHip
      LH = LeftHip
      RW = RightShoulder
      LW = LeftShoulder
      RootCF, clerp = CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)), Clerp
      ArtificialHB = Instance.new("BindableEvent", script)
      ArtificialHB.Name = "ArtificialHB"
      script:WaitForChild("ArtificialHB")
      frame = Frame_Speed
      tf = 0
      allowframeloss = false
      tossremainder = false
      lastframe = tick()
      script.ArtificialHB:Fire()
      game:GetService("RunService").Heartbeat:connect(function(a, b)
        a = a
        tf = tf + a
        if tf >= frame then
          if allowframeloss then
            script.ArtificialHB:Fire()
            lastframe = tick()
          else
            for fg = 1, math.floor(tf / frame) do
              script.ArtificialHB:Fire()
            end
            lastframe = tick()
          end
          if tossremainder then
            tf = 0
          else
            tf = tf - frame * math.floor(tf / frame)
          end
        end
      end)
      function Raycast(a, b, c, d)
        a = a
        return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
      end
      function PositiveAngle(a)
        a = a
        if a >= 0 then
          a = 0
        end
        return a
      end
      function NegativeAngle(a)
        a = a
        if a <= 0 then
          a = 0
        end
        return a
      end
      function Swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          ArtificialHB.Event:wait()
        else
          for fe = 1, a do
            ArtificialHB.Event:wait()
          end
        end
      end
      function NewInstance(a, b, c)
        a = a
        Instance.new(a).Parent = b
        if c then
          for fj, fk in next, c, nil do
            pcall(function()
              va[vb] = vc
            end)
          end
        end
        return (Instance.new(a))
      end
      function CreateMesh(a, b, c, d, e, g, h)
        a = a
        if a == "SpecialMesh" then
          IT(a).MeshType = c
          if d ~= "nil" and d ~= "" then
            IT(a).MeshId = "http://www.roblox.com/asset/?id=" .. d
          end
          if e ~= "nil" and e ~= "" then
            IT(a).TextureId = "http://www.roblox.com/asset/?id=" .. e
          end
        end
        IT(a).Offset = h or VT(0, 0, 0)
        IT(a).Scale = g
        IT(a).Parent = b
        return (IT(a))
      end
      function CreatePart(a, b, c, d, e, g, h, j, k)
        a = a
        IT("Part").formFactor = a
        IT("Part").Reflectance = d
        IT("Part").Transparency = e
        IT("Part").CanCollide = false
        IT("Part").Locked = true
        IT("Part").Anchored = true
        if k == false then
          IT("Part").Anchored = false
        end
        IT("Part").BrickColor = BRICKC(tostring(g))
        IT("Part").Name = h
        IT("Part").Size = j
        IT("Part").Position = Torso.Position
        IT("Part").Material = c
        IT("Part"):BreakJoints()
        IT("Part").Parent = b
        return (IT("Part"))
      end
      function QuaternionFromCFrame(a)
        a = a
        if 0 < a:components() + a:components() + a:components() then
          return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
        else
          if 1 == 0 then
          end
          if 2 == 0 then
            return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          elseif 2 == 1 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
          elseif 2 == 2 then
            return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
          end
        end
      end
      function QuaternionToCFrame(a, b, c, d, e, g, h)
        a = a
        return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
      end
      function QuaternionSlerp(a, b, c)
        a = a
        if a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] >= 0.0001 then
          if 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) > 0.0001 then
          else
          end
        elseif 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) > 0.0001 then
        else
        end
        return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
      end
      function Clerp(a, b, c)
        a = a
        return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
          QuaternionFromCFrame(a)
        }, {
          QuaternionFromCFrame(b)
        }, c))
      end
      function CreateFrame(a, b, c, d, e, g, h, j)
        a = a
        IT("Frame").BackgroundTransparency = b
        IT("Frame").BorderSizePixel = c
        IT("Frame").Position = d
        IT("Frame").Size = e
        IT("Frame").BackgroundColor3 = g
        IT("Frame").BorderColor3 = h
        IT("Frame").Name = j
        IT("Frame").Parent = a
        return (IT("Frame"))
      end
      function CreateLabel(a, b, c, d, e, g, h, j, k)
        a = a
        IT("TextLabel").BackgroundTransparency = 1
        IT("TextLabel").Size = UD2(1, 0, 1, 0)
        IT("TextLabel").Position = UD2(0, 0, 0, 0)
        IT("TextLabel").TextColor3 = c
        IT("TextLabel").TextStrokeTransparency = j
        IT("TextLabel").TextTransparency = g
        IT("TextLabel").FontSize = d
        IT("TextLabel").Font = e
        IT("TextLabel").BorderSizePixel = h
        IT("TextLabel").TextScaled = false
        IT("TextLabel").Text = b
        IT("TextLabel").Name = k
        IT("TextLabel").Parent = a
        return (IT("TextLabel"))
      end
      function NoOutlines(a)
        a = a
        a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
      end
      function CreateWeldOrSnapOrMotor(a, b, c, d, e, g)
        a = a
        IT(a).Part0 = c
        IT(a).Part1 = d
        IT(a).C0 = e
        IT(a).C1 = g
        IT(a).Parent = b
        return (IT(a))
      end
      function CreateSound(a, b, c, d, e)
        a = a
        coroutine.resume(coroutine.create(function()
          va = vb:Clone()
          va.Parent = vc
          va.Volume = vd
          va.Pitch = ve
          va.SoundId = "http://www.roblox.com/asset/?id=" .. vg
          va:play()
          if vh == true then
            va.Looped = true
          else
            repeat
              wait(1)
              if va.Playing ~= false then
              end
            until va.Parent ~= vc
            va:remove()
          end
        end))
        return nil
      end
      function CFrameFromTopBack(a, b, c)
        a = a
        return va(a.x, a.y, a.z, b:Cross(c).x, b.x, c.x, b:Cross(c).y, b.y, c.y, b:Cross(c).z, b.z, c.z)
      end
      function CreatePart2(a, b, c, d, e, g, h, j, k)
        a = a
        IT("Part").formFactor = a
        IT("Part").Reflectance = d
        IT("Part").Transparency = e
        IT("Part").CanCollide = false
        IT("Part").Locked = true
        IT("Part").Anchored = true
        if k == false then
          IT("Part").Anchored = false
        end
        IT("Part").BrickColor = BRICKC(tostring(g))
        IT("Part").Name = h
        IT("Part").Size = j
        IT("Part").Position = Torso.Position
        IT("Part").Material = c
        IT("Part"):BreakJoints()
        IT("Part").Parent = b
        return (IT("Part"))
      end
      function CreateWeldOrSnapOrMotor2(a, b, c, d, e, g)
        a = a
        IT(a).Part0 = c
        IT(a).Part1 = d
        IT(a).C0 = e
        IT(a).C1 = g
        IT(a).Parent = b
        return (IT(a))
      end
      function ChangeName(a)
        a = a
        va.Text = a
      end
      function burn()
        va = true
        vb = true
        for fd = 0, 4, 0.1 do
          Swait()
          RightHip.C0 = Clerp(RightHip.C0, vc(1, -0.15, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-3), RAD(-15), RAD(-20)), 0.1)
          LeftHip.C0 = Clerp(LeftHip.C0, vc(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-3), RAD(1), RAD(20)), 0.1)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * vc(0, 0.25, -0.05) * ANGLES(RAD(-20), RAD(0), RAD(30)), 0.1)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vc(1.45, 0.8, -0.15) * ANGLES(RAD(35), RAD(-10), RAD(30)), 0.8)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vc(-1.4, 0.5, 0.1) * ANGLES(RAD(-5), RAD(10), RAD(-20)), 0.1)
        end
        for fd = 0, 2, 0.1 do
          Swait()
          RightHip.C0 = Clerp(RightHip.C0, vc(1, -0.5, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-3), RAD(-25), RAD(30)), 0.8)
          LeftHip.C0 = Clerp(LeftHip.C0, vc(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-3), RAD(1), RAD(20)), 0.8)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * vc(0, -0.25, -0.5) * ANGLES(RAD(30), RAD(0), RAD(50)), 0.8)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vc(1.45, 0.6, -0.15) * ANGLES(RAD(35), RAD(-10), RAD(75)), 0.8)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vc(-1.4, 0.5, 0.1) * ANGLES(RAD(-35), RAD(10), RAD(-50)), 0.8)
        end
        ve = "burning"
        ChangeName("D E M O N S")
        va = false
        vb = false
      end
      function BloodWater()
        va = true
        vb = true
        for fd = 0, 4, 0.1 do
          Swait()
          RightHip.C0 = Clerp(RightHip.C0, vc(1, -0.15, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-3), RAD(-15), RAD(-20)), 0.1)
          LeftHip.C0 = Clerp(LeftHip.C0, vc(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-3), RAD(1), RAD(20)), 0.1)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * vc(0, 0.25, -0.05) * ANGLES(RAD(-20), RAD(0), RAD(30)), 0.1)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vc(1.45, 0.8, -0.15) * ANGLES(RAD(35), RAD(-10), RAD(30)), 0.8)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vc(-1.4, 0.5, 0.1) * ANGLES(RAD(-5), RAD(10), RAD(-20)), 0.1)
        end
        for fd = 0, 2, 0.1 do
          Swait()
          RightHip.C0 = Clerp(RightHip.C0, vc(1, -0.5, -0.5) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-3), RAD(-25), RAD(30)), 0.8)
          LeftHip.C0 = Clerp(LeftHip.C0, vc(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-3), RAD(1), RAD(20)), 0.8)
          RootJoint.C0 = Clerp(RootJoint.C0, vd * vc(0, -0.25, -0.5) * ANGLES(RAD(30), RAD(0), RAD(50)), 0.8)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vc(1.45, 0.6, -0.15) * ANGLES(RAD(35), RAD(-10), RAD(75)), 0.8)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vc(-1.4, 0.5, 0.1) * ANGLES(RAD(-35), RAD(10), RAD(-50)), 0.8)
        end
        ve = "BloodWater"
        ChangeName("B L O O D W A T E R")
        va = false
        vb = false
      end
      IT("ParticleEmitter", nil).Enabled = false
      IT("ParticleEmitter", nil).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.3),
        NumberSequenceKeypoint.new(0.3, 0),
        [22] = NumberSequenceKeypoint.new(1, 1)
      })
      IT("ParticleEmitter", nil).LightEmission = 0.5
      IT("ParticleEmitter", nil).Rate = 150
      IT("ParticleEmitter", nil).ZOffset = 0.2
      IT("ParticleEmitter", nil).Rotation = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).RotSpeed = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).Texture = "http://www.roblox.com/asset/?id=304437537"
      IT("ParticleEmitter", nil).Color = ColorSequence.new(Color3.new(0, 0, 0), Color3.new(1, 0, 0))
      function ParticleEmitter(a)
        a = a
        va:Clone().Parent = a.Parent or Torso
        va:Clone().Size = NumberSequence.new(a.Size1 or 1, a.Size2 or 5)
        va:Clone().Lifetime = NumberRange.new(a.Lifetime1 or 1, a.Lifetime2 or 1.5)
        va:Clone().Acceleration, va:Clone().Drag, va:Clone().VelocitySpread, va:Clone().Speed = a.Acel or VT(0, 0, 0), a.Drag or 0, a.Offset or 360, NumberRange.new(a.Speed or 5)
        if (a.Enabled or false) == false then
          va:Clone():Emit(a.Emit or 100)
          Debris:AddItem(va:Clone(), a.Lifetime2 or 1.5)
        else
          va:Clone().Enabled = true
        end
        return (va:Clone())
      end
      for fao = 1, 45 do
        if Torso == Torso then
          CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false).Color = Color3.new((fao * 5 - 3) / 255, 0, 0)
          CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false).Material = Enum.Material.Neon
          table.insert({}, (CreateWeldOrSnapOrMotor("Weld", Torso, Torso, CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false), CFrame.new(0, -0.75, 0.5) * ANGLES(RAD(90), RAD(0), RAD(0)), CFrame.new(0, 0, 0))))
        else
          CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false).Color = Color3.new((fao * 5 - 3) / 255, 0, 0)
          CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false).Material = Enum.Material.Neon
          table.insert({}, (CreateWeldOrSnapOrMotor("Weld", CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false), CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false), CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false), CFrame.new(0, CreatePart(3, va.Character, "Neon", 0, 0, "Black", "Tail", VT(0.25 * (1 - fao / 60), 0.25, 0.25 * (1 - fao / 60)), false).Size.Y / 2, 0) * ANGLES(RAD(-1.2), RAD(0), RAD(0)), CFrame.new(0, 0, 0))))
        end
      end
      for fao = 1, 16 do
        CreatePart(3, va.Character, "Fabric", 0, 0 + (fao - 1) / 16.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.65, 1.01), false).Color = Color3.new(0, 0, 0)
        Head:FindFirstChildOfClass("SpecialMesh"):Clone().Parent = CreatePart(3, va.Character, "Fabric", 0, 0 + (fao - 1) / 16.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.65, 1.01), false)
        CreateWeldOrSnapOrMotor("Weld", Head, Head, CreatePart(3, va.Character, "Fabric", 0, 0 + (fao - 1) / 16.2, "Dark stone grey", "FaceGradient", VT(1.01, 0.65, 1.01), false), CFrame.new(0, 0.45 - (fao - 1) / 25, 0), CFrame.new(0, 0, 0))
      end
      function MakeForm(a, b)
        a = a
        if b == "Cyl" then
        elseif b == "Ball" then
          IT("SpecialMesh", a).MeshType = "Sphere"
        elseif b == "Wedge" then
          IT("SpecialMesh", a).MeshType = "Wedge"
        end
      end
      function SpawnTrail(a, b, c)
        a = a
        MakeForm(CreatePart(3, va, "Neon", 0, 0.5, "Really red", "Trail", VT(0, 0, 0)), "Cyl")
        if c == true then
          CreatePart(3, va, "Neon", 0, 0.5, "Really red", "Trail", VT(0, 0, 0)).Size = VT(0.5, a - b.Magnitude, 0.5)
        else
          CreatePart(3, va, "Neon", 0, 0.5, "Really red", "Trail", VT(0, 0, 0)).Size = VT(0.25, a - b.Magnitude, 0.25)
        end
        CreatePart(3, va, "Neon", 0, 0.5, "Really red", "Trail", VT(0, 0, 0)).CFrame = vb(a, b) * vb(0, 0, -a - b.Magnitude / 2) * ANGLES(RAD(90), RAD(0), RAD(0))
        coroutine.resume(coroutine.create(function()
          for fd = 1, 5 do
            Swait()
            va.Transparency = va.Transparency + 0.1
          end
          va:remove()
        end))
      end
      Debris = game:GetService("Debris")
      function CastProperRay(a, b, c, d)
        a = a
        return Raycast(a, va(a, b).lookVector, c, d)
      end
      function turnto(a)
        a = a
        RootPart.CFrame = CFrame.new(RootPart.CFrame.p, VT(a.X, RootPart.Position.Y, a.Z)) * CFrame.new(0, 0, 0)
      end
      IT("ParticleEmitter", nil).Enabled = false
      IT("ParticleEmitter", nil).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.3),
        NumberSequenceKeypoint.new(0.3, 0),
        [20] = NumberSequenceKeypoint.new(1, 1)
      })
      IT("ParticleEmitter", nil).LightEmission = 0.5
      IT("ParticleEmitter", nil).Rate = 150
      IT("ParticleEmitter", nil).ZOffset = 0.2
      IT("ParticleEmitter", nil).Rotation = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).RotSpeed = NumberRange.new(-180, 180)
      IT("ParticleEmitter", nil).Texture = "http://www.roblox.com/asset/?id=304437537"
      IT("ParticleEmitter", nil).Color = ColorSequence.new(Color3.new(1, 0, 0), Color3.new(0.4, 0, 0))
      function ParticleEmitter(a)
        a = a
        va:Clone().Parent = a.Parent or Torso
        va:Clone().Size = NumberSequence.new(a.Size1 or 1, a.Size2 or 5)
        va:Clone().Lifetime = NumberRange.new(a.Lifetime1 or 1, a.Lifetime2 or 1.5)
        va:Clone().Acceleration, va:Clone().Drag, va:Clone().VelocitySpread, va:Clone().Speed = a.Acel or VT(0, 0, 0), a.Drag or 0, a.Offset or 360, NumberRange.new(a.Speed or 5)
        if (a.Enabled or false) == false then
          va:Clone():Emit(a.Emit or 100)
          Debris:AddItem(va:Clone(), a.Lifetime2 or 1.5)
        else
          va:Clone().Enabled = true
        end
        return (va:Clone())
      end
      Humanoid.Died:connect(function()
        va = true
      end)
      function printbye(a)
        a = a
        warn({
          "You cannot struggle, ",
          "Your existance is an insult, ",
          "Fade, ",
          "Your existance is not desired, ",
          "You are not permitted here, ",
          "You are not to decide your fate, ",
          "Be gone, ",
          "You are already dead, ",
          "Your live is an anomaly, ",
          "Don't dare to return, ",
          "Why are you resisting, ",
          "You cannot exist here, ",
          "Why are you struggling, ",
          "Your fate was already decided, ",
          "Goodbye, ",
          "You cannot ignore my command, ",
          "You cannot resist my command, ",
          "You already died, "
        }[MRANDOM(1, #{
          "You cannot struggle, ",
          "Your existance is an insult, ",
          "Fade, ",
          "Your existance is not desired, ",
          "You are not permitted here, ",
          "You are not to decide your fate, ",
          "Be gone, ",
          "You are already dead, ",
          "Your live is an anomaly, ",
          "Don't dare to return, ",
          "Why are you resisting, ",
          "You cannot exist here, ",
          "Why are you struggling, ",
          "Your fate was already decided, ",
          "Goodbye, ",
          "You cannot ignore my command, ",
          "You cannot resist my command, ",
          "You already died, "
        })] .. a .. ".")
      end
      workspace.ChildAdded:connect(function(a)
        a = a
        for fe = 1, #va do
          if va[fe] ~= nil and a.Name == va[fe] then
            coroutine.resume(coroutine.create(function()
              printbye(va.Name)
              va:ClearAllChildren()
              Debris:AddItem(va, 0.0005)
            end))
          end
        end
      end)
      function sit()
        va = true
        vb = true
        KEY = Mouse.KeyDown:connect(function(a)
          a = a
          if a == "t" then
            KEY:Disconnect()
            va = false
          end
        end)
        repeat
          for fe = 0, 0.4, 0.1 / Animation_Speed do
            Swait()
            if true == false then
              break
            end
            RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, -1.7) * ANGLES(RAD(-40), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.3, 0.1) * ANGLES(RAD(-40), RAD(0), RAD(0)) * ve, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.3, 0.1) * ANGLES(RAD(-40), RAD(0), RAD(0)) * vg, 0.15 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(45), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(45), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          end
        until true == false
        va = false
        vb = false
      end
      Instance.new("Sound", va.Character).SoundId = "rbxassetid://168143115"
      Instance.new("Sound", va.Character).Volume = 10
      function Shot()
        shotsound:Play()
        va = true
        vb = false
        for fd = 0, 0.4, 0.1 / Animation_Speed do
          Swait()
          turnto(Mouse.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(90), RAD(0)) * ve, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(0.2, 0.8, -2.5) * ANGLES(RAD(90), RAD(0), RAD(50)) * vg, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
        for fd = 0, 0.5, 0.1 / Animation_Speed do
          Swait()
          turnto(Mouse.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(90), RAD(0)) * ve, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(0.2, 0.8, -1.5) * ANGLES(RAD(90), RAD(0), RAD(50)) * vg, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
        for fd = 0, 0.5, 0.1 / Animation_Speed do
          Swait()
          turnto(Mouse.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(90), RAD(0)) * ve, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(0.2, 0.8, -2.5) * ANGLES(RAD(90), RAD(0), RAD(50)) * vg, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
        repeat
          for fd = 0, 0.2, 0.3 / Animation_Speed do
            Swait()
            turnto(Mouse.Hit.p)
            vh:Play()
            RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(45)), 0.5 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(45)) * ve, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(20), RAD(-20)) * vg, 0.5 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, vd(1, -1 - 0.05 * COS(vj / 12), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1 - 0.05 * COS(vj / 12), -0.01) * ANGLES(RAD(0), RAD(-50), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          end
          for fd = 0, 0.3, 0.3 / Animation_Speed do
            Swait()
            RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(45)), 0.5 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, vd(0.5, 0.5, 2) * ANGLES(RAD(110), RAD(0), RAD(45)) * ve, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(20), RAD(-20)) * vg, 0.5 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, vd(1, -1 - 0.05 * COS(vj / 12), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1 - 0.05 * COS(vj / 12), -0.01) * ANGLES(RAD(0), RAD(-50), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          end
        until vk == false
        va = false
        vb = false
      end
      function PistolShot()
        va = true
        vb = false
        for fd = 0, 0.4, 0.1 / Animation_Speed do
          Swait()
          turnto(Mouse.Hit.p)
          RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(90)), 0.5 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(90)) * ve, 0.5 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.6, 0) * ANGLES(RAD(-45), RAD(0), RAD(45)) * vg, 0.5 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
        end
        repeat
          for fd = 0, 0.2, 0.1 / Animation_Speed do
            Swait()
            turnto(Mouse.Hit.p)
            vh:Play()
            RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(90)), 0.5 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(0), RAD(90)) * ve, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.6, 0) * ANGLES(RAD(-45), RAD(0), RAD(45)) * vg, 0.5 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          end
          for fd = 0, 0.3, 0.1 / Animation_Speed do
            Swait()
            RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(90)), 0.5 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(90), RAD(15), RAD(90)) * ve, 0.5 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.6, 0) * ANGLES(RAD(-45), RAD(0), RAD(45)) * vg, 0.5 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, vd(1, -1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.5 / Animation_Speed)
          end
        until vj == false
        va = false
        vb = false
      end
      function AttackTemplate()
        va = true
        vb = false
        for fd = 0, 1, 0.1 / Animation_Speed do
          Swait()
          RootJoint.C0 = Clerp(RootJoint.C0, vc * vd(0, 0, 0 + 0.05 * COS(ve / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          RightShoulder.C0 = Clerp(RightShoulder.C0, vd(1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(12)) * vg, 0.15 / Animation_Speed)
          LeftShoulder.C0 = Clerp(LeftShoulder.C0, vd(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-12)) * vh, 0.15 / Animation_Speed)
          RightHip.C0 = Clerp(RightHip.C0, vd(1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          LeftHip.C0 = Clerp(LeftHip.C0, vd(-1, -1 - 0.05 * COS(ve / 12), -0.01) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
        end
        va = false
        vb = false
      end
      function MouseDown(a)
        a = a
        repeat
        until va == false
      end
      function MouseUp(a)
        a = a
        va = false
      end
      function KeyDown(a)
        a = a
        va = true
        if a == "z" and vb == false then
          Shot()
        end
        if a == "x" and vb == false then
          PistolShot()
        end
        if a == "1" and vb == false and vc ~= "BloodWater" then
          BloodWater()
        end
        if a == "2" and vb == false and vc ~= "burning" then
          burn()
        end
        if a == "t" and vb == false then
          sit()
        end
      end
      function KeyUp(a)
        a = a
        va = false
      end
      Mouse.Button1Down:connect(function(a)
        a = a
        MouseDown(a)
      end)
      Mouse.Button1Up:connect(function(a)
        a = a
        MouseUp(a)
      end)
      Mouse.KeyDown:connect(function(a)
        a = a
        KeyDown(a)
      end)
      Mouse.KeyUp:connect(function(a)
        a = a
        KeyUp(a)
      end)
      function unanchor()
        if va == true then
          g = vb:GetChildren()
          for fd = 1, #g do
            if g[fd].ClassName == "Part" then
              g[fd].Anchored = false
            end
          end
        end
      end
      Humanoid.Changed:connect(function(a)
        a = a
        if a == "Jump" and Disable_Jump == true then
          Humanoid.Jump = false
        end
      end)
      while true do
        Swait()
        for fay, faz in next, Humanoid:GetPlayingAnimationTracks() do
          faz:Stop()
        end
        if va.Character:FindFirstChildOfClass("Humanoid") == nil then
          Humanoid = IT("Humanoid", va.Character)
        end
        for fay = 1, #{} do
          if {}[fay] ~= nil then
            {}[fay].C1 = Clerp({}[fay].C1, CFrame.new(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(3.5 * SIN(5 / 12))), 1 / Animation_Speed)
          end
        end
        if "Idle" == "Walk" and RootPart.Velocity * VT(1, 0, 1).magnitude > 1 then
          RootJoint.C1 = Clerp(RootJoint.C1, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, -0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16) / 2)) * Player_Size) * ANGLES(RAD(0), RAD(0) - RootPart.RotVelocity.Y / 75, RAD(0)), 2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
          RightHip.C1 = Clerp(RightHip.C1, CFrame.new(0.5 * Player_Size, 0.875 * Player_Size - 0.125 * SIN((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) * Player_Size, -0.125 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) * Player_Size) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0) - RightLeg.RotVelocity.Y / 75, RAD(0), RAD(25 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
          LeftHip.C1 = Clerp(LeftHip.C1, CFrame.new(-0.5 * Player_Size, 0.875 * Player_Size + 0.125 * SIN((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) * Player_Size, 0.125 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))) * Player_Size) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0) + LeftLeg.RotVelocity.Y / 75, RAD(0), RAD(25 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16))))), 0.2 * (Humanoid.WalkSpeed / 16) / Animation_Speed)
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 then
          RootJoint.C1 = Clerp(RootJoint.C1, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
          RightHip.C1 = Clerp(RightHip.C1, CFrame.new(0.5, 1, 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
          LeftHip.C1 = Clerp(LeftHip.C1, CFrame.new(-0.5, 1, 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
        end
        if RootPart.Velocity.y > 1 and Raycast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, va.Character) == nil then
          if false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * ANGLES(RAD(45), RAD(0), RAD(25)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(-20)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1, -0.3) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
          end
        elseif RootPart.Velocity.y < -1 and Raycast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, va.Character) == nil then
          if false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.2 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * ANGLES(RAD(45), RAD(0), RAD(25)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(-40), RAD(0), RAD(-20)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.2 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1, -0.3) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(-20)), 0.2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1, -0.3) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-5), RAD(0), RAD(20)), 0.2 / Animation_Speed)
          end
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude < 1 and Raycast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, va.Character) ~= nil then
          DOUBLED = false
          READYTODOUBLE = false
          if "BloodWater" == "BloodWater" and false == false then
            game.Players.LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(0, 0, 0)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(0.75, 0.4 - 0.1 * COS((5 + 2 / Animation_Speed) / 12), -1) * ANGLES(RAD(70), RAD(0), RAD(-70)) * ANGLES(RAD(20), RAD(25), RAD(-15)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.4 / Animation_Speed)
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0 + 0.05 * COS((5 + 2 / Animation_Speed) / 12)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.8 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1, 0.1 - 0.1 * COS((5 + 2 / Animation_Speed) / 12), -0.5) * ANGLES(RAD(70), RAD(0), RAD(85)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.4 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.025 * COS((5 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(83), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.8 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.05 * COS((5 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(0), RAD(-83), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.8 / Animation_Speed)
          end
          if "BloodWater" == "burning" and false == false then
            game.Players.LocalPlayer.Character.Humanoid.CameraOffset = Vector3.new(math.rad(math.random(-30, 30)), math.rad(math.random(-30, 30)), math.rad(math.random(-30, 30))) / 4
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, -0.1, -0.1 + 0.05 * COS((5 + 2 / Animation_Speed) / 12)) * ANGLES(RAD(30), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.05 * COS((5 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(30), RAD(90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.05 * COS((5 + 2 / Animation_Speed) / 12), -0.01) * ANGLES(RAD(30), RAD(-90), RAD(0)) * ANGLES(RAD(-8), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * ANGLES(RAD(MRANDOM(240, 250)), RAD(20), RAD(MRANDOM(-80, -70))) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.45, 0.2, 0) * ANGLES(RAD(MRANDOM(25, 30)), RAD(0), RAD(MRANDOM(5, 10))) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
          end
          if "BloodWater" == "Demons" and false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0 + 0.1 * COS((5 + 2 / Animation_Speed) / 18)) * ANGLES(RAD(0 + 1 * COS((5 + 2 / Animation_Speed) / 18)), RAD(0), RAD(0)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * ANGLES(RAD(250), RAD(20), RAD(-80)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(40 + Instance.new("Sound", va.Character).PlaybackLoudness / 7.5), RAD(0), RAD(-10)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.1 * COS((5 + 2 / Animation_Speed) / 18), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, 0 - Instance.new("Sound", va.Character).PlaybackLoudness / 1000, -0.6) * ANGLES(RAD(0), RAD(-75), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(0)), 1 / Animation_Speed)
          end
          if "BloodWater" == "Secret" and false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, 0 - 0.1 * SIN((5 + 2 / Animation_Speed) / 25)) * ANGLES(RAD(0), RAD(0), RAD(25)), 0.15 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * ANGLES(RAD(8 * SIN((5 + 2 / Animation_Speed) / 50)), RAD(60), RAD(50 + 8.5 * SIN((5 + 2 / Animation_Speed) / 25))) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-0.8, 0.4, -0.7) * ANGLES(RAD(90), RAD(0), RAD(86)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.15 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 + 0.1 * SIN((5 + 2 / Animation_Speed) / 25), -0.01) * ANGLES(RAD(0), RAD(70), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 + 0.1 * SIN((5 + 2 / Animation_Speed) / 25), -0.01) * ANGLES(RAD(0), RAD(-85), RAD(0)) * ANGLES(RAD(-2), RAD(0), RAD(0)), 0.15 / Animation_Speed)
          end
          if "BloodWater" == "Devil" and false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, -1.3 + 0.1 * COS((5 + 2 / Animation_Speed) / 24)) * ANGLES(RAD(0 - 4 * SIN((5 + 2 / Animation_Speed) / 24)), RAD(0 + 1 * COS((5 + 2 / Animation_Speed) / 24)), RAD(-10)), 0.1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, 0.1 - 0.1 * COS((5 + 2 / Animation_Speed) / 24) - RAD(0 + 1 * COS((5 + 2 / Animation_Speed) / 24)), -0.3) * ANGLES(RAD(13 - 6 * SIN((5 + 2 / Animation_Speed) / 24)), RAD(90), RAD(0)), 0.1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1.3 - 0.1 * COS((5 + 2 / Animation_Speed) / 24) + RAD(0 + 1 * COS((5 + 2 / Animation_Speed) / 24)), -0.15) * ANGLES(RAD(-90 - 6 * SIN((5 + 2 / Animation_Speed) / 24)), RAD(-90), RAD(0)), 0.1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(0.8, 0.4 + 0.1 * SIN((5 + 2 / Animation_Speed) / 35), 0.5) * ANGLES(RAD(90), RAD(90), RAD(0)), 0.1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(0.3, 0.7 + 0.1 * SIN((5 + 2 / Animation_Speed) / 35), -1.5) * ANGLES(RAD(80), RAD(0 + 4 * SIN((5 + 2 / Animation_Speed) / 35)), RAD(50 + 3 * SIN((5 + 2 / Animation_Speed) / 35))), 0.1 / Animation_Speed)
          end
          if "BloodWater" == "Katana" and false == false then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0 - 0.1 * COS((5 + 2 / Animation_Speed) / 30), 0 + 0.1 * COS((5 + 2 / Animation_Speed) / 15)) * ANGLES(RAD(0 + 5 * COS((5 + 2 / Animation_Speed) / 30)), RAD(0), RAD(25)), 1 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * ANGLES(RAD(0 + 6 * COS((5 + 2 / Animation_Speed) / 30)), RAD(0), RAD(12)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.15 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(0 + 6 * COS((5 + 2 / Animation_Speed) / 30)), RAD(0), RAD(-12)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.15 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.1 * COS((5 + 2 / Animation_Speed) / 15), -0.01) * ANGLES(RAD(0), RAD(75), RAD(0)) * ANGLES(RAD(-6 - 2.5 * COS((5 + 2 / Animation_Speed) / 30)), RAD(0), RAD(0 + 5 * COS((5 + 2 / Animation_Speed) / 30))), 1 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.1 * COS((5 + 2 / Animation_Speed) / 15), -0.01) * ANGLES(RAD(0), RAD(-75), RAD(0)) * ANGLES(RAD(-6 + 2.5 * COS((5 + 2 / Animation_Speed) / 30)), RAD(0), RAD(0 - 5 * COS((5 + 2 / Animation_Speed) / 30))), 1 / Animation_Speed)
          end
        elseif RootPart.Velocity * VT(1, 0, 1).magnitude > 1 and Raycast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position + VT(0, -1, 0)).lookVector, 4, va.Character) ~= nil and false == false then
          if "BloodWater" == "BloodWater" then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, -0.1) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * ANGLES(RAD(250), RAD(20), RAD(-80)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(-35 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-5)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.35 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + 0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + -0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(15)), 2 / Animation_Speed)
          elseif "BloodWater" == "Katana" then
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, -0.1) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * ANGLES(RAD(35 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(5)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 0.35 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(-35 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-5)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 0.35 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + 0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + -0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(15)), 2 / Animation_Speed)
          else
            RootJoint.C0 = Clerp(RootJoint.C0, CFrame.new(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180)) * CFrame.new(0, 0, -0.1) * ANGLES(RAD(5), RAD(0), RAD(0)), 0.15 / Animation_Speed)
            RightShoulder.C0 = Clerp(RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * ANGLES(RAD(250), RAD(20), RAD(-80)) * (CFrame.new(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))), 1 / Animation_Speed)
            LeftShoulder.C0 = Clerp(LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * ANGLES(RAD(-35 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))), RAD(0), RAD(-5)) * (CFrame.new(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))), 1 / Animation_Speed)
            RightHip.C0 = Clerp(RightHip.C0, CFrame.new(1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + 0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(-15)), 2 / Animation_Speed)
            LeftHip.C0 = Clerp(LeftHip.C0, CFrame.new(-1, -1 - 0.15 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)) * 2), -0.2 + -0.2 * COS((5 + 2 / Animation_Speed) / (6 / (Humanoid.WalkSpeed / 16)))) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(0), RAD(0), RAD(15)), 2 / Animation_Speed)
          end
        end
        unanchor()
        Humanoid.MaxHealth = math.huge
        Humanoid.Health = math.huge
        Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).Rotation = 0 + 5 * {
          C = math.cos,
          R = math.rad,
          S = math.sin,
          P = math.pi,
          RNG = math.random,
          MRS = math.randomseed,
          H = math.huge,
          RRNG = function(a, b, c)
            a = a
            return math.rad(math.random(a, b) / (c or 1))
          end
        }.C((5 + 2 / Animation_Speed) / 32)
        Instance.new("TextLabel", (Instance.new("BillboardGui", va.Character))).TextColor3 = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        RightArm.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        LeftArm.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        Torso.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        Head.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        LeftLeg.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        RightLeg.Color = Color3.new(Instance.new("Sound", va.Character).PlaybackLoudness / 500, 0, 0)
        if false == false then
          Disable_Jump = false
          Humanoid.WalkSpeed = 16
        elseif false == true then
          Disable_Jump = true
          Humanoid.WalkSpeed = 0
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("High Hope Gunner", "High Hope Gunner", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      char.Animate:Remove()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(1.5, 1, -0.3)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"], game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(37, 90, 0)
      game:GetService("Players").LocalPlayer.Character["Type-49 Abomindation Back Accessory"].Name = "Fire"
      Instance.new("Sound", char.Fire.Handle).SoundId = "rbxassetid://2566079101"
      Instance.new("Sound", char.Fire.Handle).Volume = 20
      Instance.new("Sound", char.Fire.Handle).Looped = true
      Instance.new("Sound", char.Fire.Handle):play()
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      mouse.Button1Down:Connect(function()
        va = true
      end)
      mouse.Button1Up:Connect(function()
        va = false
      end)
      pcall(function()
        va.Animate:Destroy()
      end)
      for fQ, fW in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fW:Stop()
      end
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if not false then
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 20
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, math.sin(tick() * 2) / 5, 0) * CFrame.Angles(math.cos(tick() * 2) / 5, math.sin(tick() * 2) / 3, math.rad(170)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.sin(tick() * 2) / 3, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0.5, 0.7, 0) * CFrame.Angles(0, 0, math.rad(-20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.cos(tick() * 1) / 3), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 2 - math.sin(tick() * 2)) * CFrame.Angles(0, 0, 0), 0.1)
        else
          game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 9
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0.3, 0, 0) * CFrame.Angles(math.rad(-20), 0, math.rad(85) - math.sin(tick() * 50) * 0.5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(40), math.rad(-60)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0.5, 0.7, 0) * CFrame.Angles(0, 0, math.rad(-20)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.cos(tick() * 1) / 3), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 2 - math.sin(tick() * 2)) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Earthlord", "Earthlord", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.Cloud, game:GetService("Players").LocalPlayer.Character.Torso, true).Position = Vector3.new(0, 4, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.Cloud, game:GetService("Players").LocalPlayer.Character.Torso, true).Orientation = Vector3.new(0, 0, 0)
      game:GetService("Players").LocalPlayer.Character.Cloud.Name = "sa"
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.MeshPartAccessory, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Position = Vector3.new(0, 5, 0)
      (function(a, b, c)
        a = a
        if c == true then
          for fh, fj in next, a:GetDescendants() do
            if fj:IsA("SpecialMesh") then
              fj:Remove()
            end
          end
        end
        a.Parent = va
        a0 = Instance.new("Attachment", a.Handle)
        a1 = Instance.new("Attachment", b)
        Instance.new("AlignPosition", a.Handle).Attachment0 = a0
        Instance.new("AlignPosition", a.Handle).Attachment1 = a1
        Instance.new("AlignPosition", a.Handle).Responsiveness = 200
        Instance.new("AlignPosition", a.Handle).RigidityEnabled = true
        Instance.new("AlignPosition", a.Handle).MaxVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).Attachment0 = a0
        Instance.new("AlignOrientation", a.Handle).Attachment1 = a1
        Instance.new("AlignOrientation", a.Handle).MaxTorque = math.huge
        Instance.new("AlignOrientation", a.Handle).MaxAngularVelocity = math.huge
        Instance.new("AlignOrientation", a.Handle).PrimaryAxisOnly = false
        Instance.new("AlignOrientation", a.Handle).ReactionTorqueEnabled = false
        Instance.new("AlignOrientation", a.Handle).Responsiveness = 200
        Instance.new("AlignOrientation", a.Handle).RigidityEnabled = true
        a.Handle:BreakJoints()
        game:GetService("RunService").Stepped:Connect(function()
          va.Handle.CanCollide = false
          va.Handle.RotVelocity = Vector3.new(0, 1, 0)
          va.Handle.Velocity = Vector3.new(0, -25, 0)
        end)
        return a0
      end)(game:GetService("Players").LocalPlayer.Character.MeshPartAccessory, game:GetService("Players").LocalPlayer.Character["Right Arm"]).Orientation = Vector3.new(-20, 0, 0)
      game:GetService("Players").LocalPlayer.Character.MeshPartAccessory.Name = "Fire"
      pcall(function()
        va.Animate:Destroy()
      end)
      for fE, fR in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fR:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20) - math.sin(tick() * 1) / 5, math.rad(20), math.rad(180)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, math.rad(40)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 9 - math.cos(tick() * 3) / 1) * CFrame.Angles(math.rad(10), 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(20) - math.sin(tick() * 1) / 5, math.rad(20), math.rad(180)), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-5), 0, 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 9 - math.cos(tick() * 3) / 1) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat Scripts"):NewSection("Scripts | Hat Scripts"):NewButton("Daggerman", "Daggerman", function()
    spawn(function()
      plr = game.Players.LocalPlayer
      char = plr.Character
      mouse = plr:GetMouse()
      char.Animate:Remove()
      dag = char["Hussar SabreAccessory"]
      dag.Name = "Fire"
      char.Fire.Handle.AccessoryWeld:Destroy()
      att0 = Instance.new("Attachment", char.Fire.Handle)
      att0.Orientation = Vector3.new(0, 0, 0)
      att0.Position = Vector3.new(0, 1, -1.5)
      att1 = Instance.new("Attachment", char["Right Arm"])
      ap = Instance.new("AlignPosition", char.Fire.Handle)
      ap.Attachment0 = att0
      ap.Attachment1 = att1
      ap.RigidityEnabled = true
      ao = Instance.new("AlignOrientation", char.Fire.Handle)
      ao.Attachment0 = att0
      ao.Attachment1 = att1
      ao.RigidityEnabled = true
      pcall(function()
        va.Animate:Destroy()
      end)
      for fq, fw in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
        fw:Stop()
      end
      function swait()
        game:GetService("RunService").Heartbeat:wait()
      end
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23
      game.Players.LocalPlayer:GetMouse().Button1Down:connect(function()
        if va == false then
          va = true
          vb()
          va = false
        end
      end)
      while 0 < game.Players.LocalPlayer.Character.Humanoid.Health do
        swait()
        if 1 < game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-12), math.rad(-10), math.rad(-25) - math.sin(tick() * 10) / 9), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-12), math.rad(10), math.rad(25) - math.sin(tick() * 10) / 9), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, math.sin(tick() * 5) / 4, 0) * CFrame.Angles(math.rad(-2), 0, math.sin(tick() * 8) / 1), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, math.sin(tick() * 5) / 4, 0) * CFrame.Angles(math.rad(-2), 0, math.sin(tick() * 8) / 1), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0.05 - math.sin(tick() * 5) / 4) * CFrame.Angles(math.rad(20), 0, 0), 0.1)
        elseif 1 > game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude and false == false then
          game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(-20), math.sin(tick() * 4) / 3.5), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(-10), math.rad(10), math.sin(tick() * 2) / 4), 0.1)
          game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Right Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Right Hip"].C0 * CFrame.new(0, math.sin(tick() * 5) / 4, 0) * CFrame.Angles(math.rad(-10), math.rad(-10), 0), 0.1)
          game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 = game.Players.LocalPlayer.Character.Torso["Left Hip"].C0:Lerp(game.Players.LocalPlayer.Character.Torso["Left Hip"].C0 * CFrame.new(0, math.sin(tick() * 5) / 4, 0) * CFrame.Angles(math.rad(-10), math.rad(10), 0), 0.1)
          game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0:Lerp(game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 * CFrame.new(0, 0, 0.05 - math.sin(tick() * 5) / 4) * CFrame.Angles(0, 0, 0), 0.1)
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Anim Scripts"):NewSection("Other Scripts | Reanimation Scripts"):NewButton("Memeus", "Memeus", function()
    wait()
    trazx = Instance.new("ParticleEmitter")
    c = game.Players.LocalPlayer.Character
    CF = CFrame.new
    angles = CFrame.Angles
    attack = false
    timetofly = true
    Euler = CFrame.fromEulerAnglesXYZ
    Rad = math.rad
    IT = Instance.new
    BrickC = BrickColor.new
    Cos = math.cos
    Acos = math.acos
    Sin = math.sin
    Asin = math.asin
    Abs = math.abs
    Mrandom = math.random
    Floor = math.floor
    random = math.random
    radian = math.rad
    Vec3 = Vector3.new
    cFrame = CFrame.new
    Euler = CFrame.fromEulerAnglesXYZ
    necko = CF(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
    RSH, LSH = nil, nil
    RW = Instance.new("Weld")
    LW = Instance.new("Weld")
    RH = game:service("Players").LocalPlayer.Character.Torso["Right Hip"]
    LH = game:service("Players").LocalPlayer.Character.Torso["Left Hip"]
    RSH = game:service("Players").LocalPlayer.Character.Torso["Right Shoulder"]
    LSH = game:service("Players").LocalPlayer.Character.Torso["Left Shoulder"]
    RSH.Parent = nil
    LSH.Parent = nil
    RW.Name = "RW"
    RW.Part0 = game:service("Players").LocalPlayer.Character.Torso
    RW.C0 = CF(1.5, 0.5, 0)
    RW.C1 = CF(0, 0.5, 0)
    RW.Part1 = game:service("Players").LocalPlayer.Character["Right Arm"]
    RW.Parent = game:service("Players").LocalPlayer.Character.Torso
    LW.Name = "LW"
    LW.Part0 = game:service("Players").LocalPlayer.Character.Torso
    LW.C0 = CF(-1.5, 0.5, 0)
    LW.C1 = CF(0, 0.5, 0)
    LW.Part1 = game:service("Players").LocalPlayer.Character["Left Arm"]
    LW.Parent = game:service("Players").LocalPlayer.Character.Torso
    Effects = {}
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function CameraEnshaking(a, b)
      a = a
      coroutine.resume(coroutine.create(function()
        for fg = 0, vb, 0.1 do
          swait()
          vc.CameraOffset = Vec3(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)))
          vd.CFrame = vd.CFrame * cFrame(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb))) * Euler(radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb), radian(random(-(1 * va - 0.05 * va / vb), 1 * va - 0.05 * va / vb)) * (0.01 * va - 0.0005 * va / vb))
        end
        ve.CameraOffset = Vec3(0, 0, 0)
      end))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Speed = NumberRange.new(40)
    joy = {}
    for fW = 0, 19 do
      joy[#joy + 1] = NumberSequenceKeypoint.new(fW / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Size = NumberSequence.new(joy)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Texture = "rbxassetid://1176402123"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Speed = NumberRange.new(45)
    nani = {}
    for fE = 0, 19 do
      nani[#nani + 1] = NumberSequenceKeypoint.new(fE / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Size = NumberSequence.new(nani)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Texture = "rbxassetid://1492670151"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Speed = NumberRange.new(60)
    toasterstoasttoast = {}
    for fR = 0, 19 do
      toasterstoasttoast[#toasterstoasttoast + 1] = NumberSequenceKeypoint.new(fR / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Size = NumberSequence.new(toasterstoasttoast)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Texture = "rbxassetid://436096230"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).VelocitySpread = 2000
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Lifetime = NumberRange.new(1)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Speed = NumberRange.new(50)
    cool = {}
    for fT = 0, 19 do
      cool[#cool + 1] = NumberSequenceKeypoint.new(fT / 19, math.random(1, 1))
    end
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Size = NumberSequence.new(cool)
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Rate = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LockedToPart = false
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).LightEmission = 0
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Texture = "rbxassetid://636768448"
    Instance.new("ParticleEmitter", game:service("Players").LocalPlayer.Character.Torso).Color = ColorSequence.new(BrickColor.new("Institutional white").Color)
    function ragdoll(a)
      a = a
      torso = a.HumanoidRootPart
      torso2 = a.Torso
      LW.Parent = nil
      RW.Parent = nil
      LH.Parent = nil
      RH.Parent = nil
      if va ~= nil then
        va.PlatformStand = true
      end
      if a:FindFirstChild("Head") then
        Instance.new("Weld").Name = "Neck"
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = a:FindFirstChild("Head"), torso
        Instance.new("Weld").C0 = CFrame.new(0, 1.5, 0)
        Instance.new("Weld").C1 = CFrame.new()
        Instance.new("Weld").Parent = torso
      end
      if a:FindFirstChild("Right Arm") then
        a:FindFirstChild("Right Arm").CFrame = torso.CFrame * CFrame.new(1.5, 0, 0)
        Instance.new("Glue").Name = "RightShoulder"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Right Arm"), torso
        Instance.new("Glue").C0 = CFrame.new(1.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Right Arm").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Right Arm")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Right Arm"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Left Arm") then
        a:FindFirstChild("Left Arm").CFrame = torso.CFrame * CFrame.new(-1.5, 0, 0)
        Instance.new("Glue").Name = "LeftShoulder"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Left Arm"), torso
        Instance.new("Glue").C0 = CFrame.new(-1.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Left Arm").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Left Arm")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Left Arm"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Right Leg") then
        a:FindFirstChild("Right Leg").CFrame = torso.CFrame * CFrame.new(0.5, -2, 0)
        Instance.new("Glue").Name = "RightHip"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Right Leg"), torso
        Instance.new("Glue").C0 = CFrame.new(0.5, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Right Leg").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Right Leg")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Right Leg"), CFrame.new(0, -0.5, 0)
      end
      if a:FindFirstChild("Left Leg") then
        a:FindFirstChild("Left Leg").CFrame = torso.CFrame * CFrame.new(-0.5, -2, 0)
        Instance.new("Glue").Name = "LeftHip"
        Instance.new("Glue").Part1, Instance.new("Glue").Part0 = a:FindFirstChild("Left Leg"), torso
        Instance.new("Glue").C0 = CFrame.new(-0.5, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").C1 = CFrame.new(0, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
        Instance.new("Glue").Parent = torso
        Instance.new("Part").TopSurface = 0
        Instance.new("Part").BottomSurface = 0
        Instance.new("Part").formFactor = "Symmetric"
        Instance.new("Part").Size = Vector3.new(1, 1, 1)
        Instance.new("Part").Transparency = 1
        Instance.new("Part").Parent, Instance.new("Part").CFrame = a, a:FindFirstChild("Left Leg").CFrame * CFrame.new(0, -0.5, 0)
        Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), a:FindFirstChild("Left Leg")
        Instance.new("Weld").Parent, Instance.new("Weld").C0 = a:FindFirstChild("Left Leg"), CFrame.new(0, -0.5, 0)
      end
      Instance.new("Part").TopSurface = 0
      Instance.new("Part").BottomSurface = 0
      Instance.new("Part").formFactor = "Symmetric"
      Instance.new("Part").Size = Vector3.new(1, 1, 1)
      Instance.new("Part").Transparency = 1
      Instance.new("Part").Parent, Instance.new("Part").CFrame = a, torso.CFrame * CFrame.new(0, 0.5, 0)
      Instance.new("Weld").Part1, Instance.new("Weld").Part0 = Instance.new("Part"), torso
      Instance.new("Weld").C0 = CFrame.new(0, 0.5, 0)
      Instance.new("Weld").Parent = torso
      torso.CFrame = CFrame.new(torso.Position) * CFrame.Angles(math.rad(20), math.rad(torso.Orientation.Y), math.rad(torso.Orientation.Z))
    end
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    function thread(a)
      a = a
      coroutine.resume(coroutine.create(a))
    end
    function clerp(a, b, c)
      a = a
      return QuaternionToCFrame((1 - c) * a.x + c * b.x, (1 - c) * a.y + c * b.y, (1 - c) * a.z + c * b.z, QuaternionSlerp({
        QuaternionFromCFrame(a)
      }, {
        QuaternionFromCFrame(b)
      }, c))
    end
    function QuaternionFromCFrame(a)
      a = a
      if 0 < a:components() + a:components() + a:components() then
        return (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components()))), (a:components() - a:components()) * (0.5 / math.sqrt(1 + (a:components() + a:components() + a:components())))
      else
        if 1 == 0 then
        end
        if 2 == 0 then
          return 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        elseif 2 == 1 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), 0.5 * math.sqrt(a:components() - a:components() - a:components() + 1)
        elseif 2 == 2 then
          return (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1)), (a:components() + a:components()) * (0.5 / math.sqrt(a:components() - a:components() - a:components() + 1))
        end
      end
    end
    function QuaternionToCFrame(a, b, c, d, e, g, h)
      a = a
      return CFrame.new(a, b, c, 1 - (e * (e + e) + g * (g + g)), d * (e + e) - h * (g + g), d * (g + g) + h * (e + e), d * (e + e) + h * (g + g), 1 - (d * (d + d) + g * (g + g)), e * (g + g) - h * (d + d), d * (g + g) - h * (e + e), e * (g + g) + h * (d + d), 1 - (d * (d + d) + e * (e + e)))
    end
    function QuaternionSlerp(a, b, c)
      a = a
      if 0.0001 <= a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4] then
        if 0.0001 < 1 - (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
        else
        end
      elseif 0.0001 < 1 + (a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]) then
      else
      end
      return a[1] * (c - 1) + b[1] * c, a[2] * (c - 1) + b[2] * c
    end
    function rayCast(a, b, c, d)
      a = a
      return game:service("Workspace"):FindPartOnRay(Ray.new(a, b.unit * (c or 999.999)), d)
    end
    function Damage(a, b, c, d, e, g, h, j, k, l)
      a = a
      print("X")
    end
    function ShowDamage(a, b, c, d)
      a = a
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Anchored = true
      game.Debris:AddItem(CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)), c or 2)
      CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(d or Color3.new(1, 0, 1)), "Effect", Vector3.new(0, 0, 0)).Parent = game:GetService("Workspace")
      delay(0, function()
        for fe = 1, va / vb do
          wait(vb)
          vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
          ve.TextTransparency = fe / (va / vb)
        end
        if vc and vc.Parent then
          vc:Destroy()
        end
      end)
    end
    function MagniDamage(a, b, c, d, e, g)
      a = a
      for fl, fm in pairs(workspace:children()) do
        if fm:findFirstChild("Humanoid") ~= nil and fm:findFirstChild("Head") ~= nil and b >= fm:findFirstChild("Head").Position - a.Position.magnitude and fm.Name ~= va.Name then
          Damage(fm:findFirstChild("Head"), fm:findFirstChild("Head"), c, d, e, g, vb, 0.1, "http://www.roblox.com/asset/?id=231917784", 1.2)
        end
      end
    end
    CFuncs = {
      Part = {
        Create = function(a, b, c, d, e, g, h)
          a = a
          RemoveOutlines((Create("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          })))
          return (Create("Part")({
            Parent = a,
            Reflectance = c,
            Transparency = d,
            CanCollide = false,
            Locked = true,
            BrickColor = BrickColor.new(tostring(e)),
            Name = g,
            Size = h,
            Material = b
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            Create(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            Create(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (Create(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Mesh = {
        Create = function(a, b, c, d, e, g)
          a = a
          if a == "SpecialMesh" then
            Create(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshType = c
            Create(a)({
              Parent = b,
              Offset = e,
              Scale = g
            }).MeshId = d
          end
          return (Create(a)({
            Parent = b,
            Offset = e,
            Scale = g
          }))
        end
      },
      Weld = {
        Create = function(a, b, c, d, e)
          a = a
          return (Create("Weld")({
            Parent = a,
            Part0 = b,
            Part1 = c,
            C0 = d,
            C1 = e
          }))
        end
      },
      Sound = {
        Create = function(a, b, c, d)
          a = a
          coroutine.resume(coroutine.create(function()
            wait()
            Create("Sound")({
              Volume = va,
              Pitch = vb or 1,
              SoundId = vc,
              Parent = vd or workspace
            }):play()
            game:GetService("Debris"):AddItem(Create("Sound")({
              Volume = va,
              Pitch = vb or 1,
              SoundId = vc,
              Parent = vd or workspace
            }), 6)
          end))
        end
      },
      ParticleEmitter = {
        Create = function(a, b, c, d, e, g, h, j, k, l, m, o, p, n, r, s, t, u, y, z)
          a = a
          return (Create("ParticleEmitter")({
            Parent = a,
            Color = ColorSequence.new(b, c),
            LightEmission = d,
            Size = e,
            Texture = g,
            Transparency = h,
            ZOffset = j,
            Acceleration = k,
            Drag = l,
            LockedToPart = m,
            VelocityInheritance = o,
            EmissionDirection = p,
            Enabled = n,
            Lifetime = r,
            Rate = s,
            Rotation = t,
            RotSpeed = u,
            Speed = y,
            VelocitySpread = z
          }))
        end
      }
    }
    function RemoveOutlines(a)
      a = a
      a.TopSurface, a.BottomSurface, a.LeftSurface, a.RightSurface, a.FrontSurface, a.BackSurface = 10, 10, 10, 10, 10, 10
    end
    function CreatePart(a, b, c, d, e, g, h, j)
      a = a
      RemoveOutlines((Create("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      })))
      return (Create("Part")({
        formFactor = a,
        Parent = b,
        Reflectance = d,
        Transparency = e,
        CanCollide = false,
        Locked = true,
        BrickColor = BrickColor.new(tostring(g)),
        Name = h,
        Size = j,
        Material = c
      }))
    end
    function CreateMesh(a, b, c, d, e, g)
      a = a
      if a == "SpecialMesh" then
        Create(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshType = c
        Create(a)({
          Parent = b,
          Offset = e,
          Scale = g
        }).MeshId = d
      end
      return (Create(a)({
        Parent = b,
        Offset = e,
        Scale = g
      }))
    end
    function CreateWeld(a, b, c, d, e)
      a = a
      return (Create("Weld")({
        Parent = a,
        Part0 = b,
        Part1 = c,
        C0 = d,
        C1 = e
      }))
    end
    EffectModel = Instance.new("Model", game:service("Players").LocalPlayer.Character)
    Effects = {
      Block = {
        Create = function(a, b, c, d, e, g, h, j, k, l)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          if l ~= 1 then
          end
          if l == nil then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block1",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          elseif l == 2 then
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block2",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          else
            table.insert(Effects, {
              CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
              "Block3",
              k,
              g,
              h,
              j,
              (CFuncs.Mesh.Create("BlockMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
            })
          end
        end
      },
      Sphere = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Cylinder = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("CylinderMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "", "", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Wave = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g / 60,
            h / 60,
            j / 60,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(c / 60, d / 60, e / 60)))
          })
        end
      },
      Ring = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Break = {
        Create = function(a, b, c, d, e)
          a = a
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).Anchored = true
          CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame = b * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)),
            "Shatter",
            math.random(10, 50) / 1000,
            CFuncs.Part.Create(EffectModel, "Neon", 0, 0, a, "Effect", Vector3.new(0.5, 0.5, 0.5)).CFrame,
            math.random() - math.random(),
            0,
            math.random(50, 100) / 100
          })
        end
      },
      Spiral = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      },
      Push = {
        Create = function(a, b, c, d, e, g, h, j, k)
          a = a
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).Anchored = true
          CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()).CFrame = b
          game:GetService("Debris"):AddItem(CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), 10)
          table.insert(Effects, {
            CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()),
            "Cylinder",
            k,
            g,
            h,
            j,
            (CFuncs.Mesh.Create("SpecialMesh", CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, a, "Effect", Vector3.new()), "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(c, d, e)))
          })
        end
      }
    }
    function CreateSound(a, b, c, d)
      a = a
      coroutine.resume(coroutine.create(function()
        va = Instance.new("Sound", vb)
        va.Volume = vc
        va.Pitch = vd
        va.SoundId = "http://www.roblox.com/asset/?id=" .. ve
        swait()
        va:play()
        game:GetService("Debris"):AddItem(va, 10)
      end))
      return nil
    end
    chargeup = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Head)
    chargeup.SoundId = "http://www.roblox.com/asset/?id=527276541"
    chargeup.Volume = 10
    chargeup.Pitch = 1
    chargeup.Looped = true
    chargeup.TimePosition = 1
    meme = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Head)
    meme.SoundId = "http://www.roblox.com/asset/?id=291151190"
    meme.Volume = 10
    meme.Pitch = 1
    meme.Looped = true
    meme.TimePosition = 1
    Instance.new("Sound").Parent = game:service("Players").LocalPlayer.Character.Head
    Instance.new("Sound").Volume = 10
    Instance.new("Sound").Pitch = 1
    Instance.new("Sound").Looped = true
    Instance.new("Sound").Parent = game:service("Players").LocalPlayer.Character.Head
    Instance.new("Sound").Volume = 7
    Instance.new("Sound").Pitch = 1
    Instance.new("Sound").SoundId = "http://www.roblox.com/asset/?id=1087356234"
    Instance.new("Sound").Looped = true
    Cause_Im_having_a_good_time_having_a_good_time = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Head)
    Cause_Im_having_a_good_time_having_a_good_time.SoundId = "http://www.roblox.com/asset/?id=672104253"
    Cause_Im_having_a_good_time_having_a_good_time.Volume = 10
    Cause_Im_having_a_good_time_having_a_good_time.Pitch = 1
    Cause_Im_having_a_good_time_having_a_good_time.Looped = false
    Cause_Im_having_a_good_time_having_a_good_time.TimePosition = 35.3
    STHAP = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Head)
    STHAP.SoundId = "http://www.roblox.com/asset/?id=1591656314"
    STHAP.Volume = 10
    STHAP.Pitch = 1
    STHAP.Looped = false
    forevergone = Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso)
    forevergone.SoundId = "http://www.roblox.com/asset/?id=1286436928"
    forevergone.Volume = 10
    forevergone.Pitch = 1
    forevergone.Looped = true
    forevergone.TimePosition = 24
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso).Volume = 2.5
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso).SoundId = "rbxassetid://"
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso).Looped = true
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso).Pitch = 1
    Instance.new("Sound", game:service("Players").LocalPlayer.Character.Torso):Play()
    function HitboxFunction(a, b, c, d, e, g, h, j, k, l)
      a = a
      RemoveOutlines((Instance.new("Part", EffectModel)))
      Instance.new("Part", EffectModel).Size = Vector3.new(c, d, e)
      Instance.new("Part", EffectModel).CanCollide = false
      Instance.new("Part", EffectModel).Transparency = 1
      Instance.new("Part", EffectModel).Anchored = true
      Instance.new("Part", EffectModel).CFrame = a
      game:GetService("Debris"):AddItem(Instance.new("Part", EffectModel), b)
      MagniDamage(Instance.new("Part", EffectModel), g, h, j, k, l)
    end
    function GEtOuT()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://494811799"
      CreateSound("814652778", vc, 10, 1)
      CreateSound("537371462", vc, 10, 1)
      Instance.new("BodyVelocity", vd).Velocity = Vector3.new(0, 25, 0)
      Instance.new("BodyVelocity", vd).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      for fe = 0, 12, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        HitboxFunction(ve.CFrame, 0.01, 1, 1, 1, 7, 20, 99, 53, "Knockdown")
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, -0.1 + 0.1 * Cos(vj / 20)) * angles(Rad(0), Rad(0), Rad(0 - 255.45 * fe)), 0.3)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vj / 20), -0.3) * vk * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
      end
      Instance.new("BodyVelocity", vd):Destroy()
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      vl.JumpPower = 50
      va.WalkSpeed = 16
    end
    function GEtOuT2()
      attack = true
      va.WalkSpeed = 10
      vb.JumpPower = 0
      vc.Head.face.Texture = "rbxassetid://494811799"
      CreateSound("814652778", vd, 10, 1)
      CreateSound("537371462", vd, 10, 1)
      ve.Velocity = ve.CFrame.lookVector * 20
      for fd = 0, 12, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        ve.Velocity = ve.CFrame.lookVector * 50
        HitboxFunction(vg.CFrame, 0.01, 1, 1, 1, 7, 10, 50, 53, "Knockdown")
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, -0.1 + 0.1 * Cos(vk / 20)) * angles(Rad(90), Rad(0), Rad(0 - 255.45 * fd)), 0.3)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vk / 20), -0.3) * vl * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
      end
      vc.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      vb.JumpPower = 50
      va.WalkSpeed = 16
    end
    function Flight()
      attack = true
      va.Head.face.Texture = "rbxassetid://269748407"
      Instance.new("BodyVelocity", vb).Velocity = Vector3.new(0, 4, 0)
      Instance.new("BodyVelocity", vb).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      Instance.new("Attachment", vb).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vb).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vb).Attachment1, Instance.new("Trail", vb).Attachment0 = Instance.new("Attachment", vb), Instance.new("Attachment", vb)
      Instance.new("Trail", vb).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vb).Lifetime = 0.2
      Instance.new("Trail", vb).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        [15] = NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vb).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vb).LightEmission = 1
      Instance.new("Trail", vb).Enabled = true
      Instance.new("Attachment", vc).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vc).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vc).Attachment1, Instance.new("Trail", vc).Attachment0 = Instance.new("Attachment", vc), Instance.new("Attachment", vc)
      Instance.new("Trail", vc).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vc).Lifetime = 0.2
      Instance.new("Trail", vc).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vc).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vc).LightEmission = 1
      Instance.new("Trail", vc).Enabled = true
      Instance.new("Attachment", vd).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", vd).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", vd).Attachment1, Instance.new("Trail", vd).Attachment0 = Instance.new("Attachment", vd), Instance.new("Attachment", vd)
      Instance.new("Trail", vd).Texture = "rbxassetid://22636887"
      Instance.new("Trail", vd).Lifetime = 0.2
      Instance.new("Trail", vd).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", vd).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", vd).LightEmission = 1
      Instance.new("Trail", vd).Enabled = true
      Instance.new("Attachment", ve).Position = Vector3.new(0, 0.6, 0)
      Instance.new("Attachment", ve).Position = Vector3.new(0, -0.6, 0)
      Instance.new("Trail", ve).Attachment1, Instance.new("Trail", ve).Attachment0 = Instance.new("Attachment", ve), Instance.new("Attachment", ve)
      Instance.new("Trail", ve).Texture = "rbxassetid://22636887"
      Instance.new("Trail", ve).Lifetime = 0.2
      Instance.new("Trail", ve).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", ve).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", ve).LightEmission = 1
      Instance.new("Trail", ve).Enabled = true
      Instance.new("Attachment", Torso).Position = Vector3.new(0, 2, 0)
      Instance.new("Attachment", Torso).Position = Vector3.new(0, -2.5, 0)
      Instance.new("Trail", Torso).Attachment1, Instance.new("Trail", Torso).Attachment0 = Instance.new("Attachment", Torso), Instance.new("Attachment", Torso)
      Instance.new("Trail", Torso).Texture = "rbxassetid://22636887"
      Instance.new("Trail", Torso).Lifetime = 0.2
      Instance.new("Trail", Torso).Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0, 0),
        NumberSequenceKeypoint.new(1, 0, 0)
      })
      Instance.new("Trail", Torso).Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.16, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.32, Color3.new(0, 0, 1)),
        ColorSequenceKeypoint.new(0.48, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.64, Color3.new(1, 0, 0)),
        ColorSequenceKeypoint.new(0.8, Color3.new(1, 1, 1)),
        ColorSequenceKeypoint.new(0.96, Color3.new(0, 0, 1)),
        [21] = ColorSequenceKeypoint.new(1, Color3.new(1, 1, 1))
      })
      Instance.new("Trail", Torso).LightEmission = 1
      Instance.new("Trail", Torso).Enabled = false
      ragdoll(vg)
      wait(1)
      va.Head.face.Texture = "rbxassetid://249062487"
      CreateSound("948494432", vh, 10, 1)
      wait(2)
      va.Head.face.Texture = "rbxassetid://269748407"
      CreateSound("633394595", vh, 10, 1)
      wait(2)
      va.Head.face.Texture = "rbxassetid://494811799"
      STHAP:play()
      wait(11)
      forevergone:play()
    end
    function OBJECTION()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://55831869"
      CreateSound("330859085", vc, 10, 1)
      for fd = 0, 8, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(180), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Hello()
      attack = true
      va.WalkSpeed = 10
      vb.Head.face.Texture = "rbxassetid://334668738"
      CreateSound("855338765", vc, 10, 0.9)
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Victory()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://616284160"
      vc.Jump = true
      CreateSound("130834939", vd, 10, 1)
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-180), Rad(-25), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(-180), Rad(-25), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      vc.Jump = true
      for fd = 0, 3.7, 0.1 do
        swait()
        ve.C0 = clerp(ve.C0, vg * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vh / 20), 0.025 * Cos(vh / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(-40)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vh / 30), 0.025 * Cos(vh / 20)) * angles(Rad(180), Rad(20), Rad(-5)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function ShutTheHellUp()
      attack = true
      va.WalkSpeed = 2.01
      vb.Head.face.Texture = "rbxassetid://963148419"
      CreateSound("336377340", vc, 10, 1)
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 1.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.2) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(120), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(90), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-5)), 0.1)
      end
      va.WalkSpeed = 16
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
    end
    function SpinMeDad()
      attack = true
      va.WalkSpeed = 5
      vb.JumpPower = 175
      vc.Head.face.Texture = "rbxassetid://1223903433"
      CreateSound("145799973", vd, 10, 1)
      Instance.new("BodyVelocity", ve).Velocity = Vector3.new(0, 1.2, 0)
      Instance.new("BodyVelocity", ve).MaxForce = Vector3.new(10000000, 10000000, 10000000)
      for fe = 0, 60, 0.1 do
        HitboxFunction(vg.CFrame, 0.01, 1, 1, 1, 7, 5, 20, 53, "Knockdown")
        swait()
        CameraEnshaking(1, 1)
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0 - 255.45 * fe)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vk / 20), 0.025 * Cos(vk / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vk / 20), 0.025 * Cos(vk / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(0), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(0), Rad(0), Rad(-90)), 0.1)
      end
      va.WalkSpeed = 16
      Instance.new("BodyVelocity", ve):Destroy()
      vc.Head.face.Texture = "rbxassetid://620619801"
      vb.JumpPower = 50
      attack = false
    end
    function EndMySufferingV2()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://202210455"
      if math.random(1, 5) == 1 then
        meme.SoundId = "rbxassetid://295810519"
      end
      if math.random(1, 5) == 2 then
        meme.SoundId = "rbxassetid://1124778077"
      end
      if math.random(1, 5) == 3 then
        meme.SoundId = "rbxassetid://464157070"
      end
      if math.random(1, 5) == 4 then
        meme.SoundId = "rbxassetid://146334595"
      end
      if math.random(1, 5) == 5 then
        meme.SoundId = "rbxassetid://145536915"
      end
      meme:Play()
      vc:Play()
      vd.Rate = 70
      ve.Rate = 70
      vg.Rate = 70
      vh.Rate = 70
      for fe = 0, 50, 0.1 do
        swait()
        CameraEnshaking(1, 10)
        vc.Parent = vj
        meme.Parent = vj
        vk.C0 = clerp(vk.C0, vl * CF(0, 0, -0.1 + 0.1 * math.cos(vm / 20)) * angles(math.rad(15), math.rad(-10), math.rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * math.cos(vm / 20), 0.025 * math.cos(vm / 20)) * vo * angles(math.rad(-5), math.rad(0), math.rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * math.cos(vm / 20), 0.025 * math.cos(vm / 20)) * vp * angles(math.rad(-5), math.rad(0), math.rad(-20)), 0.15)
        RW.C0 = clerp(RW.C0, CFrame.new(1.1, 0.5 + 0.1 * math.sin(vm / 30), -0.6) * angles(math.rad(0), math.rad(10), math.rad(-110)), 0.1)
        LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5 + 0.1 * math.sin(vm / 30), 0.055 * math.cos(vm / 20)) * angles(math.rad(0), math.rad(-10), math.rad(-105)), 0.1)
      end
      vc:Stop()
      meme:Stop()
      vd.Rate = 0
      ve.Rate = 0
      vg.Rate = 0
      vh.Rate = 0
      vb.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function HELP()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://307972876"
      CreateSound("1123321019", vc, 10, 1)
      for fd = 0, 15, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("198462271", vc, 10, 1)
      for fd = 0, 8, 0.1 do
        vb.Head.face.Texture = "rbxassetid://341497730"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 8, 0.1 do
        vb.Head.face.Texture = "rbxassetid://341497730"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("948494432", vc, 10, 1)
      for fd = 0, 7.5, 0.1 do
        vb.Head.face.Texture = "rbxassetid://249062487"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("1542642349", vc, 10, 1)
      for fd = 0, 10, 0.1 do
        vb.Head.face.Texture = "rbxassetid://270636807"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.9) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("269597232", vc, 10, 1)
      for fd = 0, 6, 0.1 do
        vb.Head.face.Texture = "rbxassetid://265057155"
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.9) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(0.7, -0.11, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-0.7, -0.11, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-0.9, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Choose()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://374187112"
      CreateSound("130784263", vc, 10, 1)
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 5, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(-10)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(10)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function slap()
      attack = true
      va.WalkSpeed = 10
      CreateSound("146163534", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://293603561"
      game.Players.LocalPlayer.Character.Humanoid:TakeDamage(7)
      CameraEnshaking(1, 2)
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(119), Rad(45), Rad(50)), 0.1)
      end
      vc.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function MYSPAGHETTTTTTT()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("1282149571", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://1329282756"
      game.Players.LocalPlayer.Character.Humanoid:TakeDamage(10)
      CameraEnshaking(1, 2.2)
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(5)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(119), Rad(45), Rad(50)), 0.1)
      end
      for fd = 0, 5, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(110), Rad(0), Rad(0)), 0.1)
      end
      for fd = 0, 6, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(-10)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(35), Rad(0), Rad(10)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function dead()
      attack = true
      va.WalkSpeed = 0.2
      CreateSound("137225991", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://297512410"
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(90), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(180), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(270), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(90), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(180), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(270), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      for fd = 0, 1.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(90)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-90)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(140)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-140)), 0.1)
      end
      vc.Head.face.Texture = "rbxassetid://273309187"
      for fd = 0, 9, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -2.49) * angles(Rad(-90), Rad(90), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(30)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-30)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function hap()
      attack = true
      va.WalkSpeed = 0.1
      CreateSound("363808674", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://315792941"
      for fd = 0, 12, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("233168827", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://335761015"
      for fd = 0, 10, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.1)
      end
      CreateSound("363808674", vb, 10, 1)
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function HAAAAA()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://305068389"
      chargeup.Pitch = 1
      for fd = 0, 7, 0.1 do
        swait()
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 1 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 1 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      vb.Head.face.Texture = "rbxassetid://313921371"
      chargeup:play()
      for fd = 0, 30, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        chargeup.Parent = vj
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      chargeup.Pitch = 1.1
      chargeup.TimePosition = 1
      chargeup:play()
      vb.Head.face.Texture = "rbxassetid://304942859"
      for fd, fe in pairs(c:children()) do
        if fe.ClassName == "Part" then
          trazx:clone().Parent = fe
          trazx:clone().LightEmission = 1
          trazx:clone().Color = ColorSequence.new(Color3.new(0, 0.666666666666667, 1))
          trazx:clone().Rate = 15
          trazx:clone().Rotation = NumberRange.new(-5, 5)
          trazx:clone().Lifetime = NumberRange.new(1.5, 2)
          trazx:clone().Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0.1, 0),
            NumberSequenceKeypoint.new(1, 0, 0)
          })
          trazx:clone().Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1, 0),
            NumberSequenceKeypoint.new(0.135, 0, 0),
            NumberSequenceKeypoint.new(0.875, 0, 0),
            NumberSequenceKeypoint.new(1, 1, 0)
          })
          trazx:clone().Speed = NumberRange.new(0.5)
          trazx:clone().VelocitySpread = 360
          trazx:clone().VelocityInheritance = 0.5
          trazx:clone().ZOffset = 2
          trazx:clone().Acceleration = Vector3.new(0, 2.5, 0)
        end
      end
      trazx:clone().Parent = c.HumanoidRootPart
      trazx:clone().Texture = "rbxassetid://347730682"
      trazx:clone().LightEmission = 0.8
      trazx:clone().Color = ColorSequence.new(Color3.new(0, 0.666666666666667, 1))
      trazx:clone().Rate = 250
      trazx:clone().Rotation = NumberRange.new(-5, 5)
      trazx:clone().Lifetime = NumberRange.new(0.75)
      trazx:clone().Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 4.81, 0.875),
        NumberSequenceKeypoint.new(1, 2.13, 0.875)
      })
      trazx:clone().Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1, 0),
        NumberSequenceKeypoint.new(0.0399, 0.85, 0),
        NumberSequenceKeypoint.new(0.394, 0.9, 0),
        NumberSequenceKeypoint.new(0.699, 1, 0),
        NumberSequenceKeypoint.new(1, 1, 0)
      })
      trazx:clone().Speed = NumberRange.new(15)
      trazx:clone().VelocitySpread = 360
      trazx:clone().VelocityInheritance = 0.5
      trazx:clone().ZOffset = 3.5
      trazx:clone().Acceleration = Vector3.new(0, 25, 0)
      for fe = 0, 35, 0.1 do
        swait()
        vk.Parent = vj
        CameraEnshaking(1, 3)
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      chargeup.Pitch = 1.3
      chargeup.TimePosition = 1
      chargeup:play()
      trazx:clone():Destroy()
      trazx:clone():Destroy()
      vb.Head.face.Texture = "rbxassetid://280233855"
      trazx:clone().Parent = c.HumanoidRootPart
      trazx:clone().Texture = "rbxassetid://347730682"
      trazx:clone().LightEmission = 0.8
      trazx:clone().Color = ColorSequence.new(Color3.new(1, 0, 0))
      trazx:clone().Rate = 250
      trazx:clone().Rotation = NumberRange.new(-5, 5)
      trazx:clone().Lifetime = NumberRange.new(0.3)
      trazx:clone().Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 8, 0.875),
        NumberSequenceKeypoint.new(1, 10, 0.875)
      })
      trazx:clone().Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 1, 0),
        NumberSequenceKeypoint.new(0.0399, 0.531, 0),
        NumberSequenceKeypoint.new(0.394, 0.906, 0),
        NumberSequenceKeypoint.new(0.699, 1, 0),
        NumberSequenceKeypoint.new(1, 1, 0)
      })
      for fg = 0, 32, 0.1 do
        swait()
        CameraEnshaking(1, 5)
        chargeup.Parent = vj
        game.Players.LocalPlayer.Character.Humanoid:TakeDamage(0.12)
        vc.C0 = clerp(vc.C0, vd * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-20), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.4, 5E-10 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(150), Rad(0), Rad(0)), 0.1)
      end
      chargeup:stop()
      CreateSound("681582832", vj, 10, 1)
      game.Players.LocalPlayer.Character:BreakJoints()
      Instance.new("Explosion", workspace).Position = vl.Position
      Instance.new("Explosion", workspace).BlastPressure = 9
      Instance.new("Explosion", workspace).BlastRadius = 30
      Instance.new("Explosion", workspace).ExplosionType = 0
      attack = false
      va.WalkSpeed = 16
      vb.Head.face.Texture = "rbxassetid://295197013"
      trazx:clone():Destroy()
      CameraEnshaking(4, 30)
      error("WARNING, TO MUCH ENERGY.")
    end
    function NEN()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("230292011", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://705269463"
      for fd = 0, 4, 0.1 do
        swait()
        CameraEnshaking(1, 3)
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function FLYSKYHIGH()
      attack = true
      timetofly = false
      va.WalkSpeed = 0.05
      vb.Head.face.Texture = "rbxassetid://705269463"
      Cause_Im_having_a_good_time_having_a_good_time:Play()
      Cause_Im_having_a_good_time_having_a_good_time.TimePosition = 35.3
      vc.JumpPower = 0
      for fd = 0, 300, 0.1 do
        swait()
        CameraEnshaking(1, 7)
        HitboxFunction(vd.CFrame, 0.01, 1, 1, 1, 7, 75, 500, 100, "Knockdown")
        Cause_Im_having_a_good_time_having_a_good_time.Parent = ve
        vg.Velocity = vg.CFrame.lookVector * 225
        vh.C0 = clerp(vh.C0, vj * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vk / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0 - 255.45 * fd)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vk / 20)) * vm * angles(Rad(-2.5), Rad(0), Rad(0 - 255.45 * fd)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(-75), Rad(0), Rad(0)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vk / 30), 0.025 * Cos(vk / 20)) * angles(Rad(-75), Rad(0), Rad(0)), 0.1)
      end
      Cause_Im_having_a_good_time_having_a_good_time:Stop()
      attack = false
      vc.JumpPower = 50
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
      wait(45)
      timetofly = true
      warn("You can FLY SKY HIGH Now! Go Nuts!")
    end
    function highnoon()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("495316660", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://155195214"
      CameraEnshaking(2, 4)
      Instance.new("Part", vd).Name = "Blob"
      Instance.new("Part", vd).CanCollide = false
      Instance.new("Part", vd).BrickColor = BrickColor.new("Really black")
      Instance.new("Part", vd).Transparency = 0
      Instance.new("Part", vd).Material = "Plastic"
      Instance.new("Part", vd).Size = Vector3.new(1, 1, 2)
      Instance.new("Part", vd).TopSurface = Enum.SurfaceType.Smooth
      Instance.new("Part", vd).BottomSurface = Enum.SurfaceType.Smooth
      Instance.new("Weld", (Instance.new("Part", vd))).Part1, Instance.new("Weld", (Instance.new("Part", vd))).Part0 = Instance.new("Part", vd), ve
      Instance.new("Weld", (Instance.new("Part", vd))).C1 = CFrame.new(0, -0.4, -1.6) * angles(Rad(180), Rad(0), Rad(180))
      Instance.new("Weld", (Instance.new("Part", vd))).C0 = CFrame.Angles(math.rad(-90), 0, 0)
      Instance.new("SpecialMesh").Parent = Instance.new("Part", vd)
      Instance.new("SpecialMesh").MeshId = "http://www.roblox.com/asset/?id=432256490"
      Instance.new("SpecialMesh").TextureId = "http://www.roblox.com/asset/?id=432256526"
      Instance.new("SpecialMesh").Scale = Vector3.new(0.002, 0.002, 0.002)
      for fh = 0, 7.75, 0.1 do
        swait()
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(90)), 0.2)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(-0.6), Rad(180)), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(-45), Rad(-0.6), Rad(136 - 4.5 * Sin(vj / 20))), 0.2)
      end
      for fh = 0, 16.5, 0.1 do
        swait()
        vg.C0 = clerp(vg.C0, vh * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(90)), 0.2)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vj / 20)) * vk * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vj / 20)) * vl * angles(Rad(-2.5), Rad(0), Rad(0)), 0.2)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(0), Rad(-0.6), Rad(90)), 0.2)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vj / 30), 0.025 * Cos(vj / 20)) * angles(Rad(-45), Rad(-0.6), Rad(136 - 4.5 * Sin(vj / 20))), 0.2)
      end
      Instance.new("Part", vd).Transparency = 1
      Instance.new("Part", vd):Destroy()
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function somuchcancerwhy()
      attack = true
      va.WalkSpeed = 0.1
      vb.Head.face.Texture = "rbxassetid://315074049"
      if math.random(1, 13) == 1 then
        vc.SoundId = "rbxassetid://295810519"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 2 then
        vc.SoundId = "rbxassetid://488472970"
        vc.TimePosition = 2
      end
      if math.random(1, 13) == 3 then
        vc.SoundId = "rbxassetid://917045199"
        vc.TimePosition = 3
      end
      if math.random(1, 13) == 4 then
        vc.SoundId = "rbxassetid://324205173"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 5 then
        vc.SoundId = "rbxassetid://376134741"
        vc.TimePosition = 8
      end
      if math.random(1, 13) == 6 then
        vc.SoundId = "rbxassetid://164147183"
        vc.TimePosition = 0
      end
      if math.random(1, 13) == 7 then
        vc.SoundId = "rbxassetid://825526716"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 8 then
        vc.SoundId = "rbxassetid://185460366"
        vc.TimePosition = 0
      end
      if math.random(1, 13) == 9 then
        vc.SoundId = "rbxassetid://273319633"
        vc.TimePosition = 1
      end
      if math.random(1, 13) == 10 then
        vc.SoundId = "rbxassetid://506212392"
        vc.TimePosition = 2
      end
      if math.random(1, 13) == 11 then
        vc.SoundId = "rbxassetid://708297448"
        vc.TimePosition = 4
      end
      if math.random(1, 13) == 12 then
        vc.SoundId = "rbxassetid://497199103"
        vc.TimePosition = 9
      end
      if math.random(1, 13) == 13 then
        vc.SoundId = "rbxassetid://152833989"
        vc.TimePosition = 1
      end
      vc:Play()
      for fe = 0, 100, 0.1 do
        swait()
        CameraEnshaking(2, 3)
        vc.Parent = vd
      end
      attack = false
      vc:Stop()
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function WRY()
      attack = true
      va.WalkSpeed = 0.3
      CreateSound("794081034", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://396389196"
      for fd = 0, 2, 0.1 do
        swait()
        CameraEnshaking(1, 2)
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(140), Rad(60)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(-140), Rad(-60)), 0.1)
      end
      for fd = 0, 14.7, 0.1 do
        swait()
        CameraEnshaking(1, 3)
        vd.C0 = clerp(vd.C0, ve * CF(0, 1, -0.9) * angles(Rad(-75), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1.1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-70)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1.1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(70)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(45), Rad(0), Rad(40)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(45), Rad(0), Rad(-40)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function BOI()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("390901873", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://282463320"
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(50), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(-50), Rad(-90)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(140), Rad(60)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(-140), Rad(-60)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function WhatHuh()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("130766865", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://276732672"
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 6.7, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 8.1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 1, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(120)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-120)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function NothingPersonal()
      if va.Target.Parent ~= vb and va.Target.Parent.Parent ~= vb and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
        if (va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso")) ~= nil and va.Target.Parent:FindFirstChildOfClass("Humanoid") ~= nil then
          attack = true
          vc.CFrame = va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").CFrame * CFrame.new(-1, 0, 3)
          va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").Anchored = true
          vd.WalkSpeed = 0
          ve.Head.face.Texture = "rbxassetid://40770311"
          CreateSound("1255922819", vg, 10, 1)
          CameraEnshaking(2, 4)
        end
        wait(3.5)
        for fj = 0, 9, 0.1 do
          swait()
          for fo = 1, 2 do
            HitboxFunction(vh.CFrame, 0.01, 1, 1, 1, 7, 1, 10, 53, "Knockdown")
            CameraEnshaking(1, 7)
            Effects.Sphere.Create(BrickColor.new("Persimmon"), va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").CFrame * CFrame.new(math.random(-200, 200) / 100, math.random(-300, 200) / 100, math.random(-100, 100) / 100), 1, 1, 1, 15, 15, 15, 0.2)
          end
        end
        wait(0.5)
        va.Target.Parent:FindFirstChild("Torso") or va.Target.Parent:FindFirstChild("UpperTorso").Anchored = false
        attack = false
        ve.Head.face.Texture = "rbxassetid://620619801"
        vd.WalkSpeed = 16
      end
    end
    function VeryMuchWorrying()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://111523405"
      CreateSound("1395854043", vc, 10, 1)
      for fd = 0, 14, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-145)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.9 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(145)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function Ashes()
      attack = true
      va.WalkSpeed = 1.01
      vb.Head.face.Texture = "rbxassetid://360687027"
      CreateSound("290084602", vc, 10, 1)
      for fd = 0, 6.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.1 + 0.1 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(145)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-145)), 0.1)
      end
      for fd = 0, 6.2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, -0.1 + 0.1 * Cos(vg / 20)) * angles(Rad(20), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vh * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos(vg / 20), 0.025 * Cos(vg / 20)) * vj * angles(Rad(-5), Rad(0), Rad(-20)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-30), Rad(0), Rad(15)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-30), Rad(0), Rad(-15)), 0.1)
      end
      attack = false
      vb.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function AnotherOne()
      attack = true
      va.WalkSpeed = 1.01
      swait(165)
      repeat
        swait()
        vd.Head.face.Texture = "rbxassetid://582931093"
        CameraEnshaking(1, 10)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(ve / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(ve / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(90)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.9 + 0.05 * Sin(ve / 30), 0.025 * Cos(ve / 20)) * angles(Rad(0), Rad(0), Rad(-90)), 0.1)
        vc.CFrame = vc.CFrame * CF(0, 1, 0)
        swait()
        vc.CFrame = vc.CFrame
      until CreateSound("1205111204", vb, 10, 1).Playing == false
      vd.Head.face.Texture = "rbxassetid://620619801"
      attack = false
      va.WalkSpeed = 16
    end
    function Dance()
      attack = true
      va.WalkSpeed = 1.01
      CreateSound("838766490", vb, 10, 1)
      vc.Head.face.Texture = "rbxassetid://258591579"
      for fd = 0, 2, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(0), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 4, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(-180)), 0.1)
      end
      for fd = 0, 3, 0.1 do
        swait()
        vd.C0 = clerp(vd.C0, ve * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vg / 20)) * vh * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vg / 20)) * vj * angles(Rad(-2.5), Rad(0), Rad(-30)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(50), Rad(0), Rad(180)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin(vg / 30), 0.025 * Cos(vg / 20)) * angles(Rad(-50), Rad(0), Rad(-180)), 0.1)
      end
      attack = false
      vc.Head.face.Texture = "rbxassetid://620619801"
      va.WalkSpeed = 16
    end
    function kyu_will_break_your_neck_asdf_longest_function_name_ever_xd()
      attack = true
      va.Head.face.Texture = "rbxassetid://266304560"
      for fd = 0, 6, 0.1 do
        swait()
        vb.C0 = clerp(vb.C0, vc * CF(0, 0, 0) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vd / 20)) * ve * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vd / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(vd / 30), 0.2 * Cos(vd / 20)) * angles(Rad(170), Rad(0), Rad(-15)), 0.1)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.8 + 0.05 * Sin(vd / 30), -0.025 * Cos(vd / 20)) * angles(Rad(140), Rad(0), Rad(15)), 0.1)
      end
      CreateSound("1093102664", vh, 10, 1)
      CameraEnshaking(3, 8)
      for fd = 0, 2, 0.1 do
        swait()
        vb.C0 = clerp(vb.C0, vc * CF(0, 0, 0) * angles(Rad(5), Rad(0), Rad(0)), 0.15)
        RH.C0 = clerp(RH.C0, CF(1, -1, 0.025 * Cos(vd / 20)) * ve * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        LH.C0 = clerp(LH.C0, CF(-1, -1, 0.025 * Cos(vd / 20)) * vg * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
        RW.C0 = clerp(RW.C0, CF(1.3, 0.9 + 0.05 * Sin(vd / 30), 0.2 * Cos(vd / 20)) * angles(Rad(200), Rad(0), Rad(-40)), 0.4)
        LW.C0 = clerp(LW.C0, CF(-1.3, 0.8 + 0.05 * Sin(vd / 30), -0.025 * Cos(vd / 20)) * angles(Rad(40), Rad(0), Rad(40)), 0.4)
      end
      va.Head.face.Texture = "rbxassetid://30128383"
      vj.MaxHealth = 0
      ragdoll(vk)
      CreateSound("534269232", vh, 5, 1)
      error("Seems like you just died.")
    end
    MoreTaunts = false
    game:service("Players").LocalPlayer:GetMouse().KeyDown:connect(function(a)
      a = a
      if attack == false and MoreTaunts == false then
        if a == "q" then
          GEtOuT()
        elseif a == "e" then
          GEtOuT2()
        elseif a == "x" then
          OBJECTION()
        elseif a == "n" then
          BOI()
        elseif a == "u" then
          Victory()
        elseif a == "3" then
          hap()
        elseif a == "6" then
          Flight()
        elseif a == "9" and timetofly then
          FLYSKYHIGH()
        elseif a == "9" then
          if math.random(1, 10) == 1 then
            warn("This has a Cooldown, Please wait. :>")
          end
          if math.random(1, 10) == 2 then
            warn("You can't Fly All day, you know.")
          end
          if math.random(1, 10) == 3 then
            warn("Calm down there.")
          end
          if math.random(1, 10) == 4 then
            warn("Take a Break.")
          end
          if math.random(1, 10) == 5 then
            warn("*Elevator Music plays in the backround*")
          end
          if math.random(1, 10) == 6 then
            warn("I know, You want to FLY SKY HIGH, but wait a little bit.")
          end
          if math.random(1, 10) == 7 then
            warn("Can you wait a LITTLE Longer?")
          end
          if math.random(1, 10) == 8 then
            warn("Like a tiger defying the laws of gravity...")
          end
          if math.random(1, 10) == 9 then
            warn("DON'T STOP ME NNNNNOOOOOOOOWWWW")
          end
          if math.random(1, 10) == 10 then
            warn("Oh, I'm burnin' through the sky, Yeah!")
          end
        elseif a == "k" then
          Hello()
        elseif a == "5" then
          HAAAAA()
        elseif a == "4" then
          Dance()
        elseif a == "1" then
          HELP()
        elseif a == "2" then
          dead()
        elseif a == "j" then
          WhatHuh()
        elseif a == "l" then
          ShutTheHellUp()
        elseif a == "c" then
          Choose()
        elseif a == "r" then
          MYSPAGHETTTTTTT()
        elseif a == "t" then
          SpinMeDad()
        elseif a == "y" then
          EndMySufferingV2()
        elseif a == "f" then
          NEN()
        elseif a == "z" then
          NothingPersonal()
        elseif a == "7" then
          somuchcancerwhy()
        elseif a == "8" then
          highnoon()
        elseif a == "v" then
          VeryMuchWorrying()
        elseif a == "b" then
          Ashes()
        elseif a == "p" then
          kyu_will_break_your_neck_asdf_longest_function_name_ever_xd()
        elseif a == "g" then
          AnotherOne()
        elseif a == "h" then
          slap()
        elseif a == "m" then
          WRY()
        end
      end
    end)
    while jumping do
      game.Players.localPlayer.Character.Humanoid.Jump = true
      wait(0.9)
    end
    game:service("Players").LocalPlayer.Character.Humanoid.Animator.Parent = nil
    while true do
      swait()
      hitfloor, posfloor = rayCast(game:service("Players").LocalPlayer.Character.HumanoidRootPart.Position, CFrame.new(game:service("Players").LocalPlayer.Character.HumanoidRootPart.Position, game:service("Players").LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4, game:service("Players").LocalPlayer.Character)
      if false ~= true then
      end
      if false == false then
        if attack == false then
        else
        end
        if 1 < game:service("Players").LocalPlayer.Character.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Jump"
          if attack == false then
            game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(10), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos((0 + 1) / 20), -0.3) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
            RH.C0 = clerp(RH.C0, CF(1, -1, 0.3) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
          end
        elseif -1 > game:service("Players").LocalPlayer.Character.HumanoidRootPart.Velocity.y and hitfloor == nil then
          Anim = "Fall"
          if attack == false then
            game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(-5), Rad(0), Rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5, 0) * angles(Rad(30), Rad(0), Rad(20)), 0.3)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5, 0) * angles(Rad(-20), Rad(0), Rad(-30)), 0.3)
            LH.C0 = clerp(LH.C0, CF(-1, -0.4 - 0.1 * Cos((0 + 1) / 20), -0.6) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-5), Rad(0), Rad(20)), 0.15)
            RH.C0 = clerp(RH.C0, CF(1, -0.3 - 0.1 * Cos((0 + 1) / 20), -0.6) * angles(Rad(0), Rad(90), Rad(-20)), 0.3)
          end
        elseif game:service("Players").LocalPlayer.Character.HumanoidRootPart.Velocity * Vector3.new(1, 0, 1).magnitude < 1 and hitfloor ~= nil then
          Anim = "Idle"
          if attack == false then
            game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.1 + 0.1 * Cos((0 + 1) / 20)) * angles(Rad(0), Rad(0), Rad(0)), 0.15)
            RH.C0 = clerp(RH.C0, CF(1, -0.9 - 0.1 * Cos((0 + 1) / 20), 0.025 * Cos((0 + 1) / 20)) * CFrame.fromEulerAnglesXYZ(0, 1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            LH.C0 = clerp(LH.C0, CF(-1, -0.9 - 0.1 * Cos((0 + 1) / 20), 0.025 * Cos((0 + 1) / 20)) * CFrame.fromEulerAnglesXYZ(0, -1.6, 0) * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(30 * Cos((0 + 1) / 20)), Rad(0), Rad(5)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(30 * Cos((0 + 1) / 20)), Rad(0), Rad(-5)), 0.1)
          end
        elseif game:service("Players").LocalPlayer.Character.Torso.Velocity.magnitude < 50 and hitfloor ~= nil then
          Anim = "Walk"
          if attack == false then
            game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = clerp(game:service("Players").LocalPlayer.Character.HumanoidRootPart.RootJoint.C0, CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14) * CF(0, 0, -0.175 + 0.025 * Cos((0 + 1) / 3.5) + -Sin((0 + 1) / 3.5) / 7) * angles(Rad(9 - 2.5 * Cos((0 + 1) / 3.5)), Rad(0), Rad(10 * Cos((0 + 1) / 7))), 0.15)
            RH.C0 = clerp(RH.C0, CFrame.new(1, -0.925 - 0.5 * math.cos((0 + 1) / 7) / 2, 0.5 * math.cos((0 + 1) / 7) / 2) * angles(math.rad(-15 - 35 * math.cos((0 + 1) / 7)) + -math.sin((0 + 1) / 7) / 2.5, math.rad(90 - 2 * math.cos((0 + 1) / 7)), math.rad(0)) * angles(math.rad(0 + 2.5 * math.cos((0 + 1) / 7)), math.rad(0), math.rad(0)), 0.3)
            LH.C0 = clerp(LH.C0, CFrame.new(-1, -0.925 + 0.5 * math.cos((0 + 1) / 7) / 2, -0.5 * math.cos((0 + 1) / 7) / 2) * angles(math.rad(-15 + 35 * math.cos((0 + 1) / 7)) + math.sin((0 + 1) / 7) / 2.5, math.rad(-90 - 2 * math.cos((0 + 1) / 7)), math.rad(0)) * angles(math.rad(0 - 2.5 * math.cos((0 + 1) / 7)), math.rad(0), math.rad(0)), 0.3)
            RW.C0 = clerp(RW.C0, CF(1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(70) * Cos((0 + 1) / 7), Rad(0), Rad(5)), 0.1)
            LW.C0 = clerp(LW.C0, CF(-1.5, 0.5 + 0.05 * Sin((0 + 1) / 30), 0.025 * Cos((0 + 1) / 20)) * angles(Rad(-70) * Cos((0 + 1) / 7), Rad(0), Rad(-5)), 0.1)
          end
        end
      end
      if 0 < #Effects then
        for fK = 1, #Effects do
          if Effects[fK] ~= nil and Effects[fK] ~= nil then
            if 1 >= Effects[fK][1].Transparency then
              if Effects[fK][2] == "Block1" then
                Effects[fK][1].CFrame = Effects[fK][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
                Effects[fK][1].Mesh.Scale = Effects[fK][1].Mesh.Scale + Vector3.new(Effects[fK][4], Effects[fK][5], Effects[fK][6])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Block2" then
                Effects[fK][1].CFrame = Effects[fK][1].CFrame + Vector3.new(0, 0, 0)
                Effects[fK][7].Scale = Effects[fK][7].Scale + Vector3.new(Effects[fK][4], Effects[fK][5], Effects[fK][6])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Block3" then
                Effects[fK][1].CFrame = Effects[fK][1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
                Effects[fK][7].Scale = Effects[fK][7].Scale + Vector3.new(Effects[fK][4], Effects[fK][5], Effects[fK][6])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Cylinder" then
                Effects[fK][1].Mesh.Scale = Effects[fK][1].Mesh.Scale + Vector3.new(Effects[fK][4], Effects[fK][5], Effects[fK][6])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Blood" then
                Effects[fK][1].CFrame = Effects[fK][1].CFrame * Vector3.new(0, 0.5, 0)
                Effects[fK][7].Scale = Effects[fK][7].Scale + Vector3.new(Effects[fK][4], Effects[fK][5], Effects[fK][6])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Elec" then
                Effects[fK][1].Mesh.Scale = Effects[fK][1].Mesh.Scale + Vector3.new(Effects[fK][7], Effects[fK][8], Effects[fK][9])
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Disappear" then
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
              elseif Effects[fK][2] == "Shatter" then
                Effects[fK][1].Transparency = Effects[fK][1].Transparency + Effects[fK][3]
                Effects[fK][4] = Effects[fK][4] * CFrame.new(0, Effects[fK][7], 0)
                Effects[fK][1].CFrame = Effects[fK][4] * CFrame.fromEulerAnglesXYZ(Effects[fK][6], 0, 0)
                Effects[fK][6] = Effects[fK][6] + Effects[fK][5]
              end
            else
              Effects[fK][1].Parent = nil
              table.remove(Effects, fK)
            end
          end
        end
      end
    end
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Anim Scripts"):NewSection("Other Scripts | Reanimation Scripts"):NewButton("Zen", "Zen", function()
    spawn(function()
      char = game.Players.LocalPlayer.Character
      Run = game:GetService("RunService")
      char.Animate:Destroy()
      game:GetService("RunService").Stepped:Connect(function(a)
        a = a
        va.C0 = va.C0:Lerp(vb * CFrame.new(0, 0.2105 * math.cos(time()), 0) * CFrame.Angles(math.rad(15 * math.sin(time())), math.rad(10 * math.sin(time())), math.rad(50 * math.sin(time()))), 0.1)
        vc.C0 = vc.C0:Lerp(vd * CFrame.new(0, 0.2105 * math.cos(time()), 0) * CFrame.Angles(math.rad(15 * math.sin(time())), math.rad(-10 * math.sin(time())), math.rad(-50 * math.sin(time()))), 0.1)
        ve.C0 = ve.C0:Lerp(vg * CFrame.new(0, 0, 1.5) * CFrame.new(0 * math.cos(time()), 0 * math.cos(time()), 0.8 * math.sin(time())) * CFrame.Angles(math.rad(28.75 * math.cos(time())), math.rad(10 * math.cos(time())), math.rad(0 * math.cos(time()))), 0.1)
        vh.C0 = vh.C0:Lerp(vj * CFrame.new(-0.1 * math.cos(time()), -0.08755 * math.cos(time()), 0) * CFrame.Angles(0, 0, math.rad(57 * math.cos(time()))), 0.1)
        vk.C0 = vk.C0:Lerp(vl * CFrame.new(-0.1 * math.cos(time()), -0.08755 * math.cos(time()), 0) * CFrame.Angles(0, 0, math.rad(-30 * math.cos(time()))), 0.1)
      end)
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Anim Scripts"):NewSection("Other Scripts | Reanimation Scripts"):NewButton("Krystal", "Krystal", function()
    va = game:GetService("Players").LocalPlayer
    Character = va.Character
    hum = Character.Humanoid
    LeftArm = Character["Left Arm"]
    LeftLeg = Character["Left Leg"]
    RightArm = Character["Right Arm"]
    RightLeg = Character["Right Leg"]
    Root = Character.HumanoidRootPart
    Head = Character.Head
    Torso = Character.Torso
    mouse = va:GetMouse()
    walking = false
    jumping = false
    attacking = false
    firsttime = false
    tauntdebounce = false
    position = nil
    MseGuide = true
    running = false
    settime = 0
    sine = 0
    t = 0
    ws = 34
    change = 1
    combo1 = true
    dancing = false
    equip = false
    dgs = 75
    combo2 = false
    switch1 = true
    switch2 = false
    firsttime2 = false
    combo3 = false
    gunallowance = false
    shooting = false
    RunSrv = game:GetService("RunService")
    RenderStepped = game:GetService("RunService").RenderStepped
    removeuseless = game:GetService("Debris")
    screenGui = Instance.new("ScreenGui")
    screenGui.Parent = script.Parent
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = Root
    Instance.new("ManualWeld").Part0 = Root
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightArm
    Instance.new("ManualWeld").Part0 = RightArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftArm
    Instance.new("ManualWeld").Part0 = LeftArm
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = RightLeg
    Instance.new("ManualWeld").Part0 = RightLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    Instance.new("ManualWeld").Parent = LeftLeg
    Instance.new("ManualWeld").Part0 = LeftLeg
    Instance.new("ManualWeld").Part1 = Torso
    Instance.new("ManualWeld").C0 = CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
    function MAKETRAIL(a, b, c, d, e)
      a = a
      A = Instance.new("Attachment", a)
      A.Position = b
      A.Name = "A"
      B = Instance.new("Attachment", a)
      B.Position = c
      B.Name = "B"
      tr1 = Instance.new("Trail", a)
      tr1.Attachment0 = A
      tr1.Attachment1 = B
      tr1.Enabled = true
      tr1.Lifetime = d
      tr1.TextureMode = "Static"
      tr1.LightInfluence = 0
      tr1.Color = e
      tr1.Transparency = NumberSequence.new(0, 1)
    end
    introsound = Instance.new("Sound", Head)
    introsound.SoundId = "rbxassetid://236146895"
    introsound.Volume = 8
    introsound:Play()
    for fm, fo in pairs(Character:GetChildren()) do
      if fo.ClassName == "Shirt Graphic" then
        fo:Remove()
      end
    end
    coroutine.wrap(function()
      while wait() do
        hum.WalkSpeed = ws
        LeftArm.Transparency = 1
        RightArm.Transparency = 1
        Head.Transparency = 1
        Torso.Transparency = 1
        LeftLeg.Transparency = 1
        RightLeg.Transparency = 1
      end
    end)()
    godmode = coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe:IsA("BasePart") and fe ~= Root then
          fe.Anchored = false
        end
        while true do
          hum.MaxHealth = math.huge
          wait(1E-07)
          hum.Health = math.huge
          wait()
        end
      end
    end)
    godmode()
    ff = Instance.new("ForceField", Character)
    ff.Visible = false
    coroutine.wrap(function()
      for fd, fe in pairs(Character:GetChildren()) do
        if fe.Name == "Animate" then
          fe:Remove()
        end
      end
    end)()
    function damagealll(a, b)
      a = a
      for fh, fj in pairs(workspace:GetChildren()) do
        if fj ~= Character and fj:FindFirstChildOfClass("Humanoid") then
        end
        if fj:FindFirstChild("UpperTorso") then
          if fj:FindFirstChild("Torso") then
            if a > fj.Torso.Position - b.magnitude then
              table.insert({}, fj)
            end
          elseif fj:FindFirstChild("UpperTorso") and a > fj.UpperTorso.Position - b.magnitude then
            table.insert({}, fj)
          end
        end
      end
      return {}
    end
    ArtificialHB = Instance.new("BindableEvent", script)
    ArtificialHB.Name = "Heartbeat"
    script:WaitForChild("Heartbeat")
    frame = 0.0166666666666667
    tf = 0
    allowframeloss = false
    tossremainder = false
    lastframe = tick()
    script.Heartbeat:Fire()
    game:GetService("RunService").Heartbeat:connect(function(a, b)
      a = a
      tf = tf + a
      if tf >= frame then
        if allowframeloss then
          script.Heartbeat:Fire()
          lastframe = tick()
        else
          for fg = 1, math.floor(tf / frame) do
            script.Heartbeat:Fire()
          end
          lastframe = tick()
        end
        if tossremainder then
          tf = 0
        else
          tf = tf - frame * math.floor(tf / frame)
        end
      end
    end)
    function swait(a)
      a = a
      if a ~= 0 then
      end
      if a == nil then
        game:service("RunService").Stepped:wait(0)
      else
        for fe = 0, a do
          game:service("RunService").Stepped:wait(0)
        end
      end
    end
    do return end
    while true do
      repeat
      until Character:GetChildren():IsA("Accessory")
    end
    for fm, fo in pairs(Character:GetChildren()) do
      if fo:IsA("Decal") then
        fo:Remove()
      end
    end
    intro = true
    ws = 0
    for fm, fo in pairs(Character:GetDescendants()) do
      if fo:IsA("Part") and fo.Name ~= "mbigf" then
        fo.Transparency = 1
      end
    end
    for fm = 1, 60 do
      swait()
    end
    wait(0.25)
    for fm, fo in pairs(Character:GetDescendants()) do
      if fo:IsA("Part") and fo.Name ~= "mbigf" and fo.Name ~= "HumanoidRootPart" then
        fo.Transparency = 0
      end
    end
    for fm = 1, 50 do
      swait()
    end
    zmc = 0
    for fm = 1, 29 do
      zmc = zmc + 2
      swait()
    end
    ws = 14
    function SOUND(a, b, c, d, e)
      a = a
      so = Instance.new("Sound")
      so.Parent = a
      so.SoundId = "rbxassetid://" .. b
      so.Volume = c
      so.Looped = d
      so:Play()
      removeuseless:AddItem(so, e)
    end
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "k" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          jam = Instance.new("Sound", Torso)
          jam.SoundId = "rbxassetid://665751753"
          jam.Volume = 8
          jam.Looped = true
          jam.TimePosition = 22.3
          jam:Play()
          lol90 = 0
          coroutine.wrap(function()
            while dancing do
              lol90 = lol90 + 11
              va.C0 = va.C0:Lerp(CFrame.new(1 * math.sin(sine / 10), 0.1 + 0.8 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 8)), math.rad(8 * math.sin(sine / 7))), 0.25)
              va.C1 = va.C1:lerp(CFrame.new(0 * math.sin(sine / 14), 0, 0) * CFrame.Angles(math.rad(0), math.rad(lol90), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(-5 * math.sin(sine / 3)), math.rad(-6 * math.sin(sine / 3))), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(-1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(5 * math.sin(sine / 3)), math.rad(6 * math.sin(sine / 3))), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10 + 5 * math.sin(sine / 3))), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10 - 5 * math.sin(sine / 3))), 0.25)
              swait()
            end
            ws = 14
            jam:Remove()
            va.C1 = CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "h" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          jellyfishjam = Instance.new("Sound", Torso)
          jellyfishjam.SoundId = "rbxassetid://840189092"
          jellyfishjam.Volume = 8
          jellyfishjam.Looped = true
          jellyfishjam.TimePosition = 14.8
          jellyfishjam:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(0.5, -0.4 + 0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(20)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(0.25, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-35)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.31, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(14)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(0, -0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(0)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.25, 0.7, 1.5) * CFrame.Angles(math.rad(72), math.rad(25), math.rad(-2)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(-0.5, -0.4 + 0.1 * math.sin(sine / 4), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(-20)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.25, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(35)), 0.25)
                swait()
              end
              for fd = 1, 15 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:Lerp(CFrame.new(-0.5, -0.1, 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 8)), math.rad(0)), 0.25)
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(-50 - 3 * math.sin(sine / 12)), math.rad(-3 + 1 * math.sin(sine / 12))), 0.3)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.31, 2.05, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(-14)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(0.25, 0.7, 1.5) * CFrame.Angles(math.rad(72), math.rad(-25), math.rad(-2)), 0.25)
                swait()
              end
              swait()
            end
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "g" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          deadmau7 = Instance.new("Sound", Torso)
          deadmau7.SoundId = "rbxassetid://168166611"
          deadmau7.Volume = 8
          deadmau7.Looped = true
          deadmau7:Play()
          coroutine.wrap(function()
            coroutine.wrap(function()
              while dancing do
                va.C0 = va.C0:Lerp(CFrame.new(2 * math.sin(sine / 9), -0.4 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(0), math.rad(20 * math.sin(sine / 9)), 0), 0.25)
                swait()
              end
            end)()
            while dancing do
              for fd = 1, 28 do
                if not dancing then
                  break
                end
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(1.2, 1.5, 0) * CFrame.Angles(math.rad(180 - 7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3))), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 0.7, 1) * CFrame.Angles(math.rad(75 - 10 * math.sin(sine / 2)), math.rad(0), math.rad(0)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.31, 2.05, -0.1) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(-2)), 0.3)
                swait()
              end
              for fd = 1, 28 do
                if not dancing then
                  break
                end
                vb.C0 = vb.C0:lerp(CFrame.new(-0.9, 0.65 + 0.4 * math.sin(sine / 12), 1.2) * CFrame.Angles(math.rad(-35 - 15 * math.sin(sine / 12)), math.rad(50 + 3 * math.sin(sine / 12)), math.rad(3 - 1 * math.sin(sine / 12))), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(1.2, 1.5, 0) * CFrame.Angles(math.rad(180 - 7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3)), math.rad(7 * math.sin(sine / 3))), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-0.31, 2.05, 0.1) * CFrame.Angles(math.rad(-10), math.rad(0), math.rad(-8)), 0.25)
                ve.C0 = ve.C0:lerp(CFrame.new(0.5, 0.7, 1.1) * CFrame.Angles(math.rad(75 - 10 * math.sin(sine / 2)), math.rad(0), math.rad(-2)), 0.25)
                swait()
              end
              swait()
            end
            ws = 14
            deadmau7:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "f" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 6
          change = 0.5
          attacking = true
          bennyhill = Instance.new("Sound", Torso)
          bennyhill.SoundId = "rbxassetid://138211362"
          bennyhill.Volume = 8
          bennyhill.Looped = true
          bennyhill:Play()
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:Lerp(CFrame.new(0, -0.4, 0) * CFrame.Angles(math.rad(20 + 5 * math.sin(sine / 2)), math.rad(10 * math.sin(sine / 4)), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(-1.5, 0.89 - 0.4 * -math.sin(sine / 2), 0.49) * CFrame.Angles(math.rad(-70 + 20 * -math.sin(sine / 2)), 0, math.rad(0)), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.89 - 0.4 * math.sin(sine / 2), 0.49) * CFrame.Angles(math.rad(-70 + 20 * math.sin(sine / 2)), 0, math.rad(0)), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.33, 2, -0.2 + 0.3 * math.sin(sine / 2)) * CFrame.Angles(math.rad(-20 - 20 * -math.sin(sine / 2)), math.rad(0), math.rad(-8)), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(0.33, 2, -0.2 - 0.3 * math.sin(sine / 2)) * CFrame.Angles(math.rad(-20 - 20 * math.sin(sine / 2)), math.rad(0), math.rad(8)), 0.25)
              swait()
            end
            ws = 14
            bennyhill:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "p" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          barrelspin = 0
          barrelrollsound = Instance.new("Sound", Torso)
          barrelrollsound.SoundId = "rbxassetid://505320170"
          barrelrollsound.Volume = 8
          barrelrollsound.Looped = true
          barrelrollsound:Play()
          barrol = Instance.new("Part", Torso)
          barrol.Size = Vector3.new(1, 1, 1)
          barrol.CFrame = Torso.CFrame
          barrol.CanCollide = false
          barrolweld = Instance.new("Weld", barrol)
          barrolweld.Part0 = barrol
          barrolweld.Part1 = Torso
          barrolweld.C0 = barrol.CFrame:inverse() * Torso.CFrame * CFrame.new(0, 0, 0)
          mbarrol = Instance.new("SpecialMesh", barrol)
          mbarrol.MeshType = "FileMesh"
          mbarrol.Scale = Vector3.new(1.05, 0.95, 1.05)
          mbarrol.MeshId, mbarrol.TextureId = "http://www.roblox.com/asset/?id=29873142", "http://www.roblox.com/asset/?id=31082268"
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:Lerp(CFrame.new(5 * math.sin(sine / 8), -1.8, 0) * CFrame.Angles(math.rad(-90), math.rad(180 * math.sin(sine / 8)), 0), 0.25)
              vb.C0 = vb.C0:lerp(CFrame.new(-1.5, 1.5, 0) * CFrame.Angles(math.rad(180), 0, math.rad(0)), 0.25)
              vc.C0 = vc.C0:lerp(CFrame.new(1.5, 1.5, 0) * CFrame.Angles(math.rad(180), 0, math.rad(0)), 0.25)
              vd.C0 = vd.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(0, 0, 0), 0.25)
              ve.C0 = ve.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(0, 0, 0), 0.25)
              swait()
            end
            ws = 14
            barrol:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "q" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          spinningmove = 0
          dbwouldlovethis = Instance.new("Sound", Torso)
          dbwouldlovethis.SoundId = "rbxassetid://1532157598"
          dbwouldlovethis.Volume = 8
          dbwouldlovethis.Looped = true
          dbwouldlovethis:Play()
          attacking = true
          coroutine.wrap(function()
            while dancing do
              spinningmove = spinningmove + 10
              va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.9, -0.35) * CFrame.Angles(math.rad(-30), math.rad(0), math.rad(0)), 0.2)
              vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.9, 0.35) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
              vc.C0 = vc.C0:lerp(CFrame.new(0.2 * math.sin(sine / 3), -0.52, 0.2 * math.sin(sine / 4)) * CFrame.Angles(math.rad(180), math.rad(spinningmove), math.rad(15 * math.sin(sine / 9))), 0.2)
              vd.C0 = vd.C0:lerp(CFrame.new(1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(-1), math.rad(-3 * math.sin(sine / 2))), 0.3)
              ve.C0 = ve.C0:lerp(CFrame.new(-1.4, 1.45, 0) * CFrame.Angles(math.rad(180), math.rad(1), math.rad(3 * math.sin(sine / 2))), 0.3)
              swait()
            end
            ws = 14
            dbwouldlovethis:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "u" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 6
          change = 0.5
          attacking = true
          slavdance = Instance.new("Sound", Torso)
          slavdance.SoundId = "rbxassetid://2341226836"
          slavdance.Volume = 6
          slavdance.Looped = true
          slavdance:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 17 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.5, -0.5) * CFrame.Angles(math.rad(-60), math.rad(0), math.rad(0)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.2, 0.55) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.8 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(22 - 2 * math.sin(sine / 3)), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 17 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.52, 1.2, 0.55) * CFrame.Angles(math.rad(30), math.rad(0), math.rad(0)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.52, 1.5, -0.5) * CFrame.Angles(math.rad(-60), math.rad(0), math.rad(0)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.8 + 0.1 * math.sin(sine / 3), 0) * CFrame.Angles(math.rad(22 - 2 * math.sin(sine / 3)), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(1, -0.2, 0.4) * CFrame.Angles(math.rad(-87 + 0.01 * math.sin(sine / 9)), math.rad(80 - 3 * math.sin(sine / 9)), math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.7, -0.2, 0.4) * CFrame.Angles(math.rad(-87 - 0.01 * math.sin(sine / 9)), math.rad(-88 + 0.7 * math.sin(sine / 9)), math.rad(0)), 0.3)
                swait()
              end
              swait()
            end
            ws = 14
            slavdance:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "y" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          walkforward = 0
          walkrotation = 0
          attacking = true
          truelegend = Instance.new("Sound", Torso)
          truelegend.SoundId = "rbxassetid://487872908"
          truelegend.TimePosition = 13.98
          truelegend.Volume = 8
          truelegend.Looped = true
          truelegend:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 100 do
                if not dancing then
                  break
                end
                walkforward = walkforward + 0.1
                va.C0 = va.C0:lerp(CFrame.new(-0.31, 2.05, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
                vb.C0 = vb.C0:lerp(CFrame.new(0.31, 2.05, -0.15 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                ve.C0 = ve.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 50 do
                if not dancing then
                  break
                end
                walkrotation = walkrotation + 15
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(walkrotation), math.rad(0)), 0.2)
                swait()
              end
              walkrotation = 0
              for fd = 1, 100 do
                if not dancing then
                  break
                end
                walkforward = walkforward - 0.1
                va.C0 = va.C0:lerp(CFrame.new(-0.31, 2, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
                vb.C0 = vb.C0:lerp(CFrame.new(0.31, 2, -0.15 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(-180), math.rad(0)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1.3, 0.7, 0.2) * CFrame.Angles(math.rad(220), math.rad(0), math.rad(-30)), 0.4)
                ve.C0 = ve.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.3)
                swait()
              end
              for fd = 1, 50 do
                if not dancing then
                  break
                end
                walkrotation = walkrotation + 15
                vd.C0 = vd.C0:lerp(CFrame.new(-1.5, 0, 0) * CFrame.Angles(0, 0, math.rad(0)), 0.1)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, walkforward) * CFrame.Angles(math.rad(0), math.rad(walkrotation), math.rad(0)), 0.2)
                swait()
              end
              walkrotation = 0
              swait()
            end
            ws = 14
            truelegend:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "t" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          plummusic = Instance.new("Sound", Torso)
          plummusic.Volume = 8
          plummusic.Looped = true
          plummusic.SoundId = "rbxassetid://2526093213"
          plummusic:Play()
          coroutine.wrap(function()
            while dancing do
              for fd = 1, 20 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.33, 2, 0.05) * CFrame.Angles(math.rad(3), math.rad(0), math.rad(-8)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.33, 2, -0.05) * CFrame.Angles(math.rad(-3), math.rad(0), math.rad(8)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(15)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(0.5, 1.98, 0.05) * CFrame.Angles(0, 0, math.rad(-140)), 0.2)
                ve.C0 = ve.C0:lerp(CFrame.new(1, 1.3, 0.05) * CFrame.Angles(0, 0, math.rad(50)), 0.2)
                swait()
              end
              for fd = 1, 20 do
                if not dancing then
                  break
                end
                va.C0 = va.C0:lerp(CFrame.new(-0.33, 2, 0.05) * CFrame.Angles(math.rad(3), math.rad(0), math.rad(-8)), 0.2)
                vb.C0 = vb.C0:lerp(CFrame.new(0.33, 2, -0.05) * CFrame.Angles(math.rad(-3), math.rad(0), math.rad(8)), 0.2)
                vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(-15)), 0.2)
                vd.C0 = vd.C0:lerp(CFrame.new(-1, 1.4, 0.05) * CFrame.Angles(0, 0, math.rad(-50)), 0.2)
                ve.C0 = ve.C0:lerp(CFrame.new(-0.6, 2, 0.05) * CFrame.Angles(0, 0, math.rad(140)), 0.2)
                swait()
              end
              swait()
            end
            ws = 14
            plummusic:Remove()
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "e" then
        if dancing then
          dancing = false
        else
          dancing = true
          ws = 0
          change = 0.5
          attacking = true
          mrozo = Instance.new("Sound", Torso)
          mrozo.Volume = 8
          mrozo.SoundId = "rbxassetid://335701357"
          mrozo.Looped = true
          mrozo.TimePosition = 10
          mrozo:Play()
          coroutine.wrap(function()
            while dancing do
              va.C0 = va.C0:lerp(CFrame.new(-0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(-10)), 0.1)
              vb.C0 = vb.C0:lerp(CFrame.new(0.3, 2, 0) * CFrame.Angles(0, math.rad(0), math.rad(10)), 0.1)
              vc.C0 = vc.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(0), math.rad(0 * math.sin(sine / 4)), math.rad(15 * math.sin(sine / 4))), 0.2)
              vd.C0 = vd.C0:lerp(CFrame.new(-1.3 + 0.3 * math.sin(sine / 3.5), 0.5 * -math.sin(sine / 3.5), 0.1) * CFrame.Angles(math.rad(0 * math.sin(sine / 2)), 0, math.rad(30 * math.sin(sine / 3.5))), 0.2)
              ve.C0 = ve.C0:lerp(CFrame.new(1.3 + 0.3 * math.sin(sine / 3.5), 0.5 * math.sin(sine / 3.5), 0.1) * CFrame.Angles(math.rad(0 * math.sin(sine / 2)), 0, math.rad(30 * math.sin(sine / 3.5))), 0.2)
              swait()
            end
            mrozo:Remove()
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    mouse.KeyDown:connect(function(a)
      a = a
      a = a:lower()
      if a == "r" then
        if dancing then
          dancing = false
        else
          ws = 6
          recordbaby = 0
          dancing = true
          change = 0.5
          attacking = true
          spinme = Instance.new("Sound", Torso)
          spinme.Volume = 8
          spinme.SoundId = "rbxassetid://145799973"
          spinme.Looped = true
          spinme:Play()
          coroutine.wrap(function()
            while dancing do
              recordbaby = recordbaby + 10
              va.C0 = va.C0:lerp(CFrame.new(-0.27, 2, 0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(10 * math.sin(sine / 4)), math.rad(0), math.rad(-8)), 0.3)
              vb.C0 = vb.C0:lerp(CFrame.new(0.27, 2, -0.1 * math.sin(sine / 4)) * CFrame.Angles(math.rad(-10 * math.sin(sine / 4)), math.rad(0), math.rad(8)), 0.3)
              vc.C0 = vc.C0:lerp(CFrame.new(0.5 * math.sin(sine / 5), -0.2, 0.5 * math.sin(sine / 4)) * CFrame.Angles(math.rad(0), math.rad(recordbaby), math.rad(0)), 0.3)
              vd.C0 = vd.C0:lerp(CFrame.new(-0.5, 1.98, 0) * CFrame.Angles(0, 0, math.rad(-90)), 0.3)
              ve.C0 = ve.C0:lerp(CFrame.new(0.5, 1.98, 0) * CFrame.Angles(0, 0, math.rad(90)), 0.3)
              swait()
            end
            spinme:Remove()
            ws = 14
            attacking = false
          end)()
        end
      end
    end)
    function ray(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function ray2(a, b, c, d)
      a = a
      return ray(a, CFrame.new(a, b).lookVector, c, d)
    end
    checks1 = coroutine.wrap(function()
      while true do
        hf = ray(Root.Position, CFrame.new(Root.Position, Root.Position + Vector3.new(0, -1, 0)).lookVector, 9, Character)
        if Root.Velocity.y > 1 then
          position = "Jump"
        elseif Root.Velocity.y < -1 then
          position = "Falling"
        elseif 2 > Root.Velocity.Magnitude then
          position = "Idle"
        elseif 2 < Root.Velocity.Magnitude then
          position = "Walking"
        else
          if 20 < Root.Velocity.Magnitude then
            position = "Running"
          else
          end
        end
        wait()
      end
    end)
    checks1()
    function ray(a, b, c, d)
      a = a
      return workspace:FindPartOnRay(Ray.new(a, b.unit * c), d)
    end
    function ray2(a, b, c, d)
      a = a
      return ray(a, CFrame.new(a, b).lookVector, c, d)
    end
    coroutine.wrap(function()
      while true do
        if RunSrv.RenderStepped:wait() then
          TrsoLV = Torso.CFrame.lookVector
          Dist = nil
          Diff = nil
          if not MseGuide then
          end
        end
      end
    end)()
    immortal = {}
    for fo, fp in pairs(Character:GetDescendants()) do
      if fp:IsA("BasePart") and fp.Name ~= "lmagic" and fp.Name ~= "rmagic" then
        if fp ~= Root and fp ~= Torso and fp ~= Head and fp ~= RightArm and fp ~= LeftArm and fp ~= RightLeg and fp.Name ~= "lmagic" and fp.Name ~= "rmagic" and fp ~= LeftLeg then
          fp.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
        end
        table.insert(immortal, {
          fp,
          fp.Parent,
          fp.Material,
          fp.Color,
          fp.Transparency
        })
      elseif fp:IsA("JointInstance") then
        table.insert(immortal, {
          fp,
          fp.Parent,
          nil,
          nil,
          nil
        })
      end
    end
    for fo = 1, #immortal do
      if immortal[fo] ~= nil then
        if levitate then
          if immortal[fo][1].ClassName == "Part" and immortal[fo][1] ~= Root and immortal[fo][1].Name ~= eyo1 and immortal[fo][1].Name ~= eyo2 and immortal[fo][1].Name ~= "lmagic" and immortal[fo][1].Name ~= "rmagic" then
            immortal[fo][1].Transparency, immortal[fo][1].Color, immortal[fo][1].Material = immortal[fo][5], immortal[fo][4], immortal[fo][3]
          end
          immortal[fo][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        else
          if immortal[fo][1].ClassName == "Part" and immortal[fo][1] ~= Root and immortal[fo][1].Name ~= "lmagic" and immortal[fo][1].Name ~= "rmagic" then
            immortal[fo][1].Transparency, immortal[fo][1].Color, immortal[fo][1].Material = immortal[fo][5], immortal[fo][4], immortal[fo][3]
          end
          immortal[fo][1].AncestryChanged:connect(function()
            va.Parent = vb
          end)
        end
      end
    end
    function immortality()
      for fd = 1, #immortal do
        if immortal[fd] ~= nil then
          if immortal[fd][1].ClassName == "Part" and immortal[fd][1] == Root then
            immortal[fd][1].Transparency, immortal[fd][1].Color, immortal[fd][1].Material = immortal[fd][5], immortal[fd][4], immortal[fd][3]
          end
          if immortal[fd][1].Parent ~= immortal[fd][2] then
            hum:Remove()
            immortal[fd][1].Parent = immortal[fd][2]
            hum = Instance.new("Humanoid", Character)
          end
        end
      end
    end
    coroutine.wrap(function()
      while true do
        if 0.1 > hum.Health then
          deadsound = Instance.new("Sound", Torso)
          deadsound.Volume = 6
          deadsound.SoundId = "rbxassetid://1411352723"
          deadsound:Play()
          immortality()
        end
        wait()
      end
    end)()
    coroutine.wrap(function()
      while true do
        settime = 0.05
        sine = sine + change
        if position == "Jump" and attacking == false then
          change = 1
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          va.C1 = va.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.1)
          vc.C1 = vc.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.4)
          vd.C0 = vd.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.2)
          vc.C0 = vc.C0:lerp(CFrame.new(1.4, 0.1, -0.2) * CFrame.Angles(math.rad(20), math.rad(-3), math.rad(-4)), 0.2)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(10), math.rad(0), math.rad(0)), 0.2)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1, 0.9) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.2)
        elseif position == "Falling" and attacking == false then
          change = 1
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          vd.C0 = vd.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(15), math.rad(0), math.rad(0)), 0.15)
          va.C1 = va.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.1)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 0.1)
          vc.C1 = vc.C1:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 0.4)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 2, 0) * CFrame.Angles(math.rad(8), math.rad(4), math.rad(0)), 0.2)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 2, 0) * CFrame.Angles(math.rad(8), math.rad(-4), math.rad(0)), 0.2)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.94 + 0.02 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(28 + 5 * math.sin(sine / 12)), math.rad(0), math.rad(45)), 0.2)
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5, 0.94 + 0.02 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(28 + 5 * math.sin(sine / 12)), math.rad(0), math.rad(-45)), 0.2)
        elseif position == "Walking" and attacking == false and running == false then
          change = 1.2
          walking = true
          spin = false
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5 + Root.RotVelocity.Y / 85, 0.35, -0.5 * math.sin(sine / 11)) * CFrame.Angles(math.rad(35 * math.sin(sine / 11)), math.rad(0 * math.sin(sine / 11)), math.rad(-10 + Root.RotVelocity.Y / 10, math.sin(-20 * math.sin(sine / 4)))), 0.3)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5 + Root.RotVelocity.Y / 85, 0.45, 0.5 * math.sin(sine / 11)) * CFrame.Angles(math.rad(-55 * math.sin(sine / 11)), math.rad(-5 * math.sin(sine / 8)), math.rad(10 + Root.RotVelocity.Y / 10, math.sin(20 * math.sin(sine / 4)))), 0.3)
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.09 * -math.sin(sine / 5.5), 0) * CFrame.Angles(math.rad(10), math.rad(12 * -math.sin(sine / 11)), math.rad(0) + Root.RotVelocity.Y / 30, math.cos(25 * math.cos(sine / 10))), 0.3)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 1.92 - 0.35 * math.cos(sine / 11) / 2.8, 0 - math.sin(sine / 11) / 3.4) * CFrame.Angles(math.rad(0) + -math.sin(sine / 11) / 2.3, math.rad(0) * math.cos(sine / 1), math.rad(0), math.cos(-375 * math.cos(sine / 11))), 0.3)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1.92 + 0.35 * math.cos(sine / 11) / 2.8, 0 + math.sin(sine / 11) / 3.4) * CFrame.Angles(math.rad(0) - -math.sin(sine / 11) / 2.3, math.rad(0) * math.cos(sine / 1), math.rad(0), math.cos(-375 * math.cos(sine / 11))), 0.3)
        elseif position == "Idle" and attacking == false and running == false then
          change = 0.5
          spin = true
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.2 + -0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(0)), 0.1)
          vc.C0 = vc.C0:lerp(CFrame.new(1.5, 0.27 + 0.02 * math.sin(sine / 12), 0.2 * -math.sin(sine / 12)) * CFrame.Angles(math.rad(20 * math.sin(sine / 12)), math.rad(0), math.rad(10)), 0.1)
          ve.C0 = ve.C0:lerp(CFrame.new(-1.5, 0.27 + 0.02 * math.sin(sine / 12), 0.2 * -math.sin(sine / 12)) * CFrame.Angles(math.rad(20 * math.sin(sine / 12)), math.rad(0), math.rad(-10)), 0.1)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(-10)), 0.1)
          va.C0 = va.C0:lerp(CFrame.new(0.3, 2 - 0.1 * math.sin(sine / 12), 0) * CFrame.Angles(math.rad(6 * -math.sin(sine / 12)), math.rad(0), math.rad(10)), 0.1)
        elseif position == "Running" and attacking == false then
          change = 1
          for fd, fe in pairs(Torso:GetChildren()) do
            if fe:IsA("Sound") then
              fe:Remove()
            end
          end
          ve.C0 = ve.C0:lerp(CFrame.new(0, 0.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.3)
          vc.C1 = vc.C1:lerp(CFrame.new(-1.24 + 0.6 * math.sin(sine / 4) / 1.4, 0.54, 0 - 0.8 * math.sin(sine / 4)) * CFrame.Angles(math.rad(6 + 140 * math.sin(sine / 4) / 1.2), math.rad(0), math.rad(20 + 70 * math.sin(sine / 4))), 0.3)
          vc.C0 = vc.C0:lerp(CFrame.new(0, 0.5, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0)), 0.3)
          vd.C0 = vd.C0:lerp(CFrame.new(0, -0.2, 0) * CFrame.Angles(math.rad(-20 - 0 * math.sin(sine / 4)), math.rad(0 + 6 * math.sin(sine / 4)), math.rad(0) + Root.RotVelocity.Y / 30, math.sin(10 * math.sin(sine / 4))), 0.3)
          vb.C1 = vb.C1:lerp(CFrame.new(0, 0, -0.2 + 0.5 * -math.sin(sine / 4)), 0.3)
          vb.C0 = vb.C0:lerp(CFrame.new(-0.5, 1.6 + 0.1 * math.sin(sine / 4), 0.7 * -math.sin(sine / 4)) * CFrame.Angles(math.rad(15 + -50 * math.sin(sine / 4)), 0, 0), 0.3)
          va.C1 = va.C1:lerp(CFrame.new(0, 0, -0.2 + 0.5 * math.sin(sine / 4)), 0.3)
          va.C0 = va.C0:lerp(CFrame.new(0.5, 1.6 - 0.1 * math.sin(sine / 4), 0.7 * math.sin(sine / 4)) * CFrame.Angles(math.rad(15 + 50 * math.sin(sine / 4)), 0, 0), 0.3)
        end
        swait()
      end
    end)()
    game:GetService("Players").LocalPlayer.Character["Local Ragdoll"]:Destroy()
    game:GetService("Players").LocalPlayer.Character.Controls:Destroy()
    game:GetService("Players").LocalPlayer.Character.FirstPerson:Destroy()
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Anim Scripts"):NewSection("Other Scripts | Reanimation Scripts"):NewButton("Killbot", "Killbot", function()
    spawn(function()
      wait(0.0166666666666667)
      if false then
        setmetatable({
          AllChildren = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              b(fk)
            end
          end,
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "Accessory", true)
      end
      if false then
        setmetatable({
          AllChildren = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              b(fk)
            end
          end,
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "Clothing", true)
        setmetatable({
          AllChildren = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              b(fk)
            end
          end,
          ClearChildrenOfClass = function(a, b, c)
            a = a
            if c then
            end
            for fj, fk in next, a:GetDescendants() or a:GetChildren(), nil do
              if fk:IsA(b) then
                fk:destroy()
              end
            end
          end
        }, {__index = Instance}).ClearChildrenOfClass(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, "ShirtGraphic", true)
      end
      Instance.new("Folder", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character).Name = "Effects"
      function New(a, b, c, d)
        a = a
        for fk, fl in pairs(d or {}) do
          va.new(a)[fk] = fl
        end
        va.new(a).Parent = b
        va.new(a).Name = c
        return (va.new(a))
      end
      CyborgArm = New("Model", setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character, "CyborgArm", {})
      Handle = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Smoky grey"),
        Material = Enum.Material.Metal,
        Size = Vector3.new(1.0500015, 2.02999949, 1.07999992),
        CFrame = CFrame.new(-138.347275, 2.99473095, 41.7816849, 0.999635339, 8.27677286E-06, 0.0270056836, -0.000191000072, 0.999977112, 0.00676353322, -0.0270050094, -0.00676622428, 0.999612451),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0, 0, 0)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.429999948, 0.100000001, 1.04999983),
        CFrame = CFrame.new(-138.369171, 2.89115906, 41.8271637, 0.505694926, -0.862284958, 0.0271573812, 0.862490892, 0.506027818, 0.0067293453, -0.019545, 0.0200200025, 0.999608755),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.505694926, 0.862490892, -0.0195449982, -0.862284899, 0.506027818, 0.0200199969, 0.0271573793, 0.00672934437, 0.999608576),
        C1 = CFrame.new(0.0136108398, -0.108844995, -0.0342674255, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.600001693, 0.100000001, 1.04999983),
        CFrame = CFrame.new(-138.268127, 3.26462603, 41.8218994, 0.0100010047, -0.999581397, 0.0271513518, 0.999925494, 0.010187286, 0.00673122332, -0.00700500328, 0.027082013, 0.999608815),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.0100010047, 0.999925494, -0.00700500328, -0.999581337, 0.010187286, 0.0270820074, 0.0271513499, 0.00673122238, 0.999608636),
        C1 = CFrame.new(-0.0874328613, 0.264621973, -0.028968811, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.3000018, 0.100000001, 1.04999983),
        CFrame = CFrame.new(-138.217133, 3.61339307, 41.8189926, 0.778245091, -0.627379835, 0.0270029604, 0.627452075, 0.778625846, 0.00676273741, -0.0252680089, 0.0116800005, 0.999612689),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.778245091, 0.627452075, -0.0252680033, -0.627379835, 0.778625846, 0.0116799958, 0.0270029567, 0.00676273648, 0.99961251),
        C1 = CFrame.new(-0.138427734, 0.613389015, -0.0260467529, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Shape = Enum.PartType.Cylinder,
        Size = Vector3.new(0.840000331, 0.420000285, 1),
        CFrame = CFrame.new(-138.395523, 2.38962889, 41.7660217, -0.00574199716, -0.999983609, 1.77533366E-09, 0.999983549, -0.00574199716, 9.3131769E-10, 9.41781764E-10, 1.77533366E-09, 1.00000012),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, -0.00574199716, 0.999983549, 0, -0.999983549, -0.00574199716, 0, 0, 0, 1),
        C1 = CFrame.new(0.0399932861, -0.610375166, 0.0268669128, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Shape = Enum.PartType.Cylinder,
        Size = Vector3.new(0.840000331, 0.420000285, 0.2900002),
        CFrame = CFrame.new(-138.540939, 3.80931711, 41.9832687, 2.29982252E-05, -0.999983609, -0.00574393803, -0.00452899979, -0.00574398367, 0.999973238, -0.999989927, 3.01669934E-06, -0.00452905567),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 2.29999951E-05, -0.00452899886, -0.999989748, -0.999983549, -0.00574398367, 3.01490991E-06, -0.00574393803, 0.999973238, -0.00452905614),
        C1 = CFrame.new(0.185333252, 0.809313059, -0.190429688, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Smoky grey"),
        Material = Enum.Material.Metal,
        Shape = Enum.PartType.Ball,
        Size = Vector3.new(1.16000044, 1.16000044, 1.16000044),
        CFrame = CFrame.new(-138.563065, 3.74006891, 41.8137894, 1, -1.23944917E-22, 1.77533366E-09, -1.48608469E-11, 1, 9.3131769E-10, -1.80443749E-09, 9.31322575E-10, 1.00000012),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(0, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C1 = CFrame.new(0.207519531, 0.740064859, -0.0209579468, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.660001755, 0.100000001, 0.799999833),
        CFrame = CFrame.new(-138.557587, 3.57138705, 41.9535294, 0.999635398, 8.27676195E-06, 0.0270056874, -0.000191000116, 0.999977112, 0.00676353415, -0.0270050168, -0.00676622475, 0.999612629),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.999635339, -0.000191000072, -0.0270050094, 8.27677377E-06, 0.999977112, -0.00676622428, 0.0270056836, 0.00676353322, 0.999612451),
        C1 = CFrame.new(0.20199585, 0.571382999, -0.160697937, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.660001755, 0.100000001, 0.0899999291),
        CFrame = CFrame.new(-138.548004, 3.20288205, 42.3108978, 0.999635398, 8.27676195E-06, 0.0270056874, -0.000191000116, 0.999977112, 0.00676353415, -0.0270050168, -0.00676622475, 0.999612629),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.999635339, -0.000191000072, -0.0270050094, 8.27677377E-06, 0.999977112, -0.00676622428, 0.0270056836, 0.00676353322, 0.999612451),
        C1 = CFrame.new(0.19229126, 0.202877998, -0.518062592, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.390001893, 0.100000001, 1.04999983),
        CFrame = CFrame.new(-138.031433, 3.68374205, 41.8135147, 0.999635398, 8.27676195E-06, 0.0270056874, -0.000191000116, 0.999977112, 0.00676353415, -0.0270050168, -0.00676622475, 0.999612629),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.999635339, -0.000191000072, -0.0270050094, 8.27677377E-06, 0.999977112, -0.00676622428, 0.0270056836, 0.00676353322, 0.999612451),
        C1 = CFrame.new(-0.324111938, 0.683737993, -0.0205078125, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.2800017, 0.100000001, 0.690000117),
        CFrame = CFrame.new(-138.393951, 2.11307812, 42.0131454, 0.0100010047, -0.999581397, 0.0271513518, 0.999925494, 0.010187286, 0.00673122332, -0.00700500328, 0.027082013, 0.999608815),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, 0.0100010047, 0.999925494, -0.00700500328, -0.999581337, 0.010187286, 0.0270820074, 0.0271513499, 0.00673122238, 0.999608636),
        C1 = CFrame.new(0.0383300781, -0.886925936, -0.220256805, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      Part = New("Part", CyborgArm, "Part", {
        BrickColor = BrickColor.new("Really red"),
        Material = Enum.Material.Neon,
        Size = Vector3.new(0.600001693, 0.100000001, 1.04999983),
        CFrame = CFrame.new(-138.452835, 2.48128104, 41.8321991, -0.223359078, -0.974358141, 0.027149044, 0.974736214, -0.223258108, 0.00673288852, -0.000498998852, 0.0279670097, 0.999608934),
        BottomSurface = Enum.SurfaceType.Smooth,
        TopSurface = Enum.SurfaceType.Smooth,
        Color = Color3.new(1, 0, 0)
      })
      mot = New("Motor", Part, "mot", {
        Part0 = Part,
        Part1 = setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"],
        C0 = CFrame.new(0, 0, 0, -0.223359063, 0.974736214, -0.000499000133, -0.974358141, -0.223258108, 0.0279670041, 0.0271490421, 0.00673288759, 0.999608755),
        C1 = CFrame.new(0.0972747803, -0.518723011, -0.0393295288, -0.99999994, 1.23908515E-22, -0.000331714633, 1.23944917E-22, 1, -1.09697344E-22, 0.000331714633, -1.09738441E-22, -0.99999994)
      })
      for fah, faj in next, CyborgArm:children() do
        faj.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
      end
      pcall(function()
        va.ReaperShadowHead.Eye1.BrickColor = BrickColor.new("Really red")
        va.ReaperShadowHead.Eye1.Material = "Glass"
      end)
      pcall(function()
        va.ReaperShadowHead.Eye2.BrickColor = BrickColor.new("Really red")
        va.ReaperShadowHead.Eye2.Material = "Glass"
      end)
      pcall(function()
        va.LeftWing.BrickColor = BrickColor.new("Really red")
        va.LeftWing.Transparency = 0.5
      end)
      if 1 ~= 1 then
        for fah, faj in next, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:GetDescendats() do
          if faj:IsA("BasePart") then
            faj.Size = faj.Size * 1
          end
        end
      end
      function Sound(a, b, c, d, e, g, h)
        a = a
        va("Sound").SoundId = "rbxassetid://" .. tostring(b or 0)
        va("Sound").Pitch = c or 1
        va("Sound").Volume = d or 1
        va("Sound").Looped = e or false
        if h then
          coroutine.wrap(function()
            repeat
              wait()
            until va.IsLoaded
            va.Playing = vb or false
          end)()
        end
        if not e and g then
          va("Sound").Ended:connect(function()
            va.Volume = 0
            va:destroy()
          end)
        elseif g then
          warn("Sound can't be looped and a sound effect!")
        end
        va("Sound").Parent = a or vb
        return (va("Sound"))
      end
      function Part(a, b, c, d, e, g, h)
        a = a
        va("Part")["BrickColor" or "Color"] = b or vb.N(0, 0, 0)
        va("Part").Material = c or Enum.Material.SmoothPlastic
        va("Part").TopSurface, va("Part").BottomSurface = 10, 10
        va("Part").Size = d or vc.N(1, 1, 1)
        va("Part").CFrame = e or vd.N(0, 0, 0)
        va("Part").CanCollide = h or false
        va("Part").Anchored = g or false
        va("Part").Parent = a or ve
        return (va("Part"))
      end
      function Mesh(a, b, c, d, e, g)
        a = a
        va("SpecialMesh").MeshId = c or ""
        va("SpecialMesh").TextureId = d or ""
        va("SpecialMesh").Scale = e or vb.N(1, 1, 1)
        va("SpecialMesh").Offset = g or vb.N(0, 0, 0)
        va("SpecialMesh").MeshType = b or Enum.MeshType.Sphere
        va("SpecialMesh").Parent = a
        return (va("SpecialMesh"))
      end
      function NewInstance(a, b, c)
        a = a
        if c then
          for fj, fk in next, c, nil do
            pcall(function()
              va[vb] = vc
            end)
          end
        end
        return (va.new(a, b))
      end
      Sound(setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character, 1030796589, 1, 3, true, false, true).Name = "Music"
      for faj, fak in next, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
        fak:Stop()
      end
      pcall(game.Destroy, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChild("Animate"))
      pcall(game.Destroy, setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):FindFirstChild("Animator"))
      Instance.new("BindableEvent", script).Name = "Heartbeat"
      script:WaitForChild("Heartbeat")
      Instance.new("BindableEvent", script):Fire()
      game:GetService("RunService").Heartbeat:connect(function(a, b)
        a = a
        va = va + a
        if va >= vb then
          if vc then
            script.Heartbeat:Fire()
            vd = tick()
          else
            for fg = 1, math.floor(va / vb) do
              ve:Fire()
            end
            vd = tick()
          end
          if vg then
            va = 0
          else
            va = va - vb * math.floor(va / vb)
          end
        end
      end)
      function swait(a)
        a = a
        if a ~= 0 then
        end
        if a == nil then
          va.Event:wait()
        else
          for fe = 0, a do
            va.Event:wait()
          end
        end
      end
      function FakeWeld(a, b)
        a = a
        return NewInstance("HingeConstraint", a, {
          Attachment0 = va.new("Attachment", a),
          Attachment1 = va.new("Attachment", b),
          LimitsEnabled = true,
          UpperAngle = 0,
          LowerAngle = 0
        })
      end
      function Fragment(a)
        a = a
        a:ClearAllChildren()
        a.Archivable = true
        a.Size = Vector3.new(a.Size.x / 2, a.Size.y, a.Size.z)
        a.Name = a.Name .. "Fragment"
        a:Clone().Parent = NewInstance("Folder", a.Parent, {
          Name = "Fragmentation"
        })
        a:Clone().CFrame = va.N(-0.5, 1, 1) * a:Clone().CFrame
        a.CFrame = va.N(0.5, 1, 1) * a.CFrame
        a.Size = Vector3.new(a.Size.x, a.Size.y / 2, a.Size.z)
        a:Clone().Parent = NewInstance("Folder", a.Parent, {
          Name = "Fragmentation"
        })
        a:Clone().CFrame = va.N(1, -0.5, 1) * a:Clone().CFrame
        a.CFrame = va.N(1, 0.5, 1) * a.CFrame
        a.Size = Vector3.new(a.Size.x, a.Size.y, a.Size.z / 2)
        a:Clone().Parent = NewInstance("Folder", a.Parent, {
          Name = "Fragmentation"
        })
        a:Clone().CFrame = va.N(1, 1, -0.5) * a:Clone().CFrame
        a.Parent, a.CFrame = NewInstance("Folder", a.Parent, {
          Name = "Fragmentation"
        }), va.N(1, 1, 0.5) * a.CFrame
        return (NewInstance("Folder", a.Parent, {
          Name = "Fragmentation"
        }))
      end
      function Blood(a, b, c)
        a = a
        va.new("Part", vb).Transparency = 1
        va.new("Part", vb).Size = a
        va.new("Part", vb).Anchored = true
        va.new("Part", vb).CanCollide = false
        va.new("Part", vb).CFrame = b
        vc.Debris:AddItem(va.new("Part", vb), 6)
        vd:Clone().Parent = va.new("Part", vb)
        vd:Clone():Emit(c)
        return va.new("Part", vb), (vd:Clone())
      end
      function Blood2(a, b)
        a = a
        va.new("Part", vb).Transparency = 1
        va.new("Part", vb).Size = a
        va.new("Part", vb).Anchored = false
        va.new("Part", vb).CanCollide = false
        va.new("Part", vb).CFrame = b
        vc:Clone().Parent, vc:Clone().Enabled = va.new("Part", vb), true
        return va.new("Part", vb), (vc:Clone())
      end
      function Blood3(a, b, c)
        a = a
        va.new("Part", vb).Transparency = 1
        va.new("Part", vb).Size = a
        va.new("Part", vb).Anchored = true
        va.new("Part", vb).CanCollide = false
        va.new("Part", vb).CFrame = b
        vc.Debris:AddItem(va.new("Part", vb), 6)
        vd:Clone().Parent = va.new("Part", vb)
        vd:Clone():Emit(c)
        return va.new("Part", vb), (vd:Clone())
      end
      function Blood4(a, b)
        a = a
        va.new("Part", vb).Transparency = 1
        va.new("Part", vb).Size = a
        va.new("Part", vb).Anchored = false
        va.new("Part", vb).CanCollide = false
        va.new("Part", vb).CFrame = b
        vc:Clone().Parent, vc:Clone().Enabled = va.new("Part", vb), true
        return va.new("Part", vb), (vc:Clone())
      end
      function BloodDrop(a, b, c)
        a = a
        if game.PlaceId ~= 843468296 then
          NewInstance("Part", va, {
            Transparency = 0,
            Material = vb,
            BrickColor = vc,
            Shape = Enum.PartType.Ball,
            Size = vd.N(0.2, 0.2, 0.2),
            CanCollide = false
          }).CFrame = ve.N(a, b)
          vg.new("BodyVelocity", (NewInstance("Part", va, {
            Transparency = 0,
            Material = vb,
            BrickColor = vc,
            Shape = Enum.PartType.Ball,
            Size = vd.N(0.2, 0.2, 0.2),
            CanCollide = false
          }))).maxForce = Vector3.new(1000000000, 1000000000, 1000000000)
          vg.new("BodyVelocity", (NewInstance("Part", va, {
            Transparency = 0,
            Material = vb,
            BrickColor = vc,
            Shape = Enum.PartType.Ball,
            Size = vd.N(0.2, 0.2, 0.2),
            CanCollide = false
          }))).velocity = ve.N(a, b + vd.N(vh.RNG(-3, 3) / 30, vh.RNG(-3, 3) / 30, vh.RNG(-3, 3) / 30)).lookVector * 15
          vg.new("BodyVelocity", (NewInstance("Part", va, {
            Transparency = 0,
            Material = vb,
            BrickColor = vc,
            Shape = Enum.PartType.Ball,
            Size = vd.N(0.2, 0.2, 0.2),
            CanCollide = false
          }))).Name = "MOVE"
          delay(0.01, function()
            va:destroy()
          end)
        end
      end
      function BloodPuddle(a, b, c, d)
        a = a
        if workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true) and not workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Parent:FindFirstChildOfClass("Humanoid") and not workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Parent.Parent:FindFirstChildOfClass("Humanoid") then
          if workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Name == "BloodPuddle" then
            if 5 < workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size.Z and c > workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size.Z and a - workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Position.magnitude < workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size.Z / 3 then
              workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size = workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size + vb.N(0.1, 0, 0.1)
            end
            if 2 > workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true).Size.Z then
              pcall(function()
                va.Sound:Play()
              end)
            end
          else
            Sound(NewInstance("Part", workspace, {
              Material = vd,
              BrickColor = ve,
              Size = vb.N(1, 0.1, 1),
              CFrame = va.N(workspace:FindPartOnRayWithIgnoreList(Ray.new(a, va.N(a, a + vb.N(0, -1, 0)).lookVector * b), {d, vc}, false, true)) * va.A(90 * vg.P / 180, 0, 0),
              Anchored = true,
              CanCollide = false,
              Archivable = false,
              Locked = true,
              Name = "BloodPuddle"
            }), 685857471, 1, 2, false, false, true)
            coroutine.wrap(function()
              swait(75)
              repeat
                swait()
                va.Size = va.Size - vb.N(0.02, 0, 0.02)
              until va.Size.Z < 0.51
              va:destroy()
            end)()
          end
        end
      end
      function recurse(a, b, c)
        a = a
        c = c or 0
        for fh, fj in pairs(a:GetChildren()) do
          c = c + 1
          b(c, fj)
          if #fj:GetChildren() > 0 then
            c = recurse(fj, b, c)
          end
        end
        return c
      end
      function ragdollJoint(a, b, c, d, e, g)
        a = a
        if a:FindFirstChild("RagdollConstraint" .. c.Name) == nil then
          for fl, fm in pairs(a:GetChildren()) do
            if fm:IsA("MeshPart") then
              if fm.MeshId == "http://www.roblox.com/asset/?id=553602987" then
                fm.Size = Vector3.new(1, 1, 1)
              end
            end
          end
          if c:FindFirstChildOfClass("Motor6D") then
            c:FindFirstChildOfClass("Motor6D"):Remove()
          end
          if d ~= "NeckAttachment" then
            d = d .. "RigAttachment"
          end
          va.new(e .. "Constraint").Attachment0 = b:FindFirstChild(d)
          va.new(e .. "Constraint").Attachment1 = c:FindFirstChild(d)
          va.new(e .. "Constraint").Name = "RagdollConstraint" .. c.Name
          if 0 < a:FindFirstChildOfClass("Humanoid").Health then
            va.new("Part", c).Size = c.Size / 2
            if string.find(string.lower(c.Name), "upper") then
              if string.find(string.lower(c.Name), "leg") then
                va.new("Part", c).Size = c.Size / 3
              else
                va.new("Part", c).Size = c.Size / 2.5
              end
            end
            va.new("Part", c).CanCollide = true
            va.new("Part", c).Name = "RagdollJoint"
            va.new("Part", c).Anchored = false
            va.new("Part", c).Transparency = 1
            va.new("Part", c).CFrame = c.CFrame
            va.new("Part", c):BreakJoints()
            if va.new("Attachment", c) and va.new("Attachment", (va.new("Part", c))) then
              va.new("HingeConstraint").Attachment1, va.new("HingeConstraint").Attachment0 = va.new("Attachment", (va.new("Part", c))), va.new("Attachment", c)
              va.new("HingeConstraint").LimitsEnabled = true
              va.new("HingeConstraint").UpperAngle = 0
              va.new("HingeConstraint").LowerAngle = 0
              va.new("HingeConstraint").Parent = a
            end
            if string.find(string.lower(c.Name), "upper") then
              if string.find(string.lower(c.Name), "leg") then
                va.new("Attachment", c).Position = Vector3.new(0, 0.01, 0)
              else
                va.new("Attachment", c).Position = Vector3.new(0, 0.25, 0)
              end
            else
              va.new("Attachment", c).Position = Vector3.new(0, -0.1, 0)
            end
          end
          for fm, fo in next, g or {}, nil do
            va.new(e .. "Constraint")[fo[1]] = fo[2]
          end
          va.new(e .. "Constraint").Parent = a
          return (va.new(e .. "Constraint"))
        end
      end
      function getAttachment0(a, b)
        a = a
        for fg, fh in next, a:children() do
          if fh:FindFirstChild(b) then
            return (fh:FindFirstChild(b))
          end
        end
      end
      function Ragdoll(a, b, c)
        a = a
      end
      function Bezier(a, b, c, d, e)
        a = a
        return (a:lerp(b, e):lerp(b:lerp(c, e), e):lerp(b:lerp(c, e):lerp(c:lerp(d, e), e), e))
      end
      function Effect(a)
        a = a
        if (a.Manual or nil) and typeof(a.Manual or nil) == "Instance" and a.Manual or nil:IsA("BasePart") then
        else
        end
        if typeof(a.Mesh or nil) == "table" then
        elseif typeof(a.Mesh or nil) == "Instance" then
          a.Mesh or nil:Clone().Parent = Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false)
        end
        if typeof(a.Sound or nil) ~= "table" then
        end
        if typeof(a.Sound or nil) == "Instance" then
        end
        repeat
          if Sound(Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false), a.Sound or nil.SoundId, a.Sound or nil.Pitch, a.Sound or nil.Volume, false, false, true) then
            wait()
          end
        until Sound(Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false), a.Sound or nil.SoundId, a.Sound or nil.Pitch, a.Sound or nil.Volume, false, false, true).Playing and Sound(Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false), a.Sound or nil.SoundId, a.Sound or nil.Pitch, a.Sound or nil.Volume, false, false, true).IsLoaded and 0 < Sound(Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false), a.Sound or nil.SoundId, a.Sound or nil.Pitch, a.Sound or nil.Volume, false, false, true).TimeLength
        if a.MoveDirection or nil then
        end
        coroutine.wrap(function()
          if va ~= "Arc" then
            for fd = 1, vb do
              if va == "Resize-AndFade" then
                if not vc.EndSize then
                  vc.EndSize = vd.N(0, 0, 0)
                end
                if typeof(vc.EndSize) == "Vector3" then
                end
                if vc.EndIsIncrement then
                  vg.Size = vg.Size - vc.EndSize
                else
                  vg.Size = vg.Size - (vc.EndSize - ve or typeof(vc.EndSize) == "number" and vd.N(vc.EndSize)) / vb
                end
                vg.Transparency = fd / vb
              elseif va == "Resize+AndFade" then
                if not vc.EndSize then
                  vc.EndSize = ve * 2
                end
                if typeof(vc.EndSize) == "Vector3" then
                end
                if vc.EndIsIncrement then
                  vg.Size = vg.Size + vc.EndSize
                else
                  vg.Size = vg.Size + (vc.EndSize - ve or typeof(vc.EndSize) == "number" and vd.N(vc.EndSize)) / vb
                end
                vg.Transparency = fd / vb
              elseif va == "Fade" then
                vg.Transparency = fd / vb
              end
              if vc.RandomizeCFrame then
                vg.CFrame = vg.CFrame * vh.A(vj.RRNG(-360, 360), vj.RRNG(-360, 360), vj.RRNG(-360, 360))
              end
              if vk and vl then
                vg.CFrame = vh.N(vg.Position, vk) * vh.N(0, 0, -vl)
                vg.Orientation = vg.Orientation
              end
              if swait and typeof(swait) == "function" then
                swait()
              else
                wait()
              end
            end
            vg:destroy()
          else
            assert(vc.Start ~= nil, "You need to specify a start point!")
            assert(vc.Home.CFrame ~= nil, "You need to specify an end point!")
            for fl = 0, 1, 0.01 do
              vg.CFrame = Bezier(vc.Start, vc.Third or vc.Start:lerp(vc.Home.CFrame, 0.25) * vh.N(vj.RNG(-25, 25), vj.RNG(0, 25), vj.RNG(-25, 25)), vc.Fourth or vc.Start:lerp(vc.Home.CFrame, 0.75) * vh.N(vj.RNG(-25, 25), vj.RNG(0, 25), vj.RNG(-25, 25)), vc.Home.CFrame, fl)
              if swait and typeof(swait) == "function" then
                swait()
              else
                wait()
              end
            end
            if vc.RemoveOnGoal then
              vg:destroy()
            end
          end
        end)()
        return (Part(a.Parent or va, a.Color or vb.N(0, 0, 0), a.Material or nil, a.Size or vc.N(1, 1, 1), a.CFrame or vd.CFrame, true, false))
      end
      function SoulSteal(a)
        a = a
      end
      function getRegion(a, b, c)
        a = a
        return workspace:FindPartsInRegion3WithIgnoreList(va.N(a - vb.N(1, 1, 1) * b / 2, a + vb.N(1, 1, 1) * b / 2), c, 100)
      end
      function clerp(a, b, c)
        a = a
        return a:lerp(b, c)
      end
      function GetTorso(a)
        a = a
        return a:FindFirstChild("Torso") or a:FindFirstChild("UpperTorso")
      end
      function ShowDamage(a, b, c, d)
        a = a
        coroutine.wrap(function()
          game.Debris:AddItem(NewInstance("Part", ve, {
            Material = Enum.Material.SmoothPlastic,
            RArmlectance = 0,
            Transparency = 1,
            BrickColor = BrickColor.new(vd or Color3.new(1, 0, 1)),
            Name = "Effect",
            Size = Vector3.new(0, 0, 0),
            Anchored = true
          }), vc or 2)
          NewInstance("Part", ve, {
            Material = Enum.Material.SmoothPlastic,
            RArmlectance = 0,
            Transparency = 1,
            BrickColor = BrickColor.new(vd or Color3.new(1, 0, 1)),
            Name = "Effect",
            Size = Vector3.new(0, 0, 0),
            Anchored = true
          }).Parent = game:GetService("Workspace")
          delay(0, function()
            for fe = 1, va / vb do
              wait(vb)
              vc.CFrame = CFrame.new(vd) + Vector3.new(0, fe / (va / vb), 0)
              ve.TextTransparency = fe / (va / vb)
              ve.TextStrokeTransparency = fe / (va / vb)
            end
            if vc and vc.Parent then
              vc:Destroy()
            end
          end)
        end)()
      end
      function DealDamage(a, b, c, d, e, g, h)
        a = a
        h = 0
        g = 0
        if a then
          if a:FindFirstChildOfClass("Humanoid") then
            for fn, fr in pairs(va) do
              if fr[1] == a:FindFirstChildOfClass("Humanoid") then
                if 0.1 > time() - fr[2] then
                else
                  va[fn] = nil
                end
              end
            end
            if false then
              if a:FindFirstChildOfClass("Humanoid").Health >= math.huge then
                a:BreakJoints()
                if a:FindFirstChild("Head") and a:FindFirstChildOfClass("Humanoid").Health > 0 then
                  ShowDamage(a.Head.CFrame * vb.N(0, 0, a.Head.Size.Z / 2).p + vc.N(0, 1.5, 0), "INSTANT", 1.5, vd.N(1, 0, 0))
                end
              elseif e == "Fire" then
              else
                vg.new("ObjectValue", (a:FindFirstChildOfClass("Humanoid"))).Name = "creator"
                vg.new("ObjectValue", (a:FindFirstChildOfClass("Humanoid"))).Value = vh
                game:service("Debris"):AddItem(vg.new("ObjectValue", (a:FindFirstChildOfClass("Humanoid"))), 0.35)
                if vj.RNG(1, 100) <= (g or 0) then
                  if a:FindFirstChild("Head") and a:FindFirstChildOfClass("Humanoid").Health > 0 then
                    ShowDamage(a.Head.CFrame * vb.N(0, 0, a.Head.Size.Z / 2).p + vc.N(0, 1.5, 0), "[CRIT] " .. 0 * (h or 2), 1.5, BrickColor.new("New Yeller").Color)
                  end
                  a:FindFirstChildOfClass("Humanoid").Health = a:FindFirstChildOfClass("Humanoid").Health - 0 * (h or 2)
                else
                  if a:FindFirstChild("Head") and a:FindFirstChildOfClass("Humanoid").Health > 0 then
                    ShowDamage(a.Head.CFrame * vb.N(0, 0, a.Head.Size.Z / 2).p + vc.N(0, 1.5, 0), 0, 1.5, vk.Color)
                  end
                  a:FindFirstChildOfClass("Humanoid").Health = a:FindFirstChildOfClass("Humanoid").Health - 0
                end
                if e == "Knockback" and GetTorso(a) then
                  game:service("Debris"):AddItem(NewInstance("BodyVelocity", GetTorso(a), {
                    P = 500,
                    maxForce = vc.N(math.huge, 0, math.huge),
                    velocity = vl.CFrame.lookVector * d + vl.Velocity / 1.05
                  }), 0.5)
                elseif e == "Knockdown" and GetTorso(a) then
                  a:FindFirstChildOfClass("Humanoid").PlatformStand = true
                  delay(1, function()
                    va.PlatformStand = false
                  end)
                  game:GetService("Debris"):AddItem(NewInstance("BodyVelocity", GetTorso(a), {
                    velocity = GetTorso(a).Position - (vl.Position + Vector3.new(0, 0, 0)).unit * d,
                    P = 5000,
                    maxForce = Vector3.new(8000, 8000, 8000)
                  }), 0.5)
                  game:GetService("Debris"):AddItem(NewInstance("BodyAngularVelocity", GetTorso(a), {
                    P = 3000,
                    maxTorque = Vector3.new(500000, 500000, 500000) * 50000000000000,
                    angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10))
                  }), 0.5)
                end
              end
            end
            table.insert(va, {
              a:FindFirstChildOfClass("Humanoid"),
              time()
            })
          end
        end
      end
      function AOEDamage(a, b, c, d, e, g)
        a = a
        for fl, fm in next, getRegion(a, b, {va}) do
          if fm.Parent and fm.Parent:FindFirstChildOfClass("Humanoid") then
            DealDamage(fm.Parent, c, d, e, g)
          end
        end
      end
      function AOEFunction(a, b, c)
        a = a
        for fh, fj in next, getRegion(a, b, {va}) do
          if fj.Parent and fj.Parent:FindFirstChildOfClass("Humanoid") then
            c(fj.Parent)
          end
        end
      end
      function ClosestHumanoid(a, b)
        a = a
        for fj, fk in next, getRegion(a, b or 10, {va}) do
          if math.huge > fk.CFrame.p - a.magnitude and fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid") and nil ~= (fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid")) and 0 < fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid").Health then
          end
        end
        if fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid") then
        end
        return fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid"), GetTorso(fk.Parent and fk.Parent:FindFirstChildOfClass("Humanoid").Parent) or nil
      end
      function AOEHeal(a, b, c)
        a = a
        for fj, fk in next, getRegion(a, b, {va}) do
          if (fk.Parent:FindFirstChildOfClass("Humanoid") or nil) and not {}[fk.Parent:FindFirstChildOfClass("Humanoid") or nil] then
            fk.Parent:FindFirstChildOfClass("Humanoid") or nil.Health = fk.Parent:FindFirstChildOfClass("Humanoid") or nil.Health + c
            if fk.Parent:FindFirstChild("Head") and fk.Parent:FindFirstChildOfClass("Humanoid") or nil.Health > 0 then
              ShowDamage(fk.Parent.Head.CFrame * vb.N(0, 0, fk.Parent.Head.Size.Z / 2).p + vc.N(0, 1.5, 0), "+" .. c, 1.5, BrickColor.new("Really red").Color)
            end
          end
        end
      end
      function Equip_Sawblade()
        for fd = 1, 5 do
          Effect({
            Effect = "Resize+AndFade",
            Color = BrickColor.new("Really red"),
            Material = Enum.Material.Neon,
            Size = va.N(3.5, 3.5, 3.5),
            CFrame = vb.CFrame * vc.N(0, -1, 0) * vc.A(vd.RRNG(0, 180), vd.RRNG(0, 180), vd.RRNG(0, 180)),
            FXSettings = {
              EndSize = va.N(0.05, 0.05, 0.05),
              EndIsIncrement = true
            }
          })
        end
        Part(ve, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, va.N(3.42, 3.42, 0.05), vc.N(), false, false).Transparency = 0.5
        return Part(ve, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, va.N(3.42, 3.42, 0.05), vc.N(), false, false), (NewInstance("Weld", ve, {
          Part0 = vb,
          Part1 = Part(ve, BrickColor.new("Really red"), Enum.Material.SmoothPlastic, va.N(3.42, 3.42, 0.05), vc.N(), false, false),
          C0 = vc.N(0, -1.25, 0)
        }))
      end
      function The_Necc()
        if ClosestHumanoid(va.CFrame.p, 5) then
          vb = true
          vc = false
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = vd
          pcall(function()
            va = vb.HumanoidRootPart
            va.Parent = nil
          end)
          for fk = 0, 4, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vh.C0 = clerp(vh.C0, CFrame.new(7.78455425E-13, 0.00629367586, -2.39849396E-06, 0.99999243, 1.23691279E-10, 0, 1.90985006E-11, 0.99998045, -0.00628617778, 9.31322575E-10, 0.00628614007, 0.999973059), 0.15)
            vj.C0 = clerp(vj.C0, CFrame.new(-0.496486545, -0.990821958, 0.021611277, 0.999870956, 1.90985006E-11, 0.0156118907, -9.81391422E-05, 0.99998045, 0.00628537685, -0.0156115862, -0.00628617778, 0.999851584), 0.15)
            vk.C0 = clerp(vk.C0, CFrame.new(0.498530418, -0.990985394, 0.0154574998, 0.999870956, 1.90985006E-11, 0.0156118907, -9.81391422E-05, 0.99998045, 0.00628537685, -0.0156115862, -0.00628617778, 0.999851584), 0.15)
            vl.C0 = clerp(vl.C0, CFrame.new(-1.0486517, 0.929213107, -0.824554026, 0.712753832, -0.694763601, -0.0963225588, 0.0692147464, 0.206324935, -0.976032555, 0.697985768, 0.689004064, 0.195146814), 0.15)
            vm.C0 = clerp(vm.C0, CFrame.new(0.386394978, 1.64370263, -1.084023, -0.617445648, -0.751786709, -0.231452331, -0.0510570146, 0.331923157, -0.941923738, 0.784950197, -0.569769561, -0.243328467), 0.15)
            vo.C0 = clerp(vo.C0, CFrame.new(8.16636839E-06, 1.49895489, -0.0144007429, 0.99999243, 3.67523171E-07, -1.61118805E-07, -3.56405508E-07, 0.997965038, 0.0637686625, 1.8440187E-07, -0.0637682825, 0.997957468), 0.15)
          end
          NewInstance("Weld", vd, {
            Part0 = ve,
            Part1 = ClosestHumanoid(va.CFrame.p, 5)
          }):destroy()
          if ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("Head") then
            Sound(ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("Head"), 1093102664, 1, 2, false, false, false):Play()
            Sound(ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("Head"), 1093102664, 1, 2, false, false, false).Ended:connect(function()
              va:Destroy()
            end)
          end
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = workspace
          ClosestHumanoid(va.CFrame.p, 5).Health = 0
          Ragdoll(ClosestHumanoid(va.CFrame.p, 5).Parent, false, true)
          for fk = 0, 1.5, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vh.C0 = clerp(vh.C0, CFrame.new(7.78455425E-13, 0.00629367586, -2.39849396E-06, 0.99999243, 1.23691279E-10, 0, 1.90985006E-11, 0.99998045, -0.00628617778, 9.31322575E-10, 0.00628614007, 0.999973059), 0.3)
            vj.C0 = clerp(vj.C0, CFrame.new(-0.496486545, -0.990821958, 0.021611277, 0.999870956, 1.90985006E-11, 0.0156118907, -9.81391422E-05, 0.99998045, 0.00628537685, -0.0156115862, -0.00628617778, 0.999851584), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(0.498530418, -0.990985394, 0.0154574998, 0.999870956, 1.90985006E-11, 0.0156118907, -9.81391422E-05, 0.99998045, 0.00628537685, -0.0156115862, -0.00628617778, 0.999851584), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(-1.47842193, 0.485131323, -0.0262347199, 0.0664671659, 0.993123412, -0.0963359103, -0.201927185, -0.0811635256, -0.976031899, -0.977139056, 0.0843269154, 0.195143938), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(2.33067179, 0.249403879, 0.270489573, 0.171869993, 0.978404701, -0.114792682, 0.105083257, -0.134070903, -0.985384524, -0.979495406, 0.157295257, -0.125856698), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(8.16636839E-06, 1.49895489, -0.0144007429, 0.99999243, 3.67523171E-07, -1.61118805E-07, -3.56405508E-07, 0.997965038, 0.0637686625, 1.8440187E-07, -0.0637682825, 0.997957468), 0.3)
          end
          vb = false
          vc = true
        end
      end
      function Hands_Off()
        if ClosestHumanoid(va.CFrame.p, 5) then
          vb.AllChildren(ClosestHumanoid(va.CFrame.p, 5).Parent, function(a)
            a = a
            if a.Name:lower():find("arm") then
              va = true
            end
          end, true)
          if not false then
            return
          end
          vc.WalkSpeed = 0
          vc.JumpPower = 0
          vd = true
          ve = false
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = vg
          pcall(function()
            va = vb.HumanoidRootPart
            va.Parent = nil
          end)
          for fl = 0, 4, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vk.C0 = clerp(vk.C0, CFrame.new(3.20564755E-13, 0.00629412755, 1.41908095E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.15)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.496493757, -0.990819633, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
            vm.C0 = clerp(vm.C0, CFrame.new(0.498533875, -0.990984261, 0.0154613676, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
            vo.C0 = clerp(vo.C0, CFrame.new(-1.42285931, 0.338565946, -0.110074639, 0.983876407, 0.1786367, 0.00868223887, -0.0932332501, 0.553717494, -0.827468753, -0.152623802, 0.813317537, 0.561444461), 0.15)
            vp.C0 = clerp(vp.C0, CFrame.new(1.374735, 0.282860518, -0.133752465, 0.973415911, -0.228878334, 0.00868532527, 0.135509402, 0.544919252, -0.827466309, 0.184656292, 0.806645751, 0.561448157), 0.15)
            vn.C0 = clerp(vn.C0, CFrame.new(8.16625652E-06, 1.49895275, -0.014400661, 0.999999225, 3.67464963E-07, -1.62050128E-07, -3.56478267E-07, 0.997964799, 0.0637686923, 1.8440187E-07, -0.0637686551, 0.997963905), 0.15)
          end
          Sound(ClosestHumanoid(va.CFrame.p, 5))
          Sound(ClosestHumanoid(va.CFrame.p, 5))
          vs = NewInstance("Part", vt, {
            Size = vu.N(1, 2, 1),
            BrickColor = ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("RightHand") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("RightLowerArm") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("RightUpperArm") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("Right Arm") or vr("Part").BrickColor,
            Material = "Plastic",
            CanCollide = false,
            Anchored = false,
            Locked = true
          })
          Mesh(vs, Enum.MeshType.FileMesh, "rbxasset://fonts/rightarm.mesh", "", vu.N(1, 1, 1), vu.N())
          vy = NewInstance("Part", vt, {
            Size = vu.N(1, 2, 1),
            BrickColor = ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("LeftHand") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("LeftLowerArm") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("LeftUpperArm") or ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("Left Arm") or vr("Part").BrickColor,
            Material = "Plastic",
            CanCollide = false,
            Anchored = false,
            Locked = true
          })
          Mesh(vy, Enum.MeshType.FileMesh, "rbxasset://fonts/leftarm.mesh", "", vu.N(1, 1, 1), vu.N())
          vz = NewInstance("Weld", vs, {
            Part0 = vq,
            Part1 = vs,
            C0 = vj.N(0, -1, 0) * vj.A(vw.R(90), 0, 0)
          })
          vx = NewInstance("Weld", vy, {
            Part0 = vQ,
            Part1 = vy,
            C0 = vj.N(0, -1, 0) * vj.A(vw.R(90), 0, 0)
          })
          vb.AllChildren(ClosestHumanoid(va.CFrame.p, 5).Parent, function(a)
            a = a
            if a.Name:lower():find("hand") then
              a:destroy()
            end
          end, true)
          if not vW then
            coroutine.wrap(function()
              repeat
                swait()
                BloodDrop(va.CFrame * vb.N(-0.5, 0.5, 0).p, va.CFrame * vb.N(-1, 0.5, 0).p, 15)
                BloodDrop(va.CFrame * vb.N(0.5, 0.5, 0).p, va.CFrame * vb.N(1, 0.5, 0).p, 15)
                vc.Health = vc.Health - 0.5
              until not vc.Parent
              vc.Health = 0
            end)()
          else
            coroutine.wrap(function()
              repeat
                swait()
                va.Health = va.Health - 0.5
              until not va.Parent
              va.Health = 0
            end)()
            Blood4(vu.N(0.5, 0.5, 0.5), ClosestHumanoid(va.CFrame.p, 5).CFrame).Parent, Blood4(vu.N(0.5, 0.5, 0.5), ClosestHumanoid(va.CFrame.p, 5).CFrame).Parent = ClosestHumanoid(va.CFrame.p, 5)
          end
          ClosestHumanoid(va.CFrame.p, 5).Died:connect(function()
            Ragdoll(va)
          end)
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = workspace
          Blood4(vu.N(0.5, 0.5, 0.5), ClosestHumanoid(va.CFrame.p, 5).CFrame).Parent = vs
          Blood4(vu.N(0.5, 0.5, 0.5), ClosestHumanoid(va.CFrame.p, 5).CFrame).Parent = vy
          NewInstance("Weld", vg, {
            Part0 = vh,
            Part1 = ClosestHumanoid(va.CFrame.p, 5)
          }):destroy()
          ClosestHumanoid(va.CFrame.p, 5).PlatformStand = false
          if nil then
            nil.Parent = ClosestHumanoid(va.CFrame.p, 5).Parent
            if ClosestHumanoid(va.CFrame.p, 5).Parent:FindFirstChild("RootJoint", true) then
              nil.RootJoint.Part0 = nil
              nil.RootJoint.Part1 = ClosestHumanoid(va.CFrame.p, 5)
            else
              ClosestHumanoid(va.CFrame.p, 5):BuildRigFromAttachments()
            end
          end
          for fu = 0, 3, 0.1 do
            swait()
            vk.C0 = clerp(vk.C0, CFrame.new(3.20564755E-13, 0.00629412755, 1.41908095E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.15)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.496493757, -0.990819633, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
            vm.C0 = clerp(vm.C0, CFrame.new(0.498533875, -0.990984261, 0.0154613676, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
            vo.C0 = clerp(vo.C0, CFrame.new(-1.25778806, 0.320386261, -0.139421374, 0.690939784, 0.722859621, 0.00868486147, -0.400907725, 0.393146276, -0.827471495, -0.601560116, 0.568251252, 0.561440408), 0.15)
            vp.C0 = clerp(vp.C0, CFrame.new(1.39739037, 0.354236364, -0.0289047062, 0.709462166, -0.704689503, 0.00868486147, 0.400770277, 0.393286407, -0.827471495, 0.579694867, 0.59054029, 0.561440408), 0.15)
            vn.C0 = clerp(vn.C0, CFrame.new(8.16625652E-06, 1.49895275, -0.014400661, 0.999999225, 3.67464963E-07, -1.62050128E-07, -3.56478267E-07, 0.997964799, 0.0637686923, 1.8440187E-07, -0.0637686551, 0.997963905), 0.15)
          end
          vc.WalkSpeed = 16
          vc.JumpPower = 50
          vd = false
          ve = true
        end
      end
      function ScrewMe()
        va = true
        vb = false
        for fd = 0, 2, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(-0.000601041073, 0.0062919003, -0.000300966523, 0.994017541, 0.000686608837, 0.109214716, 0, 0.99998033, -0.00628665462, -0.109216876, 0.00624904549, 0.993997931), 0.15)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.502559602, -0.990627766, 0.0518152229, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
          ve.C0 = clerp(ve.C0, CFrame.new(0.501642942, -0.991074204, 0.000842738897, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.12979531, 0.241689205, 0.149894863, 0.813591897, -0.571708977, 0.105910838, 0.505802035, 0.785755217, 0.356024235, -0.286762208, -0.236088455, 0.928455591), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(1.41494429, 0.493437499, 0.00856034085, 0.986078084, -0.165549055, 0.0156079903, 0.165468931, 0.986195028, 0.00630042888, -0.0164355561, -0.0036300756, 0.99985832), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-0.272200465, 1.60343766, -0.0909831151, -0.271778286, -0.29597038, 0.915717363, -0.178016067, 0.950573504, 0.254402429, -0.945752025, -0.0938713551, -0.311032623), 0.15)
        end
        for fh = 1, 3 do
          for fm = 0, 2, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, CFrame.new(-0.000597249367, 0.00629166188, -0.000301384629, 0.994017541, 0.000686608837, 0.109214716, 0, 0.99998033, -0.00628665462, -0.109216876, 0.00624904549, 0.993997931), 0.15)
            vd.C0 = clerp(vd.C0, CFrame.new(-0.502559602, -0.990627766, 0.0518152229, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
            ve.C0 = clerp(ve.C0, CFrame.new(0.501639128, -0.991074204, 0.000842381269, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.971063137, 0.544531465, -0.856619298, 0.824469268, -0.565411985, 0.0236563906, 0.239681676, 0.311018854, -0.919684827, 0.512643158, 0.763921857, 0.391944379), 0.15)
            vh.C0 = clerp(vh.C0, CFrame.new(1.36865759, 0.434063494, -0.243990004, 0.943695724, 0.286517411, 0.165366411, 0.0948955566, 0.244413704, -0.965016603, -0.316911817, 0.926374555, 0.203462943), 0.15)
            vj.C0 = clerp(vj.C0, CFrame.new(0.309692234, 1.56599295, -0.184076563, 0.752268493, 0.275064707, -0.598691583, 0.0132474303, 0.902184188, 0.431147963, 0.658723474, -0.332270145, 0.675040722), 0.15)
            NewInstance("Weld", vk, {
              Part0 = vo,
              Part1 = Part(vk, BrickColor.new("Really black"), Enum.Material.SmoothPlastic, vl.N(2.158, 0.29, 0.312), vm.CFrame, false, false),
              C0 = vp.N(0, -1.15, 0)
            }).C0 = clerp(NewInstance("Weld", vk, {
              Part0 = vo,
              Part1 = Part(vk, BrickColor.new("Really black"), Enum.Material.SmoothPlastic, vl.N(2.158, 0.29, 0.312), vm.CFrame, false, false),
              C0 = vp.N(0, -1.15, 0)
            }).C0, CFrame.new(0.754458785, -0.945940197, 0.0140114268, -0.867547691, -0.497354031, 8.15391541E-05, -7.91847706E-05, 0.00030207634, 1, -0.49735406, 0.867547691, -0.000301415101), 0.15)
          end
          for fm = 0, 2, 0.1 do
            swait()
            vc.C0 = clerp(vc.C0, CFrame.new(-0.000597249367, 0.00629166188, -0.000301384629, 0.994017541, 0.000686608837, 0.109214716, 0, 0.99998033, -0.00628665462, -0.109216876, 0.00624904549, 0.993997931), 0.15)
            vd.C0 = clerp(vd.C0, CFrame.new(-0.502559602, -0.990627766, 0.0518152229, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
            ve.C0 = clerp(ve.C0, CFrame.new(0.501639128, -0.991074204, 0.000842381269, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
            vg.C0 = clerp(vg.C0, CFrame.new(-0.952282608, 0.388567954, -0.813911676, 0.824469686, -0.527844906, 0.204033226, 0.23967658, -0.000909555703, -0.970852435, 0.512645066, 0.849340379, 0.12576215), 0.15)
            vh.C0 = clerp(vh.C0, CFrame.new(1.36865759, 0.434063494, -0.243990004, 0.943695724, 0.286517411, 0.165366411, 0.0948955566, 0.244413704, -0.965016603, -0.316911817, 0.926374555, 0.203462943), 0.15)
            vj.C0 = clerp(vj.C0, CFrame.new(0.309692234, 1.56599295, -0.184076563, 0.752268493, 0.275064707, -0.598691583, 0.0132474303, 0.902184188, 0.431147963, 0.658723474, -0.332270145, 0.675040722), 0.15)
            NewInstance("Weld", vk, {
              Part0 = vo,
              Part1 = Part(vk, BrickColor.new("Really black"), Enum.Material.SmoothPlastic, vl.N(2.158, 0.29, 0.312), vm.CFrame, false, false),
              C0 = vp.N(0, -1.15, 0)
            }).C0 = clerp(NewInstance("Weld", vk, {
              Part0 = vo,
              Part1 = Part(vk, BrickColor.new("Really black"), Enum.Material.SmoothPlastic, vl.N(2.158, 0.29, 0.312), vm.CFrame, false, false),
              C0 = vp.N(0, -1.15, 0)
            }).C0, CFrame.new(0.75445646, -0.891306043, 0.317142308, -0.867489815, -0.183382571, -0.462420344, -0.159916192, -0.777427077, 0.608304381, -0.471050501, 0.601646185, 0.645084083), 0.15)
          end
        end
        for fh = 0, 2, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(-0.000601041073, 0.0062919003, -0.000300966523, 0.994017541, 0.000686608837, 0.109214716, 0, 0.99998033, -0.00628665462, -0.109216876, 0.00624904549, 0.993997931), 0.15)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.502559602, -0.990627766, 0.0518152229, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
          ve.C0 = clerp(ve.C0, CFrame.new(0.501642942, -0.991074204, 0.000842738897, 0.995601892, 0, -0.0936849937, 0.000588965253, 0.99998033, 0.00625900552, 0.0936831385, -0.00628665462, 0.995582223), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.12979531, 0.241689205, 0.149894863, 0.813591897, -0.571708977, 0.105910838, 0.505802035, 0.785755217, 0.356024235, -0.286762208, -0.236088455, 0.928455591), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(1.41494429, 0.493437499, 0.00856034085, 0.986078084, -0.165549055, 0.0156079903, 0.165468931, 0.986195028, 0.00630042888, -0.0164355561, -0.0036300756, 0.99985832), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-0.272200465, 1.60343766, -0.0909831151, -0.271778286, -0.29597038, 0.915717363, -0.178016067, 0.950573504, 0.254402429, -0.945752025, -0.0938713551, -0.311032623), 0.15)
        end
        Part(vk, BrickColor.new("Really black"), Enum.Material.SmoothPlastic, vl.N(2.158, 0.29, 0.312), vm.CFrame, false, false):destroy()
        va = false
        vb = true
      end
      function SliceYou()
        va = true
        vb = false
        for fg = 0, 2, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(0.0029785831, 0.00629174896, 0.00529580005, 0.517270923, -0.00537902303, -0.855804324, 0, 0.99998033, -0.00628521619, 0.855821192, 0.00325116003, 0.517260671), 0.15)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.524694026, -0.992068648, -0.177415758, 0.503846943, 0, 0.863792896, -0.00542912632, 0.99998033, 0.00316678779, -0.863775849, -0.00628521619, 0.503836989), 0.15)
          ve.C0 = clerp(ve.C0, CFrame.new(0.863649905, -0.990154982, 0.147100359, 0.503846943, 0, 0.863792896, -0.00542912632, 0.99998033, 0.00316678779, -0.863775849, -0.00628521619, 0.503836989), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.15776694, 0.555799365, -0.115642846, -0.0494773015, 0.838752568, -0.54226011, -0.986161113, -0.127040714, -0.106522933, -0.15823549, 0.529485285, 0.833430767), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(1.41811252, 0.715449214, 0.00713690743, 0.924166977, -0.38166979, 0.0156050026, 0.381617904, 0.924298882, 0.00629791059, -0.0168274939, 0.00013487041, 0.999858379), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(-0.0103359073, 1.49896884, -0.0121970959, 0.517271042, -0.0492044352, 0.854405463, -0.00537938019, 0.998139322, 0.0607386976, -0.855804205, -0.0360145383, 0.516043782), 0.15)
        end
        for fg = 0, 3, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(0.0750166476, 0.00629172707, 0.115993313, -0.407934308, 0.00573777966, 0.912992895, 0, 0.99998033, -0.00628445856, -0.913010895, -0.00256364676, -0.407926261), 0.3)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.702545583, -0.991440296, -0.0774632096, -0.393630832, 0, -0.919268608, 0.00577710615, 0.99998033, -0.00247375714, 0.919250488, -0.00628445856, -0.393623054), 0.3)
          ve.C0 = clerp(ve.C0, CFrame.new(0.572302818, -0.991491556, -0.0655612499, -0.393630832, 0, -0.919268608, 0.00577710615, 0.99998033, -0.00247375714, 0.919250488, -0.00628445856, -0.393623054), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.42436278, 0.674626052, -0.273927838, 0.816972971, 0.196224883, -0.54226476, -0.298526257, 0.948434591, -0.106555678, 0.493393689, 0.248933315, 0.833423615), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(1.39865923, 0.565930247, 0.00839936361, -0.125458091, -0.991975904, 0.0156244934, 0.992089748, -0.125373363, 0.00629395852, -0.00428455323, 0.0162905455, 0.99985826), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(0.141048998, 1.4988662, -0.0285577606, -0.407934487, 0.0524925366, -0.911500514, 0.0057374211, 0.998473644, 0.054933507, 0.912992835, 0.0171796028, -0.40761295), 0.3)
        end
        Sound(vk, 367720620, false, false, false):Play()
        for fh = 0, 6, 0.1 do
          Equip_Sawblade().C0 = Equip_Sawblade().C0:lerp(Equip_Sawblade().C0 * vl.A(0, 0, vm.R(25)), 0.3)
          swait()
        end
        for fh = 0, 2, 0.1 do
          Equip_Sawblade().C0 = Equip_Sawblade().C0:lerp(Equip_Sawblade().C0 * vl.A(0, 0, vm.R(5)), 0.3)
          swait()
        end
        Sound(vk, 367720620, false, false, false):Play()
        for fh = 0, 1, 0.1 do
          Equip_Sawblade().C0 = Equip_Sawblade().C0:lerp(Equip_Sawblade().C0 * vl.A(0, 0, vm.R(25)), 0.3)
          swait()
        end
        Sound(vk, 367720620, false, false, false):Play()
        for fh = 0, 5, 0.1 do
          Equip_Sawblade().C0 = Equip_Sawblade().C0:lerp(Equip_Sawblade().C0 * vl.A(0, 0, vm.R(55)), 0.3)
          swait()
        end
        for fh = 1, 5 do
          Effect({
            Effect = "Resize+AndFade",
            Color = BrickColor.new("Really red"),
            Material = Enum.Material.Neon,
            Size = vo.N(3.5, 3.5, 3.5),
            CFrame = Equip_Sawblade().CFrame * vl.A(vm.RRNG(0, 180), vm.RRNG(0, 180), vm.RRNG(0, 180)),
            FXSettings = {
              EndSize = vo.N(0.05, 0.05, 0.05),
              EndIsIncrement = true
            }
          })
        end
        Equip_Sawblade():destroy()
        va = false
        vb = true
      end
      function Taunt()
        {SliceYou, ScrewMe}[va.RNG(1, #{SliceYou, ScrewMe})]()
      end
      function Aids()
        va.Playing = false
        repeat
          swait()
        until Sound(vb, {
          420701444,
          420701460,
          420701487
        }[vc.RNG(1, #{
          420701444,
          420701460,
          420701487
        })], 1, 5, false, false, false).IsLoaded
        Sound(vb, {
          420701444,
          420701460,
          420701487
        }[vc.RNG(1, #{
          420701444,
          420701460,
          420701487
        })], 1, 5, false, false, false):Play()
        Sound(vb, {
          420701444,
          420701460,
          420701487
        }[vc.RNG(1, #{
          420701444,
          420701460,
          420701487
        })], 1, 5, false, false, false).Ended:connect(function()
          va:destroy()
        end)
        vd = true
        ve = false
        for fh = 0, Sound(vb, {
          420701444,
          420701460,
          420701487
        }[vc.RNG(1, #{
          420701444,
          420701460,
          420701487
        })], 1, 5, false, false, false).TimeLength * vg / Sound(vb, {
          420701444,
          420701460,
          420701487
        }[vc.RNG(1, #{
          420701444,
          420701460,
          420701487
        })], 1, 5, false, false, false).Pitch do
          swait()
          vh.C0 = clerp(vh.C0, CFrame.new(0.0561925545, 0.006292901 + 0.2 * vc.C((0 + 1) / 16), -0.00967639871, 0.961586297, 0.00172359415, 0.274496257, 0, 0.99998033, -0.00627899449, -0.274501652, 0.00603779452, 0.961567342), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(-0.593769729, -0.99042201 - 0.2 * vc.C((0 + 1) / 16), 0.0849506408, 0.965754986, 0, -0.259456009, 0.00162912265, 0.99998033, 0.00606396981, 0.259450912, -0.00627899449, 0.965735972), 0.3)
          vk.C0 = clerp(vk.C0, CFrame.new(0.468464553, -0.991293669 - 0.2 * vc.C((0 + 1) / 16), -0.0339690484, 0.965754986, 0, -0.259456009, 0.00162912265, 0.99998033, 0.00606396981, 0.259450912, -0.00627899449, 0.965735972), 0.3)
          vl.C0 = clerp(vl.C0, CFrame.new(-1.15301001, 0.367895871, -0.145940349 + 0.2 * vc.C((0 + 1) / 16), 0.375669211, 0.913452208, -0.156454355, -0.926753879, 0.37026915, -0.0634673014, -4.41223383E-05, 0.168837398, 0.985643983), 0.3)
          vm.C0 = clerp(vm.C0, CFrame.new(0.998128295, 0.633566499, -0.753388047 + 0.2 * vc.C((0 + 1) / 16), 0.594308019, 0.804203451, 0.00742085278, -0.383671522, 0.29161948, -0.876215935, -0.706819832, 0.517895043, 0.481861711), 0.3)
          vo.C0 = clerp(vo.C0, CFrame.new(0.207638323, 1.47957158, -0.302699238, 0.745848298, 0.476892024, -0.465063959, 0.0606503561, 0.646653771, 0.760368645, 0.663349032, -0.595326006, 0.453382045), 0.3)
        end
        va.Playing = true
        vd = false
        ve = true
      end
      function OnceWas(a)
        a = a
        for fe, fg in next, a:children() do
          if fg:IsA("BasePart") then
            Effect({
              Parent = va,
              Effect = "Fade",
              Color = BrickColor.new("Crimson"),
              Material = Enum.Material.Glass,
              Size = fg.Size,
              CFrame = fg.CFrame,
              Frames = 90
            })
          end
        end
      end
      function Teleport(a)
        a = a
        OnceWas(va)
        Sound(vb, 235097614, 3, 1, false, true, true)
        Sound(vb, 75356820, 2, 1, false, true, true)
        vb.CFrame = vc.N(a.p)
        OnceWas(va)
      end
      function Dash()
        va = true
        Sound(vb, 235097614, 3, 1, false, true, true)
        Sound(vb, 75356820, 2, 1, false, true, true)
        for fd = 1, 5 do
          OnceWas(vc)
          vb.CFrame = vb.CFrame * vd.N(0, 0, -5)
          swait()
        end
        va = false
      end
      function Shriek()
        va = true
        vb = false
        Sound(vc, 198165368, 0.5, 10, false, false, false):Play()
        while Sound(vc, 198165368, 0.5, 10, false, false, false).Playing do
          swait()
          coroutine.wrap(function()
            AOEFunction(va.Position, 30, function(a)
              a = a
              if a:FindFirstChildOfClass("Humanoid") and a:FindFirstChild("Head") and 0 < a:FindFirstChildOfClass("Humanoid").Health then
                a:FindFirstChildOfClass("Humanoid").Health = 0
                Sound(a:FindFirstChild("Head"), 429400881, 1, 1, false, true, true)
                Ragdoll(a)
                swait()
                for fj, fk in next, Fragment((a:FindFirstChild("Head"))):children() do
                  fk.BrickColor = va
                  fk.Material = vb
                  fk.CanCollide = true
                  fk.Anchored = false
                end
                a:FindFirstChild("Head"):destroy()
              end
            end)
          end)()
          vg.C0 = clerp(vg.C0, CFrame.new(0.00956845004, -0.141102523, 0.612865508, 0.999947488, 0.00962571148, -0.00340035092, -0.00964800082, 0.782201111, -0.622951329, -0.00333659165, 0.622951448, 0.782252967), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(-0.495904773, -1.0368886, 0.0598222613, 0.999878109, -0.00964800082, 0.012275002, -0.000100981888, 0.782201111, 0.623026073, -0.0156124765, -0.622951329, 0.78210485), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(0.499093086, -1.03124118, 0.0517056584, 0.999878109, -0.00964800082, 0.012275002, -0.000100981888, 0.782201111, 0.623026073, -0.0156124765, -0.622951329, 0.78210485), 0.15)
          vk.C0 = clerp(vk.C0, CFrame.new(-1.23829794, 0.600065649, 0.16030249, -0.8319574, 0.546545088, -0.0955789387, 0.0976095572, -0.0254041255, -0.994900525, -0.54618609, -0.837044299, -0.0322128981), 0.15)
          vl.C0 = clerp(vl.C0, CFrame.new(1.40538526, 0.413302839, 0.119919479, 0.97065413, -0.226111293, -0.0818808898, 0.0516543165, -0.13650623, 0.989291787, -0.23486729, -0.96448946, -0.120820649), 0.15)
          vm.C0 = clerp(vm.C0, CFrame.new(3.62367791E-06, 1.56057274, 0.233575165, 1, 3.8058497E-06, -3.58493999E-05, -1.91188519E-05, 0.899042785, -0.437860936, 3.05641443E-05, 0.437861085, 0.899042606), 0.15)
        end
        va = false
        vb = true
      end
      function SawMeDaddy()
        if ClosestHumanoid(va.CFrame.p, 5) then
          vb = true
          vc = false
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = vd
          ve.WalkSpeed = 0
          ve.JumpPower = 0
          ClosestHumanoid(va.CFrame.p, 5).WalkSpeed = 0
          ClosestHumanoid(va.CFrame.p, 5).JumpPower = 0
          pcall(function()
            va.HumanoidRootPart:destroy()
          end)
          for fl = 0, 6, 0.1 do
            swait()
            Equip_Sawblade().C0 = Equip_Sawblade().C0:lerp(Equip_Sawblade().C0 * vh.A(0, 0, vj.R(5)), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.00836368278, 0.00629167072, 0.00190571044, 0.0349976346, 0.00628316449, 0.99936235, 0, 0.99998033, -0.00628704997, -0.999382019, 0.000220031856, 0.0349969491), 0.15)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.503456116, -0.990501761, 0.0718512386, 0.0505957417, 0, -0.998714209, 0.00627896562, 0.99998033, 0.00031809794, 0.998694539, -0.00628704997, 0.0505947471), 0.15)
            vm.C0 = clerp(vm.C0, CFrame.new(0.539414704, -0.991044283, 0.00562152406, 0.0505957417, 0, -0.998714209, 0.00627896562, 0.99998033, 0.00031809794, 0.998694539, -0.00628704997, 0.0505947471), 0.15)
            vo.C0 = clerp(vo.C0, CFrame.new(-1.40707266, 0.497466505, -0.00446076319, 0.980866492, 0.19405432, 0.0156163573, -0.19417055, 0.980947733, 0.00629086327, -0.0140980631, -0.00920273364, 0.999858439), 0.15)
            vp.C0 = clerp(vp.C0, CFrame.new(1.31421685, 0.81056267, 0.00814598706, -0.489612877, -0.871799946, 0.0156333037, 0.871937394, -0.489577413, 0.00628277427, 0.00217639096, 0.0167073887, 0.999858201), 0.15)
            vn.C0 = clerp(vn.C0, CFrame.new(0.00717293471, 1.49903798, -0.00130830682, 0.0349974521, 0.0574585311, -0.997728944, 0.00628280686, 0.998313606, 0.057712581, 0.99936235, -0.00828839932, 0.0345774256), 0.15)
          end
          Sound(va, 367720620, 1, 1, false, true, true)
          coroutine.wrap(function()
            repeat
              swait()
              va.C0 = va.C0:lerp(va.C0 * vb.A(0, 0, vc.R(45)), 0.3)
            until not vd.Parent
          end)()
          swait(60)
          Sound(ClosestHumanoid(va.CFrame.p, 5))
          Blood4(vr.N(0.5, 0.5, 0.5), ClosestHumanoid(va.CFrame.p, 5).CFrame).Parent = ClosestHumanoid(va.CFrame.p, 5)
          for fn = 0, 0.3, 0.001 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).Health = ClosestHumanoid(va.CFrame.p, 5).Health - 0.5
            if ClosestHumanoid(va.CFrame.p, 5).Health <= 0 then
              NewInstance("Weld", vd, {
                Part0 = vg,
                Part1 = ClosestHumanoid(va.CFrame.p, 5)
              }):destroy()
              Sound(ClosestHumanoid(va.CFrame.p, 5))
              break
            end
            vk.C0 = clerp(vk.C0, CFrame.new(-0.00836368278, 0.00629167072, 0.00190571044, 0.0349976346, 0.00628316449, 0.99936235, 0, 0.99998033, -0.00628704997, -0.999382019, 0.000220031856, 0.0349969491), fn)
            vl.C0 = clerp(vl.C0, CFrame.new(-0.503456116, -0.990501761, 0.0718512386, 0.0505957417, 0, -0.998714209, 0.00627896562, 0.99998033, 0.00031809794, 0.998694539, -0.00628704997, 0.0505947471), fn)
            vm.C0 = clerp(vm.C0, CFrame.new(0.539414704, -0.991044283, 0.00562152406, 0.0505957417, 0, -0.998714209, 0.00627896562, 0.99998033, 0.00031809794, 0.998694539, -0.00628704997, 0.0505947471), fn)
            vo.C0 = clerp(vo.C0, CFrame.new(-1.40707266, 0.497466505, -0.00446076319, 0.980866492, 0.19405432, 0.0156163573, -0.19417055, 0.980947733, 0.00629086327, -0.0140980631, -0.00920273364, 0.999858439), fn)
            vp.C0 = clerp(vp.C0, CFrame.new(1.18219912, 0.268655062, 0.0136158429, 0.6882689, -0.725287437, 0.0156234093, 0.725293934, 0.688410699, 0.00629597344, -0.0153217092, 0.00699824095, 0.99985826), fn)
            vn.C0 = clerp(vn.C0, CFrame.new(0.00717293471, 1.49903798, -0.00130830682, 0.0349974521, 0.0574585311, -0.997728944, 0.00628280686, 0.998313606, 0.057712581, 0.99936235, -0.00828839932, 0.0345774256), fn)
          end
          ClosestHumanoid(va.CFrame.p, 5).Health = 0
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = workspace
          Ragdoll(ClosestHumanoid(va.CFrame.p, 5).Parent)
          Sound(Equip_Sawblade()):destroy()
          for fn = 1, 5 do
            Effect({
              Effect = "Resize+AndFade",
              Color = BrickColor.new("Really red"),
              Material = Enum.Material.Neon,
              Size = vr.N(3.5, 3.5, 3.5),
              CFrame = Equip_Sawblade().CFrame * vh.A(vj.RRNG(0, 180), vj.RRNG(0, 180), vj.RRNG(0, 180)),
              FXSettings = {
                EndSize = vr.N(0.05, 0.05, 0.05),
                EndIsIncrement = true
              }
            })
          end
          ve.WalkSpeed = 16
          ve.JumpPower = 50
          Equip_Sawblade():destroy()
          vb = false
          vc = true
        end
      end
      function The_End()
        if ClosestHumanoid(va.CFrame.p, 5) then
          vb = true
          vc = false
          vd.WalkSpeed = 0
          vd.JumpPower = 0
          ClosestHumanoid(va.CFrame.p, 5).WalkSpeed = 0
          ClosestHumanoid(va.CFrame.p, 5).JumpPower = 0
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = ve
          pcall(function()
            va.HumanoidRootPart:destroy()
          end)
          for fj = 0, 2, 0.1 do
            swait()
            vj.C0 = clerp(vj.C0, CFrame.new(0.00184797007, 0.00629393011, 0.00175395911, 0.916352093, -0.00251661055, -0.400364727, 0, 0.99998033, -0.00628567068, 0.400372595, 0.0057598874, 0.916333973), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.565588713, -0.991164684, -0.032800708, 0.909990132, 0, 0.414630055, -0.00260622799, 0.99998033, 0.00571989827, -0.41462189, -0.00628567068, 0.909972131), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(0.562351584, -0.990811467, 0.0429569148, 0.909990132, 0, 0.414630055, -0.00260622799, 0.99998033, 0.00571989827, -0.41462189, -0.00628567068, 0.909972131), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.479936, 0.442725629, -0.241928637, 0.997844577, 0.0469278991, -0.0458690971, -0.0638397709, 0.532425106, -0.844066501, -0.015188396, 0.845175505, 0.534273386), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(1.32794857, 0.365926802, 0.17400004, 0.584510565, -0.811339498, 0.00870320201, 0.447906405, 0.331590444, 0.830317855, -0.676555634, -0.481431335, 0.557222128), 0.3)
            vp.C0 = clerp(vp.C0, CFrame.new(-0.00438193232, 1.49895084, -0.014841184, 0.916352212, -0.0230187047, 0.399710178, -0.00251696701, 0.997995079, 0.0632432774, -0.400364548, -0.0589591675, 0.914456904), 0.3)
          end
          Sound(va, 200065377, 1.3, 4, false, true, true)
          for fj = 0, 1, 0.1 do
            swait()
            vj.C0 = clerp(vj.C0, CFrame.new(0.0928741172, 0.00629402744, 0.0566893518, 0.948310614, 0.00199300773, 0.317336231, 0, 0.99998033, -0.00628030393, -0.31734252, 0.00595567934, 0.948291838), 0.2)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.645890057, -0.990359426, 0.0953748077, 0.953149736, 0, -0.302498937, 0.00189978536, 0.99998033, 0.00598607073, 0.302492946, -0.00628030393, 0.953130901), 0.2)
            vl.C0 = clerp(vl.C0, CFrame.new(0.44459179, -0.991404057, -0.0513649136, 0.953149736, 0, -0.302498937, 0.00189978536, 0.99998033, 0.00598607073, 0.302492946, -0.00628030393, 0.953130901), 0.2)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.47928679, 0.367728233, 0.116084039, 0.997845054, 0.0248440802, 0.0607300103, -0.0638346076, 0.581721425, 0.810879469, -0.0151824057, -0.813008547, 0.582053781), 0.2)
            vo.C0 = clerp(vo.C0, CFrame.new(1.48636484, 0.465858519, -0.373306572, -0.95769608, 0.284951091, -0.0402629375, -0.130770594, -0.306276649, 0.942917705, 0.256353855, 0.908293724, 0.330583185), 0.2)
            vp.C0 = clerp(vp.C0, CFrame.new(-0.068510659, 1.4984324, -0.0973624364, 0.948310554, 0.0182456542, -0.316817731, 0.00199265103, 0.997983873, 0.0634387434, 0.31733641, -0.0607909337, 0.946362138), 0.2)
          end
          NewInstance("Weld", ve, {
            Part0 = vg,
            Part1 = ClosestHumanoid(va.CFrame.p, 5)
          }):destroy()
          for fk = 0, 1, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vj.C0 = clerp(vj.C0, CFrame.new(3.20394752E-13, 0.00629078969, 1.39809708E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.496493757, -0.990819752, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(0.498526245, -0.990984261, 0.0154614868, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.29056597, 0.680865526, -0.0074476786, -0.953151584, -0.302089065, 0.0156119959, 0.302213609, -0.953219652, 0.0062854127, 0.0129829049, 0.0107091125, 0.999858022), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(1.26373434, 0.722399652, 0.00951428805, -0.951173186, 0.308261454, 0.0156119959, -0.308199704, -0.951300979, 0.0062854127, 0.0167892575, 0.0011669076, 0.999858022), 0.3)
            vp.C0 = clerp(vp.C0, CFrame.new(-1.17865966E-07, 1.4989531, -0.0143954754, 0.999999642, 2.11689621E-05, 1.13360584E-05, -1.50896085E-07, 0.477647185, -0.878551781, -2.40113586E-05, 0.878551543, 0.477646947), 0.3)
          end
          NewInstance("Weld", ve, {
            Part0 = vn,
            Part1 = ClosestHumanoid(va.CFrame.p, 5)
          }):destroy()
          for fl = 0, 6, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vj.C0 = clerp(vj.C0, CFrame.new(3.20394752E-13, 0.00629078969, 1.39809708E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.496493757, -0.990819752, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(0.498526245, -0.990984261, 0.0154614868, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.29056597, 0.680865526, -0.0074476786, -0.953151584, -0.302089065, 0.0156119959, 0.302213609, -0.953219652, 0.0062854127, 0.0129829049, 0.0107091125, 0.999858022), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(1.26373434, 0.722399652, 0.00951428805, -0.951173186, 0.308261454, 0.0156119959, -0.308199704, -0.951300979, 0.0062854127, 0.0167892575, 0.0011669076, 0.999858022), 0.3)
            vp.C0 = clerp(vp.C0, CFrame.new(-1.17865966E-07, 1.4989531, -0.0143954754, 0.999999642, 2.11689621E-05, 1.13360584E-05, -1.50896085E-07, 0.477647185, -0.878551781, -2.40113586E-05, 0.878551543, 0.477646947), 0.3)
          end
          Sound(ClosestHumanoid(va.CFrame.p, 5))
          Sound(ClosestHumanoid(va.CFrame.p, 5))
          NewInstance("Weld", ve, {
            Part0 = vg,
            Part1 = ClosestHumanoid(va.CFrame.p, 5)
          }):destroy()
          Blood(ClosestHumanoid(va.CFrame.p, 5).Size, ClosestHumanoid(va.CFrame.p, 5).CFrame * vh.A(0, vr.R(180), 0), 250)
          ClosestHumanoid(va.CFrame.p, 5).Health = 0
          for fl, fm in next, ClosestHumanoid(va.CFrame.p, 5).Parent:children() do
            if fm:IsA("Script") then
              fm.Disabled = true
              fm:destroy()
            end
          end
          Ragdoll(ClosestHumanoid(va.CFrame.p, 5).Parent, true)
          if not vs then
            coroutine.wrap(function()
              repeat
                swait()
                BloodDrop(va.CFrame * vb.N(0, -va.Size.Y / 2, 0).p, va.CFrame * vb.N(0, -va.Size.Y, 0).p, 15)
              until not vc.Parent
            end)()
            coroutine.wrap(function()
              repeat
                if va:FindFirstChild("LowerTorso") then
                  swait()
                  BloodDrop(va:FindFirstChild("LowerTorso").CFrame * vb.N(0, va:FindFirstChild("LowerTorso").Size.Y / 2, 0).p, va:FindFirstChild("LowerTorso").CFrame * vb.N(0, va:FindFirstChild("LowerTorso").Size.Y, 0).p, 15)
                end
              until not va.Parent
            end)()
          end
          for fl = 0, 1, 0.1 do
            swait()
            ClosestHumanoid(va.CFrame.p, 5).PlatformStand = true
            vj.C0 = clerp(vj.C0, CFrame.new(3.20394752E-13, 0.00629078969, 1.39809708E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.496493757, -0.990819752, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(0.498526245, -0.990984261, 0.0154614868, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.19203663, 0.569933176, 0.0160028264, -0.81626749, 0.577462554, 0.0156119959, -0.577441692, -0.816407859, 0.0062854127, 0.016375348, -0.0038844361, 0.999858022), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(1.22609437, 0.679628015, 0.010370885, -0.77247268, -0.634855568, 0.0156119959, 0.634996474, -0.772489607, 0.0062854127, 0.00806977227, 0.0147688743, 0.999858022), 0.3)
            vp.C0 = clerp(vp.C0, CFrame.new(-1.17865966E-07, 1.4989531, -0.0143954754, 0.999999642, 2.11689621E-05, 1.13360584E-05, -1.50896085E-07, 0.477647185, -0.878551781, -2.40113586E-05, 0.878551543, 0.477646947), 0.3)
          end
          for fl = 0, 4, 0.1 do
            swait()
            vj.C0 = clerp(vj.C0, CFrame.new(3.20394752E-13, 0.00629078969, 1.39809708E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
            vk.C0 = clerp(vk.C0, CFrame.new(-0.496493757, -0.990819752, 0.021611426, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
            vl.C0 = clerp(vl.C0, CFrame.new(0.498526245, -0.990984261, 0.0154614868, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
            vm.C0 = clerp(vm.C0, CFrame.new(-1.19203663, 0.569933176, 0.0160028264, -0.81626749, 0.577462554, 0.0156119959, -0.577441692, -0.816407859, 0.0062854127, 0.016375348, -0.0038844361, 0.999858022) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
            vo.C0 = clerp(vo.C0, CFrame.new(1.22609437, 0.679628015, 0.010370885, -0.77247268, -0.634855568, 0.0156119959, 0.634996474, -0.772489607, 0.0062854127, 0.00806977227, 0.0147688743, 0.999858022) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
            vp.C0 = clerp(vp.C0, CFrame.new(-1.17865966E-07, 1.4989531, -0.0143954754, 0.999999642, 2.11689621E-05, 1.13360584E-05, -1.50896085E-07, 0.477647185, -0.878551781, -2.40113586E-05, 0.878551543, 0.477646947) * vh.A(vr.RRNG(-5, 5), vr.RRNG(-5, 5), vr.RRNG(-5, 5)), 0.3)
          end
          ClosestHumanoid(va.CFrame.p, 5).Parent.Parent = workspace
          vb = false
          vc = true
          vd.WalkSpeed = 16
          vd.JumpPower = 50
        end
      end
      function ThrowArms()
        va = true
        vb = false
        for fd = 0, 3, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(3.20552612E-13, 0.00629388914, 1.4175821E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.15)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.496493757, -0.990822613, 0.0216114447, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
          ve.C0 = clerp(ve.C0, CFrame.new(0.498533875, -0.990984261, 0.0154613676, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.15)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.49870801, 0.639989734, 0.342571348, 0.999877751, -0.0114739574, -0.0105869146, -9.81397825E-05, -0.682732999, 0.730668128, -0.0156116877, -0.730577767, -0.682650685), 0.15)
          vh.C0 = clerp(vh.C0, CFrame.new(1.50170219, 0.685996532, 0.261634499, 0.999877751, -0.0114739574, -0.0105869146, -9.81397825E-05, -0.682732999, 0.730668128, -0.0156116877, -0.730577767, -0.682650685), 0.15)
          vj.C0 = clerp(vj.C0, CFrame.new(8.16625652E-06, 1.4989531, -0.0144006833, 0.999999225, 3.67464963E-07, -1.62050128E-07, -3.56478267E-07, 0.997964799, 0.0637686923, 1.8440187E-07, -0.0637686551, 0.997963905), 0.15)
        end
        Sound()
        vk:destroy()
        vl:destroy()
        Sound(vn, 541909763, 0.8, 5, false, true, true)
        vr.Debris:AddItem(NewInstance("BodyVelocity", vm, {
          velocity = Vector3.new(0, 10, 0) + vo.Hit.lookVector * 50,
          P = 5000,
          maxForce = Vector3.new(8000, 8000, 8000)
        }), 0.05)
        vr.Debris:AddItem(NewInstance("BodyVelocity", vp, {
          velocity = Vector3.new(0, 10, 0) + vo.Hit.lookVector * 50,
          P = 5000,
          maxForce = Vector3.new(8000, 8000, 8000)
        }), 0.05)
        vm.CanCollide = true
        vp.CanCollide = true
        vr.Debris:AddItem(vm, 5)
        vr.Debris:AddItem(vp, 5)
        vm = nil
        vp = nil
        for fg = 0, 1, 0.1 do
          swait()
          vc.C0 = clerp(vc.C0, CFrame.new(3.20552612E-13, 0.00629388914, 1.4175821E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.3)
          vd.C0 = clerp(vd.C0, CFrame.new(-0.496493757, -0.990822613, 0.0216114447, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
          ve.C0 = clerp(ve.C0, CFrame.new(0.498533875, -0.990984261, 0.0154613676, 0.999877751, -4.38656264E-11, 0.0156119959, -9.81397825E-05, 0.999980271, 0.0062854127, -0.0156116877, -0.00628618058, 0.999858022), 0.3)
          vg.C0 = clerp(vg.C0, CFrame.new(-1.50884342, 0.499208659, -0.305685878, 0.999877751, 0.0152528696, -0.00332931988, -9.81397825E-05, -0.20710893, -0.978317916, -0.0156116877, 0.978198647, -0.207082108), 0.3)
          vh.C0 = clerp(vh.C0, CFrame.new(1.4918015, 0.444425255, -0.370944679, 0.999877751, 0.0152528696, -0.00332931988, -9.81397825E-05, -0.20710893, -0.978317916, -0.0156116877, 0.978198647, -0.207082108), 0.3)
          vj.C0 = clerp(vj.C0, CFrame.new(8.16625652E-06, 1.4989531, -0.0144006833, 0.999999225, 3.67464963E-07, -1.62050128E-07, -3.56478267E-07, 0.997964799, 0.0637686923, 1.8440187E-07, -0.0637686551, 0.997963905), 0.3)
        end
        va = false
        vb = true
      end
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer:GetMouse().KeyDown:connect(function(a)
        a = a
        if va then
          return
        end
        if a == "q" then
          Teleport(vb.Hit * vc.N(0, 3.25, 0))
        end
        if a == "e" then
          Dash()
        end
        if not vd and not ve then
          if a == "z" then
            The_Necc()
          end
          if a == "x" then
            The_End()
          end
          if a == "c" then
            Hands_Off()
          end
          if a == "v" then
            SawMeDaddy()
          end
          if a == "b" then
            Shriek()
          end
          if a == "t" then
            Taunt()
          end
        end
      end)
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer:GetMouse().Button1Down:connect(function()
        if va then
          return
        end
        if vb and vc then
          ThrowArms()
        end
      end)
      setmetatable({}, {
        __index = function(a, b)
          a = a
          return game:service(b)
        end
      }).Players.LocalPlayer.Chatted:connect(function(a)
        a = a
        if a == "/e aeiou" then
          Sound(va, 221792881, 1, 5, false, true, true)
        end
        if a == "/e earthquake" then
          Sound(va, 1205111204, 1, 5, false, true, true)
        end
        if vb then
          return
        end
        if a == "/e dab" then
          Aids()
        end
      end)
      while true do
        swait()
        if Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, 1030796589, 1, 3, true, false, true) then
        end
        if not Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, 1030796589, 1, 3, true, false, true).Parent then
          Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, 1030796589, 1, 2, true, false, true).Name = "Music"
          Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, 1030796589, 1, 2, true, false, true).TimePosition = Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, 1030796589, 1, 3, true, false, true).TimePosition
        end
        if Sound(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character, 1030796589, 1, 2, true, false, true).Volume ~= 2 then
          Sound(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, 1030796589, 1, 2, true, false, true).Volume = 2
        end
        setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character["Right Arm"].Transparency = 1
        if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character) or "Idle") == "Walk" then
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0.95 + 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2, 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(15 - 45 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, 0, 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 0.95 - 0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2, -0.5 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(15 + 45 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))) + -{
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.S((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))) / 2.5, 0, 0) * {
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.A({
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.R(0 + 0.1 * {
            C = math.cos,
            R = math.rad,
            S = math.sin,
            P = math.pi,
            RNG = math.random,
            MRS = math.randomseed,
            H = math.huge,
            RRNG = function(a, b, c)
              a = a
              return math.rad(math.random(a, b) / (c or 1))
            end
          }.C((0 + 1) / (7 / (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, 0), (math.min(0.2 * (setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
        else
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Right Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1, 0), 0.3)
          NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1 = NewInstance("Motor", setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character, {
            Part0 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character.Torso,
            Part1 = setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character["Left Leg"],
            C0 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(-0.5 * 1, -1 * 1, 0),
            C1 = {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, 1 * 1, 0)
          }).C1:lerp({
            N = CFrame.new,
            A = CFrame.Angles,
            fEA = CFrame.fromEulerAnglesXYZ
          }.N(0, 1, 0), 0.3)
        end
        repeat
        until 0 > 60 * 10
        if true and not false and ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
          __index = function(a, b)
            a = a
            return game:service(b)
          end
        }).Players.LocalPlayer.Character) or "Idle") == "Idle" then
        else
        end
        for faA, faS in next, {
          [faA] = nil,
          [faA] = nil
        }, nil do
          if faA.Parent then
            for faK, faL in next, faA:children() do
              if faL:IsA("LocalScript") then
                faL.Disabled = false
              end
            end
            if faA:FindFirstChildOfClass("Humanoid") then
              faA:FindFirstChildOfClass("Humanoid").Name = "no escape lol"
              faA:FindFirstChildOfClass("Humanoid").PlatformStand = true
            else
            end
          else
          end
        end
        if true then
          if ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character) or "Idle") == "Idle" then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0, CFrame.new(0.00232864846, 0.00629545515 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.00257661846, 0.838281333, -0.00342716719, -0.545226395, 0, 0.99998033, -0.00628564507, 0.545237184, 0.00526913954, 0.838264763), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.725328565, -0.990803361 - 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.0247094855, 0.82966727, 0, 0.558258176, -0.00350901252, 0.99998033, 0.00521499431, -0.558247149, -0.00628564507, 0.829650879), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.576427579, -0.99124372 - 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), -0.02560886, 0.82966727, 0, 0.558258176, -0.00350901252, 0.99998033, 0.00521499431, -0.558247149, -0.00628564507, 0.829650879), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.46491873, 0.505438805 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), -0.00360340625, 0.996807694, 0.0782995075, 0.0156106055, -0.0784052685, 0.996901929, 0.00628136564, -0.0150704384, -0.0074852705, 0.999858379) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(-{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 16)), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.44824493, 0.497874349 + 0.2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16), 0.00803661905, 0.994963646, -0.0990139842, 0.0156099498, 0.0989264548, 0.995075107, 0.00628477754, -0.0161553323, -0.00470888987, 0.999858439) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(-{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / 16)), 0, -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16))), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(-0.00607250631, 1.49895012, -0.0144915879, 0.838281453, -0.0313475803, 0.544335127, -0.00342752389, 0.998023272, 0.0627533421, -0.545226216, -0.0544706844, 0.836516857) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 5 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / 16)), 0, 0), 0.3)
          elseif ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character) or "Idle") == "Walk" then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.N(0, -0.175 + 0.025 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)) + -{
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.S((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16) / 2)) / 7, 0) * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A(0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 8 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 2 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 - 45 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(5 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(0 + 45 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16)))), 0, {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.R(-5 + 10 * {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.C((0 + 1) / (7 / (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16))))), (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, (math.min(0.2 * (setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed / 16), 1)))
          elseif ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character) or "Idle") == "Fall" then
            if math.abs(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.x) >= 1 or math.abs(setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.z) >= 1 then
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0, NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0 * {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.A(math.min(math.max(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.R(65)), {
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.R(65)), 0, 0), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0, CFrame.new(-0.497912645, -1.0987643, -0.0683324337, 0.999878228, 0.00860835519, 0.0130246133, -0.00010142161, 0.837816596, -0.545952022, -0.015611981, 0.545884132, 0.837715328), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0, CFrame.new(0.499978393, -1.16382337, 0.109293163, 0.999878228, -0.0120433727, 0.00993486121, -0.00010142161, 0.631323814, 0.775519371, -0.015611981, -0.775425911, 0.631245613), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0, CFrame.new(-1.55211556, 0.576563478, -0.00269976072, 0.976067662, 0.216906726, 0.0156116467, -0.217024669, 0.976145923, 0.00628317893, -0.0138763804, -0.00952091813, 0.999858499), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0, CFrame.new(1.50182188, 0.636661649, 0.00632623257, 0.977592707, -0.209926367, 0.0156121543, 0.209851891, 0.977713108, 0.00628198683, -0.016582964, -0.00286500831, 0.999858439), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0, CFrame.new(1.14440072E-05, 1.49924362, -0.0143961608, 1.00000024, -5.82076609E-11, 0, 1.23691279E-10, 0.997964919, 0.0637660474, 0, -0.0637660623, 0.997965038), 0.2)
            else
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0, NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso
              }).C0 * {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.A(math.min(math.max(setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Velocity.Y / 100, -{
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.R(65)), {
                C = math.cos,
                R = math.rad,
                S = math.sin,
                P = math.pi,
                RNG = math.random,
                MRS = math.randomseed,
                H = math.huge,
                RRNG = function(a, b, c)
                  a = a
                  return math.rad(math.random(a, b) / (c or 1))
                end
              }.R(65)), 0, 0), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0, CFrame.new(-0.504374504, -0.291219354, -0.487436086, 0.999878228, -0.00438931212, 0.0149825988, -0.00010142161, 0.957819223, 0.287371844, -0.015611981, -0.287338346, 0.957701981), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Leg"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0.5 * 1, -1 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1 * 1, 0)
              }).C0, CFrame.new(0.453094482, -0.871358454, 0.0898642987, 0.985589385, -0.168456957, 0.0153662469, 0.162863791, 0.969548643, 0.182895929, -0.0457084104, -0.177757636, 0.983012319), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Left Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(-1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0, CFrame.new(-1.55211556, 0.576563478, -0.00269976072, 0.976067662, 0.216906726, 0.0156116467, -0.217024669, 0.976145923, 0.00628317893, -0.0138763804, -0.00952091813, 0.999858499), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character["Right Arm"],
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(1.5 * 1, 0.5 * 1, 0),
                C1 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 0.5 * 1, 0)
              }).C0, CFrame.new(1.50182188, 0.636661649, 0.00632623257, 0.977592707, -0.209926367, 0.0156121543, 0.209851891, 0.977713108, 0.00628198683, -0.016582964, -0.00286500831, 0.999858439), 0.2)
              NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character, {
                Part0 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Torso,
                Part1 = setmetatable({}, {
                  __index = function(a, b)
                    a = a
                    return game:service(b)
                  end
                }).Players.LocalPlayer.Character.Head,
                C0 = {
                  N = CFrame.new,
                  A = CFrame.Angles,
                  fEA = CFrame.fromEulerAnglesXYZ
                }.N(0, 1.5 * 1, 0)
              }).C0, CFrame.new(1.14440072E-05, 1.49924362, -0.0143961608, 1.00000024, -5.82076609E-11, 0, 1.23691279E-10, 0.997964919, 0.0637660474, 0, -0.0637660623, 0.997965038), 0.2)
            end
          elseif ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character) or "Idle") == "Paralyzed" then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0, 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10)), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10)), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-5, 15)), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 * {
              N = CFrame.new,
              A = CFrame.Angles,
              fEA = CFrame.fromEulerAnglesXYZ
            }.A({
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-10, 10), {
              C = math.cos,
              R = math.rad,
              S = math.sin,
              P = math.pi,
              RNG = math.random,
              MRS = math.randomseed,
              H = math.huge,
              RRNG = function(a, b, c)
                a = a
                return math.rad(math.random(a, b) / (c or 1))
              end
            }.RRNG(-15, 5)), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0:lerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, 0.3)
          elseif ("Paralyzed" or "Sit" or "Fall" or "Jump" or "Walk" or workspace:FindPartOnRay(Ray.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame.p, CFrame.new(setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position, setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position - Vector3.new(0, 1, 0)).lookVector.unit * 4), setmetatable({}, {
            __index = function(a, b)
              a = a
              return game:service(b)
            end
          }).Players.LocalPlayer.Character) or "Idle") == "Sit" then
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart"),
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso
            }).C0, CFrame.new(3.2050404E-13, 0.00629293546, 1.41158671E-06, 0.999999225, 5.09317033E-11, 0, -4.38656264E-11, 0.999980271, -0.00628618058, 0, 0.00628617639, 0.999979496), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(-0.686911047, -1.01880026, -0.25455457, 0.980693579, 0.195502773, 0.00425194856, -0.0504306704, 0.273862094, -0.960446, -0.188934311, 0.941688716, 0.278434128), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Leg"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0.5 * 1, -1 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1 * 1, 0)
            }).C0, CFrame.new(0.557953715, -1.03419244, -0.293038249, 0.986133933, -0.165894628, 0.00425344985, 0.0502241589, 0.273924351, -0.960439026, 0.158166528, 0.947335124, 0.278457999), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Left Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(-1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(-1.50518143, 0.551521897, -0.0714710951, 0.999877751, 0.0137732355, 0.00735067623, -9.81397825E-05, 0.47637102, -0.879244447, -0.0156116877, 0.879136324, 0.476314098), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character["Right Arm"],
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(1.5 * 1, 0.5 * 1, 0),
              C1 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 0.5 * 1, 0)
            }).C0, CFrame.new(1.4960835, 0.497820318, -0.0970379114, 0.999877751, 0.0137732355, 0.00735067623, -9.81397825E-05, 0.47637102, -0.879244447, -0.0156116877, 0.879136324, 0.476314098), 0.3)
            NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0 = clerp(NewInstance("Motor", setmetatable({}, {
              __index = function(a, b)
                a = a
                return game:service(b)
              end
            }).Players.LocalPlayer.Character, {
              Part0 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Torso,
              Part1 = setmetatable({}, {
                __index = function(a, b)
                  a = a
                  return game:service(b)
                end
              }).Players.LocalPlayer.Character.Head,
              C0 = {
                N = CFrame.new,
                A = CFrame.Angles,
                fEA = CFrame.fromEulerAnglesXYZ
              }.N(0, 1.5 * 1, 0)
            }).C0, CFrame.new(4.35156289E-06, 1.49895275, -0.0144044831, 0.999999225, 3.67464963E-07, -1.62050128E-07, -3.56478267E-07, 0.997964799, 0.0637686923, 1.8440187E-07, -0.0637686551, 0.997963905), 0.3)
          end
        end
      end
    end)
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Chips Hats", "4964938812", function()
    setclipboard("4964938812")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Wizard Hats", "5703072943", function()
    setclipboard("5703072943")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Banisher Hats", "6410510056", function()
    setclipboard("6410510056")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Knighty Death Hats", "4962510729", function()
    setclipboard("4962510729")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Daggerman Hats", "4962510729", function()
    setclipboard("4962510729")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Pixel FBI Hats", "5858232880", function()
    setclipboard("5858232880")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("SelexNitsu Hats", "4855525473", function()
    setclipboard("4855525473")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Airpod Shotty Hats", "6065664286", function()
    setclipboard("6065664286")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Scythe Hats", "6202460100", function()
    setclipboard("6202460100")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Axe Hats", "4820198802", function()
    setclipboard("4820198802")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Agent Hats", "4684948729,6198633506", function()
    setclipboard("4684948729,6198633506")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("BloodWater Hats", "4962455546,4684948729", function()
    setclipboard("4962455546,4684948729")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("High Hopes Gunner Hats", "4962455546", function()
    setclipboard("4962455546")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Hat List"):NewSection("Hats | Hat List (Clipboard)"):NewButton("Earthlord Hats", "4753300133,4506965901", function()
    setclipboard("4753300133,4506965901")
  end)
  loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("ID Player"):NewSection("ID Player | Mizt Animation Player"):NewTextBox("Animation ID", "Mizt ID Player", function(a)
    a = a
    animid = "rbxassetid://" .. a
    plr = game.Players.LocalPlayer
    bruhmomentrighthahahahhahah = plr.Character
    cf = bruhmomentrighthahahahhahah.HumanoidRootPart.CFrame
    t = bruhmomentrighthahahahhahah.Torso
    rs = t["Right Shoulder"]
    ls = t["Left Shoulder"]
    rh = t["Right Hip"]
    lh = t["Left Hip"]
    rj = bruhmomentrighthahahahhahah.HumanoidRootPart.RootJoint
    rsc0 = rs.C0
    lsc0 = ls.C0
    rhc0 = rh.C0
    lhc0 = lh.C0
    rjc0 = rj.C0
    gc0 = CFrame.new()
    orsc0 = rs.C0
    olsc0 = ls.C0
    orhc0 = rh.C0
    olhc0 = lh.C0
    orjc0 = rj.C0
    count2 = 100
    maxcount2 = 100
    game["Run Service"].Heartbeat:Connect(function()
      count2 = count2 + 1
      if count2 <= maxcount2 then
        rs.Transform = rs.Transform:Lerp(rsc0, count2 / maxcount2)
        ls.Transform = ls.Transform:Lerp(lsc0, count2 / maxcount2)
        rh.Transform = rh.Transform:Lerp(rhc0, count2 / maxcount2)
        lh.Transform = lh.Transform:Lerp(lhc0, count2 / maxcount2)
        rj.Transform = rj.Transform:Lerp(rjc0, count2 / maxcount2)
      end
    end)
    animid = game:GetObjects(animid)[1]
    function wait2(a)
      a = a
      if a < 0.1 then
        game.RunService.Heartbeat:Wait(1)
      else
        for fe = 1, a * 70 do
          game.RunService.Heartbeat:Wait(1)
        end
      end
    end
    anim = {}
    function kftotbl(a)
      a = a
      tbl3 = {}
      for fe, fg in pairs(a:GetDescendants()) do
        if fg:IsA("Pose") then
          tbl3[string.sub(fg.Name, 1, 1) .. string.sub(fg.Name, #fg.Name, #fg.Name)] = fg.CFrame
        end
      end
      return tbl3
    end
    for fe, fg in pairs(animid:GetChildren()) do
      if fg:IsA("Keyframe") then
        anim[fg.Time] = kftotbl(fg)
      end
    end
    function getnext(a, b)
      a = a
      c = 100
      rtrnv = 0
      for fg, fh in pairs(a) do
        if b < fg and fg - b < c then
          c = fg - b
          rtrnv = fg
        end
      end
      return rtrnv
    end
    count = 0
    char = game.Players.LocalPlayer.Character
    hhhh = game.Players.LocalPlayer.Character.Humanoid.Animator
    hhhh.Parent = nil
    for fe, fg in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
      fg:Stop()
    end
    while wait() do
      for fe, fg in pairs(anim) do
        asdf = getnext(anim, count)
        v = anim[asdf]
        if v.Lg then
          lhc0 = v.Lg
        end
        if v.Rg then
          rhc0 = v.Rg
        end
        if v.Lm then
          lsc0 = v.Lm
        end
        if v.Rm then
          rsc0 = v.Rm
        end
        if v.To then
          rjc0 = v.To
        end
        count2 = 0
        maxcount2 = asdf - count
        count = asdf
        wait2(asdf - count)
        count2 = maxcount2
        if v.Lg then
          char.Torso["Left Hip"].Transform = v.Lg
        end
        if v.Rg then
          char.Torso["Right Hip"].Transform = v.Rg
        end
        if v.Lm then
          char.Torso["Left Shoulder"].Transform = v.Lm
        end
        if v.Rm then
          char.Torso["Right Shoulder"].Transform = v.Rm
        end
        if v.To then
          char.HumanoidRootPart.RootJoint.Transform = v.To
        end
      end
    end
  end)
  for fR, fT in pairs({
    SchemeColor = Color3.fromRGB(134, 158, 255),
    Background = Color3.fromRGB(44, 47, 5),
    Header = Color3.fromRGB(35, 39, 42),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(153, 170, 181)
  }) do
    loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))().CreateLib("Selexity"):NewTab("Themes"):NewSection("Themes | Color"):NewColorPicker(fR, "Change your " .. fR, fT, function(a)
      a = a
      va:ChangeColor(vb, a)
    end)
  end
end)
